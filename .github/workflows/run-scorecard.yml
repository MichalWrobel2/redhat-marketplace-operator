name: Run Scorecard

on:
 workflow_run:
    workflows: ["Deploy Image"]
    branches:
      - "master"
      - "develop"
      - "feature/**"
      - "bugfix/**"
      - "release/**"
      - "hotfix/**"
    types:
      - completed
      - requested

jobs:
  scorecard:
    name: Scorecard
    runs-on: ubuntu-latest
    needs: [build, deploy]
    continue-on-error: true
    strategy:
      matrix:
        cr:
          - 'marketplace.redhat.com_v1alpha1_marketplaceconfig_cr.yaml'
          - 'marketplace.redhat.com_v1alpha1_meterbase_cr.yaml'
          - 'marketplace.redhat.com_v1alpha1_meterreport_cr.yaml'
          - 'marketplace.redhat.com_v1alpha1_meterdefinition_cr.yaml'
          - 'marketplace.redhat.com_v1alpha1_razeedeployment_cr.yaml'
          - 'marketplace.redhat.com_v1alpha1_remoteresources3_cr.yaml'
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get Vars
        id: vars
        run: |
          DOCKERTAG="${TAGPREFIX}$(make current-version)-${FILEHASH:0:6}"
          VERSION=$(make current-version)
          echo "::set-env name=VERSION::${VERSION}
          echo "::set-env name=OPERATOR_IMAGE::quay.io/rh-marketplace/redhat-marketplace-operator:${DOCKERTAG}
        env:
          FILEHASH: ${{ hashFiles('build/**', 'assets/**', 'cmd/**', 'pkg/**', 'version/**', 'go.sum', 'go.mod') }}

      - uses: engineerd/setup-kind@v0.3.0

      - name: Checking cluster info
        run: |
          kubectl cluster-info
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      - name: Install operator-sdk
        run: |
          make install-tools
          cd /tmp
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu && sudo mkdir -p /usr/local/bin/ && sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          python -m pip install --upgrade pip
          pip3 install -Iv operator-courier==$COURIER_VERSION
          sudo snap install yq
          echo "::add-path::/usr/local/bin"
        env:
          RELEASE_VERSION: v0.18.0
          COURIER_VERSION: 2.1.7

      - name: Run scorecard for ${{ matrix.cr }}
        shell: bash {0}
        continue-on-error: true
        run: |
          echo "Updating osdk to version ${VERSION}"
          make generate-csv
          yq w .osdk-scorecard.yaml.tpl 'scorecard.plugins.*.*.csv-path' deploy/olm-catalog/redhat-marketplace-operator/${VERSION}/redhat-marketplace-operator.v${VERSION}.clusterserviceversion.yaml  > .osdk-scorecard.yaml
          yq w -i .osdk-scorecard.yaml 'scorecard.plugins.*.*.cr-manifest.+' deploy/crds/${{ matrix.cr  }}
          ./scripts/scorecard.sh

      - name: Upload results
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.cr }}-results
          path: ./scorecard-output.json
