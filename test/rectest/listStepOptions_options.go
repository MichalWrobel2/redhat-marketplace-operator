// Copyright 2020 IBM Corp.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package rectest

// Code generated by github.com/launchdarkly/go-options.  DO NOT EDIT.

import (
	"k8s.io/apimachinery/pkg/runtime"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

type ApplyListStepOptionFunc func(c *listStepOptions) error

func (f ApplyListStepOptionFunc) apply(c *listStepOptions) error {
	return f(c)
}

func newListStepOptions(options ...ListStepOption) (listStepOptions, error) {
	var c listStepOptions
	err := applyListStepOptionsOptions(&c, options...)
	return c, err
}

func applyListStepOptionsOptions(c *listStepOptions, options ...ListStepOption) error {
	c.CheckResult = Ignore
	for _, o := range options {
		if err := o.apply(c); err != nil {
			return err
		}
	}
	return nil
}

type ListStepOption interface {
	apply(*listStepOptions) error
}

func ListWithObj(o runtime.Object) ApplyListStepOptionFunc {
	return func(c *listStepOptions) error {
		c.Obj = o
		return nil
	}
}

func ListWithFilter(o ...client.ListOption) ApplyListStepOptionFunc {
	return func(c *listStepOptions) error {
		c.Filter = o
		return nil
	}
}

func ListWithCheckResult(o ReconcilerTestValidationFunc) ApplyListStepOptionFunc {
	return func(c *listStepOptions) error {
		c.CheckResult = o
		return nil
	}
}
