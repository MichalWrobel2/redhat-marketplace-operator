
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: meterdefinitions.marketplace.redhat.com
spec:
  group: marketplace.redhat.com
  names:
    kind: MeterDefinition
    listKind: MeterDefinitionList
    plural: meterdefinitions
    singular: meterdefinition
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: MeterDefinition defines the meter workloads used to enable pay
        for use billing.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MeterDefinitionSpec defines the desired metering spec
          properties:
            installedBy:
              description: InstalledBy is a reference to the CSV that install the
                meter definition. This is used to determine an operator group.
              properties:
                groupVersionKind:
                  description: GroupVersionKind of the resource
                  properties:
                    apiVersion:
                      description: APIVersion of the CRD
                      type: string
                    kind:
                      description: Kind of the CRD
                      type: string
                  required:
                  - apiVersion
                  - kind
                  type: object
                name:
                  description: Name of the resource Required
                  type: string
                namespace:
                  description: Namespace of the resource Required
                  type: string
                uid:
                  description: Namespace of the resource
                  type: string
              required:
              - name
              - namespace
              type: object
            meterGroup:
              description: Group defines the operator group of the meter
              type: string
            meterKind:
              description: Kind defines the primary CRD kind of the meter
              type: string
          required:
          - meterGroup
          - meterKind
          type: object
        status:
          description: MeterDefinitionStatus defines the observed state of MeterDefinition
          properties:
            conditions:
              description: Conditions represent the latest available observations
                of an object's state
              items:
                description: "Condition represents an observation of an object's state.
                  Conditions are an extension mechanism intended to be used when the
                  details of an observation are not a priori known or would not apply
                  to all instances of a given Kind. \n Conditions should be added
                  to explicitly convey properties that users and components care about
                  rather than requiring those properties to be inferred from other
                  observations. Once defined, the meaning of a Condition can not be
                  changed arbitrarily - it becomes part of the API, and has the same
                  backwards- and forwards-compatibility concerns of any other part
                  of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase
                      representation of the category of cause of the current status.
                      It is intended to be used in concise output, such as one-line
                      kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is
                      typically a CamelCased word or short phrase. \n Condition types
                      should indicate state in the \"abnormal-true\" polarity. For
                      example, if the condition indicates when a policy is invalid,
                      the \"is valid\" case is probably the norm, so the condition
                      should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
