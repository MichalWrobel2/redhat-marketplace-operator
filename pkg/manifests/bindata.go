// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package manifests generated by go-bindata.// sources:
// ../../assets/metric-state/deployment.yaml
// ../../assets/metric-state/service-monitor.yaml
// ../../assets/metric-state/service.yaml
// ../../assets/prometheus/additional-scrape-configs.yaml
// ../../assets/prometheus/base-configmap.yaml
// ../../assets/prometheus/deployment.yaml
// ../../assets/prometheus/htpasswd-secret.yaml
// ../../assets/prometheus/kube-rbac-proxy-secret.yaml
// ../../assets/prometheus/kube-state-service-monitor.yaml
// ../../assets/prometheus/kubelet-serving-ca-bundle.yaml
// ../../assets/prometheus/prometheus-additional.yaml
// ../../assets/prometheus/prometheus-datasources-secret.yaml
// ../../assets/prometheus/prometheus-rules.yaml
// ../../assets/prometheus/prometheus.yaml
// ../../assets/prometheus/proxy-secret.yaml
// ../../assets/prometheus/service.yaml
// ../../assets/prometheus/serving-certs-ca-bundle.yaml
// ../../assets/prometheus-operator/deployment.yaml
// ../../assets/prometheus-operator/operator-certs-ca-bundle.yaml
// ../../assets/prometheus-operator/service.yaml
// ../../assets/razee/razee-job.yaml
// ../../assets/razee/razee-namespace.yaml
// ../../assets/razee/remote-resource-s3.yaml
// ../../assets/razee/watch-keeper.yaml
// ../../assets/reporter/job.yaml
package manifests

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsMetricStateDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x6f\xe3\x46\x0c\xbd\xfb\x57\xcc\x6d\x2f\x1d\xcb\xf2\xf6\x23\x3b\x40\x0e\xa9\xe3\x36\x05\xe2\x6c\x50\x07\xed\xd1\xa0\x47\xb4\x3d\xf0\x7c\x2d\x87\x72\x23\x14\xfd\xef\x85\x22\x67\x23\xcb\x76\x1c\xa3\x45\x81\x02\x99\x53\x42\x3e\x92\x4f\x24\xe7\x59\x82\x68\x7e\x43\x4a\x26\x78\x25\x20\xc6\x94\x6d\xf2\xde\xda\xf8\x42\x89\x6b\x8c\x36\x54\x0e\x3d\xf7\x1c\x32\x14\xc0\xa0\x7a\x42\x78\x70\xa8\x04\xad\x9c\x74\xc8\x64\xb4\x4c\x0c\x8c\x3d\x21\x2c\xcc\xd1\xa6\x1a\x22\xea\x4c\xfd\x75\x39\x47\xf2\xc8\x98\xfa\x26\x64\x3a\xb8\x18\x3c\x7a\x56\x42\x07\xcf\x14\xac\x45\x3a\x82\x3d\x52\x22\x45\xd4\x75\x7a\xc2\x68\x8d\x86\xa4\x44\xde\x13\x22\xa1\x45\xcd\x81\x9a\xc2\x0e\x58\xaf\x6e\x5b\x4c\xce\xe3\x72\x06\x1b\x21\x18\x5d\xb4\xc0\xb8\xad\xdc\xea\x51\x7d\xec\x0e\x89\x73\x69\x9c\x45\x44\x88\xe7\xd6\xd4\xa7\xce\x05\xc6\x23\xb5\x8a\xcb\xed\xd8\xf6\x02\x9b\x63\x1c\x2c\x8f\x7b\x09\x53\x28\x49\x63\x2b\x5f\x63\xfe\x52\x62\xe2\x8e\x55\x08\x1d\x4b\x25\xf2\xc1\xc0\x75\xec\x0e\x5d\xa0\xea\xc9\x35\x31\x2d\x5f\x42\x5d\x92\xe1\x6a\x14\x3c\xe3\x23\x2b\xf1\xe7\x5f\x2d\x2f\x23\x39\xe3\x81\x4d\xf0\x13\x4c\x09\x96\x78\x1f\xac\xd1\x95\x12\x3f\x81\xb5\x73\xd0\xeb\x87\x70\x1b\x96\xe9\xb3\x1f\x13\x05\x6a\x45\xc6\x40\x5d\x72\xf2\xa5\x39\xf7\x81\x58\x89\x8b\xc1\xc5\xa0\x43\xb3\x69\xd4\x1f\x38\x3f\x19\x99\x1f\x8c\x6c\x9a\x98\x5a\x3e\xa0\x65\x97\x47\x6b\x30\x07\xbc\x42\x4a\x1b\x96\x1c\x12\x17\x48\xb4\xe7\x7b\x6a\x18\x4a\x6b\x12\xa3\x97\x50\x14\x84\x29\x5d\xaa\x4f\x83\x4f\xc3\x3d\x2c\xdb\x24\xb5\x89\x2b\x24\x99\x4a\xc3\x98\x2e\x1f\x6e\xa7\xb3\xf1\xe8\xfa\x66\x3c\xfb\x75\x7a\x35\xfb\xfd\x97\x87\x9b\xd9\xd5\x78\x3a\xcb\x87\x17\xb3\x9f\x47\x93\xd9\xf4\xe6\x6a\xf8\xdd\xf7\xdf\xbc\xa0\xc6\xa3\xeb\x13\xb8\xbd\x3c\xa3\x1f\x47\x6f\xca\x73\x10\xf7\x4a\xb6\xbd\xa7\x2b\x63\x62\x42\x70\x97\x2b\xe6\xa8\xb2\x2c\x1f\xfe\xd0\x1f\xf4\x07\xfd\x5c\xd5\x83\xcd\x0e\x77\x03\x89\xe5\xc2\x58\xbc\xcc\x90\x75\xc6\x36\x65\x91\xcc\x06\x18\xeb\xbf\xfb\x9a\xf8\x60\xd8\x16\x23\xd7\x58\xbd\x12\xbd\xc6\xea\x28\x49\xa9\xa1\x15\xa9\x83\x5f\x98\xa5\x83\x98\xb2\x84\xb4\x31\x7e\xd9\x30\xd3\x20\xe7\xa5\x2f\x2c\x36\x66\x8d\x52\x43\x87\xd4\xf6\xb6\x7e\x29\xa1\x6a\x64\x84\x30\xa4\xac\xd6\x0a\x49\x73\xd0\x32\x52\x78\xac\xd4\x66\xd0\xff\xb6\xdf\x5e\xd1\x66\x3d\x3b\x30\x99\x9f\x79\x63\xf6\xb6\xec\x39\x71\x3d\x82\xf4\x8f\x55\xe3\x98\x68\x0c\xff\x1b\xcd\xd8\x04\x5b\x3a\x9c\x84\xd2\xef\x37\xc2\xd5\xd6\x7b\xe0\x95\x12\xdd\xd9\x1f\x6c\x48\x57\xa8\xeb\x35\xea\x00\x09\xa1\xf8\xec\x6d\xa5\xc4\x02\x6c\xc2\x13\x05\x4f\xae\xcc\x41\x1a\x6d\x68\x3a\x8a\x3d\xc6\xe4\xdf\xd5\xa7\x8f\xef\xfa\xf4\xa2\x4f\xf9\xbb\x3e\xbd\x41\x9f\x86\xe7\xeb\xd3\xc7\xe3\xfa\x24\xf7\x7f\x9d\xdf\x75\xea\xff\xaf\x53\x3e\x14\x38\xdd\xf9\x0e\xa8\xcf\x1c\x19\x3a\xaf\xd0\x21\x29\x61\x8d\x2f\x1f\xbf\x82\xea\x50\x49\xc1\x62\x07\xe9\x20\x31\x92\x12\x1f\x3e\x6c\xa1\x91\x4c\x78\x1a\xa5\x85\x94\xee\x1a\xca\x55\x62\x74\x52\xdb\xb2\xc6\x4a\x4d\x86\x8d\x06\xdb\x3b\x35\xfb\xed\xcd\xb9\xd2\xba\xee\x5c\x93\x8b\xb0\x58\x01\x4b\x07\xb4\x46\x8e\x16\x34\xca\x10\x91\x80\xbf\xce\x9d\x83\xad\xff\x37\xc1\xef\xbc\xd8\xe3\x62\x81\x9a\x95\xb8\x0b\x53\xbd\xc2\xa2\xdc\x69\xd9\x1a\x2b\x75\xe2\x11\x5b\xe8\xe7\x82\x4a\x8c\x1f\x4d\xe2\xe7\x2d\x68\x96\xed\xc0\xd7\xc4\x89\xcd\x49\xa8\x09\x79\x77\x3d\x1b\xdb\xdd\xe9\xf0\xa7\x8b\xbd\x30\xcb\x09\xc4\xdd\x0c\x6f\xdd\x96\xd7\x71\x7f\x07\x00\x00\xff\xff\x5a\xa9\xda\x19\xf7\x0e\x00\x00")

func assetsMetricStateDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateDeploymentYaml,
		"assets/metric-state/deployment.yaml",
	)
}

func assetsMetricStateDeploymentYaml() (*asset, error) {
	bytes, err := assetsMetricStateDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/deployment.yaml", size: 3831, mode: os.FileMode(420), modTime: time.Unix(1596174789, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMetricStateServiceMonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x53\x4d\x8f\xd4\x30\x0c\xbd\xcf\xaf\xf0\x1f\x48\x2b\x38\xa1\x5e\x91\x38\x2d\x5c\x58\x71\x77\xdd\xc7\x34\x4c\x62\x47\x8e\x3b\xbf\x1f\xb5\x1d\xd0\x72\x58\xa4\x95\xb8\x70\x73\x5e\xfc\xf1\xfc\x92\xc7\x2d\x7f\x83\xf7\x6c\x3a\x51\x35\xcd\x61\x9e\xf5\x3a\x88\x39\xac\x0f\x62\x75\xbc\xbf\xbb\xdc\xb2\x2e\x13\x7d\x85\xdf\xb3\xe0\xf3\x99\x75\xa9\x08\x5e\x38\x78\xba\x10\x15\x9e\x51\xfa\x1e\x11\x71\x6b\xc3\x6d\x9b\xe1\x8a\x40\x1f\xb2\x8d\x62\xb5\x99\x42\x63\x22\x31\x0d\xb7\x52\xe0\xaf\xe4\x2a\x57\x4c\xe4\x6b\x4d\x15\xe1\x59\x52\x0f\x0e\x5c\x88\x5e\xb9\xe8\x0d\xb2\xcf\x85\x2e\xcd\xb2\xc6\x41\x22\xd1\x0c\x76\xf8\xb3\xdd\xa0\x9f\x72\xc1\x44\xe3\x9d\x7d\xf4\x4d\xc7\x0e\x71\x44\x1f\xff\x1c\xdb\xcf\xdd\x58\xc4\x36\x8d\x31\xf6\xc2\x83\xe1\x6a\x6a\xfe\x74\xae\x47\xe1\x1b\x0e\x34\x6b\xc0\xef\x5c\x26\x7a\x5f\x0f\xa0\x99\xc7\x44\x6b\x44\xeb\xc7\xb9\xcb\x8a\x9d\xef\x4b\xc4\xb9\xe1\x39\x57\xd8\x16\xbf\xeb\xa2\xf4\x8f\xa6\xdf\xf3\xf5\xd4\x8e\x48\xf8\xc1\x17\x21\x63\x73\xab\x88\x15\x5b\x1f\xe5\xc8\xaa\xdc\xfa\xc9\x55\xaf\x49\xe0\xd1\x93\x70\x9a\x37\x5d\x0a\x7e\xed\x90\x84\x07\xf1\x78\xf4\xdb\x41\xf8\x97\x43\xbc\x33\x4e\xbb\x92\xc9\xd1\x0a\x0b\x96\xc4\x91\x7c\xd3\xc8\x15\xff\x56\xb8\xbf\x49\xf4\x78\xc2\xff\x5a\xaa\x1f\x36\x1f\xdf\x62\xa2\xdb\x87\x9e\xb8\xb5\xcb\xde\xa1\x40\xc2\xfc\x64\x58\x39\x64\x7d\x7a\xe1\x8c\xb7\x79\xe3\x0d\xee\xf8\x19\x00\x00\xff\xff\x74\xfb\x99\x7d\xc5\x03\x00\x00")

func assetsMetricStateServiceMonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateServiceMonitorYaml,
		"assets/metric-state/service-monitor.yaml",
	)
}

func assetsMetricStateServiceMonitorYaml() (*asset, error) {
	bytes, err := assetsMetricStateServiceMonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/service-monitor.yaml", size: 965, mode: os.FileMode(420), modTime: time.Unix(1595995577, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMetricStateServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xb1\x6e\x02\x31\x10\x44\x7b\x7f\xc5\xfe\x80\x2f\x47\xd2\x70\xee\xa2\x54\x74\x48\x91\xd2\xfb\xcc\x00\x16\xbe\xb5\xe5\x5d\x88\xf8\xfb\xe8\xe0\x50\x20\x3a\xca\x94\x3b\x3b\x6f\xc6\x96\xed\x4b\xfc\x42\x95\x98\xd9\xd1\x69\x61\x0e\x91\x37\x8e\x3e\x51\x4f\x31\xc0\x0c\x50\xbf\xf1\xea\x9d\x21\xf2\xcc\x59\xbd\xc6\xcc\x32\x8e\x44\x72\x35\x35\x3d\xd4\x37\xb9\x80\x65\x1f\xb7\xda\xc4\xfc\x72\xd9\xf0\xce\x06\x54\xb5\x82\x50\xa1\x96\xfd\x00\x47\x75\x3f\xd8\x01\x5a\x63\xb0\xa2\x5e\x61\x35\x89\x21\x4a\xbe\x47\x9a\x62\x7d\x29\xcd\xe1\xd8\xa3\x32\x14\x32\xc6\x85\x3c\x94\xcc\x60\x75\x14\x32\x6b\xcd\x29\xa1\x3e\xf1\xce\xd7\x18\xa2\x27\xfd\xd3\x25\x8c\x14\x84\xb1\xbf\xe4\xaa\xd3\x41\xec\xc4\x7c\xa3\xbf\xcc\xd7\xa5\xa3\x65\xbb\x6c\x27\x41\x7d\xdd\x41\xd7\x17\xf9\x66\xbb\x61\xd7\x1a\xf9\x8b\x2e\x66\xd0\x7b\xeb\x0d\xdf\xab\x96\x47\xb8\x6b\xbb\xd7\x19\xf8\xd7\xf8\x80\xda\xb9\xfe\xae\xed\xde\x9e\x45\xdc\x01\x82\x84\xa0\xb9\xfe\xeb\x83\x08\x64\xfc\x75\xef\xdb\x6d\xe4\xa8\x67\x47\x1f\x29\x82\x75\xb5\x36\x44\x7a\x2e\x18\x85\xa3\x28\xea\x6a\x6d\x7e\x02\x00\x00\xff\xff\x0c\x94\xff\x14\xa5\x02\x00\x00")

func assetsMetricStateServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateServiceYaml,
		"assets/metric-state/service.yaml",
	)
}

func assetsMetricStateServiceYaml() (*asset, error) {
	bytes, err := assetsMetricStateServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/service.yaml", size: 677, mode: os.FileMode(420), modTime: time.Unix(1595995577, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusAdditionalScrapeConfigsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc9\x31\x0a\x82\x31\x0c\x05\xe0\x3d\xa7\xc8\x05\x3a\xb8\xf6\x1a\x82\xfb\xb3\x7d\x6a\xd0\xa6\x3f\x49\x70\x11\xef\x2e\x38\x7f\x38\xec\xc2\x48\xdb\xde\xf5\x7d\x92\x89\x42\xd7\xcf\x57\x9e\xe6\xb3\xeb\x99\x23\x58\xb2\x58\xf8\x8b\xa8\x3a\x16\xbb\xc6\x63\xb5\xc5\x62\x5c\x91\x6c\x98\xd3\xca\xb6\xe3\xd5\x72\x04\x0e\xb6\xb1\xfd\x66\xf7\x94\x5f\x00\x00\x00\xff\xff\x49\x3e\x20\xcd\x5f\x00\x00\x00")

func assetsPrometheusAdditionalScrapeConfigsYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusAdditionalScrapeConfigsYaml,
		"assets/prometheus/additional-scrape-configs.yaml",
	)
}

func assetsPrometheusAdditionalScrapeConfigsYaml() (*asset, error) {
	bytes, err := assetsPrometheusAdditionalScrapeConfigsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/additional-scrape-configs.yaml", size: 95, mode: os.FileMode(420), modTime: time.Unix(1596164441, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusBaseConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\x1b\x37\x10\xbd\xeb\x57\x0c\x92\x00\xb6\x61\x4b\x81\x03\xf4\x50\x36\x6e\x80\x16\x39\xb6\xa7\xa2\x17\xd7\x25\x66\x97\x23\x2d\x6b\x2e\x87\x20\xb9\x8e\x5c\xf4\xc7\x17\xe4\x72\x3f\xa4\xca\x52\x64\xa4\x27\x01\xcb\x79\x6f\x1e\x1f\x87\x8f\x7a\xd4\x56\x09\xf8\x99\xed\x5a\x6f\x7e\x41\xb7\x40\xa7\x7f\x27\x1f\x34\x5b\x01\x4f\xb7\x8b\x96\x22\x2a\x8c\x28\x16\x00\x16\x5b\x12\xe0\x3c\xb7\x14\x1b\xea\xc2\xb2\xc2\x40\xcb\x3a\x43\xcb\x72\x70\x58\x93\x00\x45\x6b\xec\x4c\x5c\x0c\xc8\x09\xb3\x7a\x6e\x8d\x80\x7f\x16\x00\x00\xa1\xf6\xe8\x48\xf6\x04\x41\xe4\x6f\x6f\xe1\xf3\x16\x5b\x67\xa8\xac\x42\xbf\x0a\x6b\xf6\x89\xa5\xd2\x76\x03\x81\xfc\x93\xae\x29\xc0\x93\x46\x88\x0d\xc1\x4f\x06\xeb\xc7\x8a\xb7\xf0\x79\xeb\xd8\x47\xf2\xab\x9e\xab\x30\xfe\xd6\x10\x78\x32\x58\x91\x49\x70\x34\x86\xbf\x84\x0c\xc4\x3a\x76\x68\x06\xc2\xa1\x25\x59\xe5\x58\xdb\x08\x91\xa1\x1a\x14\x74\x9e\x54\xe1\x4b\x5a\xd0\x18\x60\x0f\x6c\xcd\x33\x04\x6e\x69\x14\xd5\xb7\x5e\xc2\x5f\x5c\xc9\xde\xb0\x8b\xc7\xae\x22\x6f\x29\x52\x58\x0e\x55\x17\x8b\x5c\x06\xd0\x52\xf4\xba\x0e\xd2\x61\x6c\x04\xbc\x4f\x5b\xa4\xb2\xe4\xd0\x63\x5b\x6c\xc9\xa5\xac\x3a\x43\x02\xee\x9b\x18\x9d\xfc\xb0\xdd\x3e\x0c\x24\x53\x03\x19\xd4\xae\x9f\x49\x8a\xe7\x04\x2b\xad\x07\x4c\x31\x64\xbf\x7a\xf2\xbf\x14\x24\x13\xb2\xaa\x03\x7b\x85\xd8\x60\x84\x06\x9f\x08\xde\x50\x0f\x5b\x69\x7e\x1f\x1a\xee\x8c\x92\x15\xc9\x0c\x54\x70\x07\xd1\x77\xf4\x06\xd0\x5a\x8e\x18\x35\xdb\xb1\x1b\x2c\x21\x70\xe7\x6b\x92\xb9\x5b\x10\x70\x2f\x65\x1a\x3a\x39\xdf\x54\xdf\x4f\x4e\x78\x59\xda\x49\xcd\x72\xbf\xdd\xc3\x44\x0e\xe9\x84\xf3\x28\x3f\x12\xb9\xf9\x77\x4f\x1b\xda\x8a\xac\x6b\xf4\xe9\xbf\x42\x50\x29\x4f\x21\x48\xf9\x30\x9e\x42\x44\xbf\xa1\xd8\x17\x09\x90\x32\x9f\x92\xec\xbf\x8e\x4c\xfb\x45\x23\xcf\x48\xe3\xc9\x19\xac\xa9\x25\x1b\x05\x54\x65\x7e\x97\x34\xcc\xef\xe0\x66\xcd\xad\xf8\xfe\xf6\xf6\xbb\x23\x1a\xe7\x02\x5e\x92\xa9\x6d\x88\x68\xeb\x69\xab\x83\x2d\x79\xbd\x45\x37\xd3\x95\x7d\x79\xf9\x0c\xfa\xa9\xb9\x5c\x5d\x5f\x1d\xd1\xb4\x0f\x1e\xa3\xe1\x25\x81\x87\x6a\xcf\xe0\x1f\xc4\x25\xec\x57\xb6\x58\x9c\x8e\x1b\x56\xe1\xbc\x1c\x71\xac\x06\x9e\x13\xd1\x91\x40\x8a\x6a\x83\x9e\x14\xa4\x33\x0f\x70\x99\x5b\xfa\xb8\x5c\x7b\xa2\xa2\x1d\xf4\x1a\x2c\x5b\x02\x1d\xc6\xf2\xab\x42\xb5\x93\x3e\x99\xe2\x78\xf4\xa4\xed\x5c\x9c\x95\x18\x8e\xd5\x6b\xd2\xa2\x38\x90\xc5\xa5\xa6\x53\x4a\x8c\xa8\xc3\x69\xd1\x03\x0f\xc5\xc5\xea\xbc\xbc\x70\xac\x4e\x66\x45\x69\xf6\xca\xb0\x78\x7b\xcc\x80\xba\x0b\x91\x5b\xfd\x37\x95\x74\x87\x14\xee\x90\x1e\x4b\x05\x6c\xb3\xad\x87\x8c\xe8\x8b\xf3\x4b\x00\x77\xf0\x71\x86\xfd\xf1\x7f\xf1\x62\xd6\xef\xa0\x0b\x25\xa2\xe6\x4b\xfb\xb9\x36\x7f\xbd\xc6\x70\x9b\x5b\x36\xcb\x89\xa3\x96\xcd\x67\x26\x68\xbb\x31\x74\x03\x8a\x82\x1e\xae\x47\xbe\x38\xe9\xd2\xcc\xcd\x9b\x3b\xba\x3b\x52\xfd\x1f\x8b\x0c\xbc\x83\x8f\xe9\xf7\x05\x0b\x7f\xe5\x48\xfd\x7c\xce\x42\x3a\xdd\xb6\x96\x95\x5e\x6b\x52\xd0\x90\xa7\x1b\x08\x9c\xae\x62\xea\x53\xb3\x8d\xa8\x2d\xf9\x70\xd1\xdf\xba\x91\x0b\xfd\x74\xa7\x6f\x92\xd8\xe7\x7c\xd5\xbf\x68\x63\x52\x16\xe8\x8d\x65\x4f\xea\xc4\xf1\x8d\x22\x6e\x0e\x64\xf0\x91\xb9\x9e\x76\xfc\xb5\x67\x39\x9c\xd0\xfd\x9f\xe2\xe1\xfa\xea\xf2\x93\x10\x7f\xa8\xeb\xab\x4f\x3f\x5c\xa6\x9f\xdd\xc2\xd9\x53\xf5\xee\x56\xbc\xfb\x70\x6c\x24\xf6\x9f\xba\xd7\xbc\x35\x69\x9f\xdf\xea\x9d\x39\xec\xc0\x37\x7e\x7f\x92\xe0\xdd\xb7\xe7\xec\xb6\x03\xc5\xe2\xdf\x00\x00\x00\xff\xff\x00\x36\x77\xa1\x91\x0b\x00\x00")

func assetsPrometheusBaseConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusBaseConfigmapYaml,
		"assets/prometheus/base-configmap.yaml",
	)
}

func assetsPrometheusBaseConfigmapYaml() (*asset, error) {
	bytes, err := assetsPrometheusBaseConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/base-configmap.yaml", size: 2961, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x4f\x8f\xdb\xb6\x13\xbd\xfb\x53\x10\x39\xff\x68\xeb\xbf\x25\x02\x06\x7e\xdb\xcd\xb6\x29\x90\x4d\x82\x6e\xd0\x1e\x8d\x11\x35\xb2\x09\x53\xa4\x42\x8e\x8c\x35\x8a\x7e\xf7\x42\xb6\xd7\x91\xd6\xde\xec\x3a\xc7\xea\x24\xcd\xbc\x19\xbe\x19\xce\xa3\x08\xad\xfa\x13\x9d\x57\xd6\x08\x06\x6d\xeb\x67\xdb\x70\xb2\x51\xa6\x12\xec\x3d\xb6\xda\xee\x1a\x34\x34\x69\x90\xa0\x02\x02\x31\x61\x4c\x43\x89\xda\xf7\x6f\xac\x0f\x98\x6e\xba\x12\x9d\x41\x42\x3f\x55\x76\x26\x6d\xd3\x5a\x83\x86\x04\x93\xd6\x90\xb3\x5a\xa3\x7b\x01\x6b\xa0\x41\xc1\x5a\x67\x1b\xa4\x35\x76\x9e\xdb\x16\x1d\x90\x7d\x09\xbf\x7d\xe2\xb9\x0d\xa6\x71\x3e\x0d\x27\x8c\xfd\x28\x45\xef\xf3\x2d\x48\x14\xcc\x61\xb5\x06\xe2\x0d\xb8\x0d\x52\xab\x41\xe2\xc4\xb7\x28\xfb\x22\x1c\xb6\x5a\x49\xf0\x82\xf5\xf9\x3c\x6a\x94\x64\xdd\xa1\xbc\x06\x48\xae\x3f\x0e\xea\xbd\xae\xe2\x6b\x6b\x26\x6c\x5a\x0d\x84\xc7\xc5\x07\x3d\xef\x1f\x3d\xe2\x71\x2d\x93\xeb\xfb\xff\xe6\x3d\x60\xec\xa9\x97\xfd\xd3\xaf\x0c\xca\xa0\x3b\x51\xe5\x0c\xdc\x6a\x40\x9c\x33\xce\xfb\xa4\x1a\x89\x7b\x74\x5b\x25\x71\xd1\x7f\x73\xbf\xf3\x84\xcd\xec\xe8\x1b\xe1\xb5\x5d\x91\xf5\x54\xa1\x73\x0b\x72\x1d\x8e\x9c\xd2\x9a\x5a\xad\xb8\x43\x6d\xa1\x42\xc7\x55\x03\x2b\x5c\x7c\xeb\x60\xd7\x33\xb6\x2d\x1a\xbf\x56\x35\xf5\x00\x04\x8f\xbc\xc2\xed\xcc\xca\x96\x6f\x93\x69\xc0\xc1\x51\x6f\xf8\xbf\x5f\x43\x94\x66\xa2\x0c\xa2\x22\x2c\x93\x1a\x20\xa9\xc3\x22\x8e\x10\xe2\x79\x51\x4b\x2c\xc2\xa2\x28\xb3\x22\xaf\x13\xc0\x32\xc8\xc3\xa4\x88\xf3\x2c\x82\x3a\xcb\xd2\xb0\xc0\x34\x4d\x43\x99\xc6\x71\x55\x8c\x88\x0d\x5a\xfb\x8c\xe3\x4f\xb2\x9b\xcb\x28\x4c\xf2\x44\x16\x71\x1d\x05\x71\x02\x55\x2d\xf3\x3a\x0b\x21\x44\x0c\x8b\x79\x99\xcc\x83\xb2\x8a\xe2\x78\x2e\xa3\xa4\x82\xb8\x8a\x33\x2c\x8a\xb4\x28\xe2\x28\x29\xf2\xbc\x9c\xe7\x93\x11\xbd\x93\x40\xfc\xe2\x82\x40\x5e\x28\x44\x19\x4f\x60\x24\x5e\x11\x0d\x1a\x1d\x35\x60\x60\xd5\x6f\xce\xf5\xf1\x87\x50\x2e\x5d\xe5\x17\x35\x68\xff\xdd\xbb\xdf\x69\xc1\xd8\xcf\x75\x33\xca\xb3\xa4\x94\x10\x14\xd9\x3c\xc7\x2a\x9f\x87\x51\x92\x41\x1c\x64\x49\x19\x02\x66\xc5\x3c\x0b\xd3\x20\x2f\xa4\x8c\xa1\x94\xf3\x3c\xca\xb2\x2a\xab\xe7\x51\x56\x63\x12\x87\x21\xa4\xe5\x89\xc6\xeb\x42\x6a\xad\xa3\x91\x04\x4e\x32\xf9\x62\x1d\x09\x96\x07\x79\x70\xf2\x3e\x25\x5c\x13\xb5\x27\xa3\x43\x6f\x3b\x27\x71\x90\xa5\x37\x7e\xeb\xd0\xd3\xc8\xc6\x98\x6c\x3b\xc1\xd2\x66\x64\x6b\xb0\xb1\x6e\x27\x58\x16\xdc\xab\x93\xc3\xa3\xec\x9c\xa2\xdd\xad\x35\x84\x8f\x24\xd8\xdf\xff\x9c\x7c\x84\xae\x51\x06\x48\x59\x73\x8f\xde\xc3\x0a\xbf\x58\xad\xe4\x4e\xb0\x5f\x41\xeb\x12\xe4\xe6\xab\xfd\x68\x57\xfe\xb3\xb9\x73\x6e\x50\xe9\xd6\xea\xae\xc1\x7b\xdb\x99\x71\xc1\x4d\x6f\xf9\x02\xb4\x16\x6c\x86\x24\x67\xa4\xfd\xac\x75\x6a\x0b\x84\x67\x85\x5f\xe8\x24\x27\xed\x47\x85\x43\xf5\xd9\xe8\x9d\x60\xc3\x81\xb8\x74\xd2\x0c\x4e\x8e\x91\x7d\x5f\x3b\x72\xad\x3c\xa1\xe1\x50\x55\x0e\xbd\x5f\x88\x3c\x49\xe2\x11\x8e\xb4\xe7\x52\xb5\x6b\x74\xdc\x77\x8a\xd0\x2f\xbe\x7e\x7c\x58\xde\xdd\xbe\xff\x70\xb7\xfc\xe3\xe1\x66\xf9\xd7\xef\x5f\x3f\x2c\x6f\xee\x1e\x96\x61\x94\x2f\x7f\xbb\xbd\x5f\x3e\x7c\xb8\x89\xd2\xec\x7f\xdf\x51\x77\xb7\xef\x5f\xc1\x9d\xe5\xb9\xfd\xe5\xf6\x4d\x79\x2e\xe2\x7e\x90\x6d\x54\x59\xd7\x7a\x72\x08\xcd\xa2\x9f\x33\x2f\x66\xb3\x0b\x6d\x9f\x9e\x4b\x73\xea\xb7\x52\xf4\xf3\x3a\x3b\xef\x13\x3a\xe2\xb5\xd2\xb8\x78\xbe\xc5\xfd\xfb\x54\x3a\x3a\x0b\x39\xfa\xf9\x06\x77\x3f\x88\xdc\xe0\xee\x22\x75\x2e\x61\x10\x75\x38\x63\x1b\x68\xfd\xec\x34\x36\x7b\x4a\x12\x78\xd9\x99\x4a\xe3\xec\xf8\xbf\xe1\x12\x46\x6c\x8e\xe7\xc8\xd3\x31\x22\xad\x43\xeb\xf7\x3f\x22\xee\x4a\x90\xfd\xf9\xf7\xb8\x13\xdb\x60\x9a\x4e\x83\x67\xaa\x7f\x06\x7a\xbb\xe2\x87\x83\x36\x54\xbc\xff\x69\xc9\x87\x97\x25\x9f\xfc\x97\x25\x7f\x69\x9d\xd7\xe7\xe0\x6c\xf9\x11\xce\x5f\x04\x5e\x5e\xdf\xd8\x0a\x1f\x46\x97\xc6\xfe\x29\x91\xe0\xd9\xc5\xc9\x7a\xc1\xb4\x32\xdd\xe3\xf7\xf9\xb1\x15\x72\x67\x35\x3e\x43\x36\xe0\x09\x9d\x60\xef\xde\x1d\xa1\xad\x53\x76\xbf\x67\x1a\xbc\xff\xb4\xe7\x7b\xb8\x2a\x71\xa9\xbb\x1e\xcb\xa5\x53\xa4\x24\xe8\xc9\x6b\x9b\x7c\x9c\xff\x1b\x29\xfb\x9e\x1d\x72\x9d\x4b\x9c\xbf\xfc\x2b\x23\xab\xfb\x6f\x65\xcd\xe0\x7e\x87\x75\x8d\x92\x04\xfb\x64\x1f\xe4\x1a\xab\x6e\xd0\xb7\x0d\xee\xc4\x2b\x95\x9e\xb0\x4f\x4b\x09\x76\xf7\xa8\x3c\x3d\x6d\xfe\x61\xbc\x06\xcb\xbd\x6d\x62\x3c\x4a\x87\x34\x94\xc9\xc1\xf2\xe9\x0d\xd1\x7b\xb5\xd6\x6a\x75\x0f\xad\xb8\x7e\x56\x5e\x81\xfd\x1b\x00\x00\xff\xff\xa2\x19\x09\x8d\x72\x0d\x00\x00")

func assetsPrometheusDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusDeploymentYaml,
		"assets/prometheus/deployment.yaml",
	)
}

func assetsPrometheusDeploymentYaml() (*asset, error) {
	bytes, err := assetsPrometheusDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/deployment.yaml", size: 3442, mode: os.FileMode(420), modTime: time.Unix(1595995577, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusHtpasswdSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\x31\x0a\x02\x31\x10\x85\xe1\x7e\x4e\xf1\x2e\x90\xc2\x4e\x72\x09\x0b\xc1\x7e\xd6\x7d\x90\xb0\x9b\xec\x98\x99\x55\x44\xbc\xbb\x68\x6f\xf7\xc3\xff\xa9\xd5\x0b\x87\xd7\xad\x67\xdc\x0f\x32\x6b\x68\xc6\xeb\x2d\x4b\xed\x73\xc6\x99\xd7\xc1\x90\xc6\xd0\xdf\x11\x60\xd5\x89\xab\x7f\x0b\x58\x8e\x9e\xd4\x2c\x63\x94\x96\x6c\x6c\x8d\x51\xb8\x7b\x6a\x0c\x8e\x49\x9d\x02\x74\x6d\xfc\x0f\x52\x09\x53\xf7\xc7\x2c\xf1\x34\x66\x9c\x4c\x6f\x3b\xe5\x13\x00\x00\xff\xff\x12\xe6\xd6\x91\x96\x00\x00\x00")

func assetsPrometheusHtpasswdSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusHtpasswdSecretYaml,
		"assets/prometheus/htpasswd-secret.yaml",
	)
}

func assetsPrometheusHtpasswdSecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusHtpasswdSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/htpasswd-secret.yaml", size: 150, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusKubeRbacProxySecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\xcb\x8e\x9b\x30\x14\x40\xf7\x7c\x85\x7f\x80\x2a\x24\x4d\x35\x83\x34\x8b\x49\x24\xc0\xb4\x10\x29\x51\x0c\x78\xe7\xc7\x2d\x98\xd8\xc6\xe5\x95\xd2\xaf\xaf\x48\x1a\x75\x67\xe9\xf8\xdc\x73\x75\x99\x53\x04\xfa\x41\x75\x36\x44\x73\xe0\x49\x36\xb2\xd0\x43\x48\x74\xf6\xa7\xaa\xbf\x2c\xcc\xe8\x10\x61\x13\x05\x32\x6e\x66\x61\xf4\xb7\xaa\x3c\x3b\xbe\xfd\xaa\x4e\x75\x57\xe3\x63\xba\xd0\x32\x9f\x65\x99\xb6\xf4\x1a\x6d\x64\x92\xba\xca\x92\x0d\x2d\xb3\x7f\xfc\xb3\xc6\x26\xba\x33\x42\xb5\xb0\xf9\xd3\x53\x9f\x8a\x17\x64\x23\x8c\x6e\xc5\xb2\xef\x4f\x49\x36\xb1\xe2\x6d\x96\x6d\xa4\x68\x79\x6e\xb2\x0b\xfe\xfe\xf0\x8e\xe9\x54\x15\x81\x16\xbb\x43\x53\x6d\xaf\x0f\x0f\x76\x43\xfd\x43\xd3\x86\x27\x44\xe3\x24\x78\xc7\xaf\x86\x4d\xb5\xd8\xbe\x07\xc2\xe4\x1a\xb7\x5d\x8d\xed\x61\xa6\x49\xa6\x8e\xea\xc9\xe4\x2e\x75\x32\x26\x7f\x70\xdb\xbd\x66\x2b\x20\x51\x40\xcb\x74\x7f\x8d\xa3\x65\xed\xc8\x98\x2c\xff\xf9\xba\xf7\xbe\xe1\xc5\xb3\xcb\x4d\x34\xd2\x32\xbf\x57\x45\xae\x71\xfd\xf1\xe1\xdd\x94\x95\x21\xba\x80\xe8\x61\xf4\x0c\x8c\xec\x75\x36\xcd\x38\xe8\x61\x7d\x21\x74\x7b\x1b\x7c\xe6\x5c\x88\xfa\xc6\xf8\xae\xef\x0c\x8c\x0d\x4c\x83\x6f\x60\x84\x9e\xb3\x01\x3c\x84\x2c\x33\x10\xa2\xdb\xc4\xc1\xef\x39\x13\xeb\xb7\xdf\x8b\x37\x2e\x0e\x42\x74\x72\xec\xd7\x04\xde\xdf\x00\x00\x00\xff\xff\x6d\xa5\xc6\x38\xa1\x01\x00\x00")

func assetsPrometheusKubeRbacProxySecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeRbacProxySecretYaml,
		"assets/prometheus/kube-rbac-proxy-secret.yaml",
	)
}

func assetsPrometheusKubeRbacProxySecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeRbacProxySecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kube-rbac-proxy-secret.yaml", size: 417, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusKubeStateServiceMonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x93\x41\xab\xd5\x30\x10\x85\xf7\xfd\x15\xe1\xed\xd3\xa2\x2b\xe9\x56\x10\x84\xa7\x1b\x1f\xee\xa7\xd3\xf3\x6e\x63\x93\x4c\x98\x4c\x2f\xf8\xef\x25\xe9\xbd\x22\x22\x17\x04\x37\xee\xc2\xe1\xcc\xe4\x9b\x93\x0c\x95\xf0\x15\x5a\x83\xe4\xd9\x25\xc9\xc1\x44\x43\xbe\x8c\x2c\x0a\xa9\x23\x4b\x9a\xae\x6f\x86\x3d\xe4\x75\x76\x5f\xa0\xd7\xc0\xf8\x74\xba\x86\x04\xa3\x95\x8c\xe6\xc1\xb9\x48\x0b\x62\x6d\x27\xe7\x12\xe9\x0e\x2b\x91\x18\xa3\x62\xdd\xc8\x7a\x9b\x15\x25\xca\x77\xac\xb3\x7b\x32\x3d\xf0\xf4\xc8\x9b\x60\xd0\xbf\xb2\x8e\x27\xe2\xc7\x6c\xd0\x4c\xf1\x37\x54\xe7\x32\x25\xcc\x6e\x3f\x16\xf8\x6a\x64\xf0\x09\xa6\x81\xeb\x50\x0b\xb8\x71\x23\xaf\x45\x42\xb6\x3e\x84\x77\x0b\x48\xa1\x2f\xb2\x23\x7f\x08\x11\xb3\x9b\xae\xa4\x93\x1e\x79\xaa\x60\x85\xd5\xa9\xf5\xd2\x0c\x43\x1d\x83\x4c\xf5\xbc\x90\x98\xe5\xc8\x36\x59\x2b\xec\xd8\x9b\x64\xd1\xe7\x33\x1e\xd7\xa6\xe9\x6a\x68\x9c\x57\x8a\xb3\x7b\x9b\xba\x50\x44\x6d\x76\x9b\x59\xa9\x3e\x51\x38\x6b\x2b\x6f\x68\xd8\x5d\xbe\x29\x4a\x05\x2f\x21\x41\x0e\xfb\x59\x6c\xb1\xbe\x97\xfc\x1a\x2e\xe7\x03\x38\xc7\x74\x83\x86\xf1\x54\x54\x12\x6c\xc3\x51\x27\xee\xae\x44\xa5\x9e\xc0\xf9\xe2\x19\x6a\xd5\x33\xf9\xe5\xc8\x6b\xc4\x7d\x10\xcf\x34\xb2\xda\xad\x5f\x13\xa1\x9f\x7b\x86\xe7\xd9\xb7\x40\xbd\xa2\xbf\xc7\xea\xc9\xbc\x1e\xd9\x42\xc2\xbf\x4d\xef\x61\x4e\x15\xf1\xf5\x7f\xce\xe9\x9b\x2c\xfd\x63\xcc\x6e\x7f\x57\x3d\x95\x32\xb4\x0e\x11\x6c\xa2\xf7\x55\x32\xde\x9e\x7f\xd9\x2d\x77\xb7\xfe\xf1\x2f\xff\x08\x00\x00\xff\xff\x14\x46\xa1\xb2\xcc\x03\x00\x00")

func assetsPrometheusKubeStateServiceMonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeStateServiceMonitorYaml,
		"assets/prometheus/kube-state-service-monitor.yaml",
	)
}

func assetsPrometheusKubeStateServiceMonitorYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeStateServiceMonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kube-state-service-monitor.yaml", size: 972, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusKubeletServingCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xa1\x0e\x03\x21\x0c\x00\x50\xdf\xaf\x68\xce\xb3\x64\xb6\x76\x7a\x76\xbe\x77\x74\xa4\x01\x0a\x81\xc2\xf7\x4f\xed\xfc\xcb\xe3\xae\x1f\x19\x53\x9b\x11\xee\x27\x44\x76\x26\x40\xbc\x38\x9c\xcb\x62\x91\xc7\x35\x9c\xf0\x38\x20\xab\x45\xc2\x57\xb3\xaf\xa6\x37\x77\xa8\xe2\xfc\xd7\xc6\x55\x08\xf3\x3a\xa5\x88\x87\x29\x63\xab\xa5\x70\x1f\xf0\x0b\x00\x00\xff\xff\x86\x09\x45\x3a\x65\x00\x00\x00")

func assetsPrometheusKubeletServingCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeletServingCaBundleYaml,
		"assets/prometheus/kubelet-serving-ca-bundle.yaml",
	)
}

func assetsPrometheusKubeletServingCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeletServingCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kubelet-serving-ca-bundle.yaml", size: 101, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusAdditionalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xdb\x46\x10\xbd\xeb\x57\x0c\x12\x23\xb6\x61\x8b\x8c\xdb\x1c\x02\xb6\x68\x2e\xbd\x14\x68\xd1\x02\xcd\x2d\x75\x37\xa3\xdd\xa1\xb8\x31\xb9\xcb\xce\x0c\xe5\x18\x6d\xff\x7b\xb1\x4b\xca\xa2\x6b\x19\x96\x83\xb6\x48\x4f\x82\x76\x77\xde\xbc\x37\x1f\x4f\x7a\xfe\x1c\x96\x4b\xf8\x01\x6f\x20\x10\x39\xd0\x08\x2b\x02\xe7\xeb\x1a\xea\xc8\x60\xd9\x96\xb1\xa7\x20\x8d\xaf\x75\xb1\x84\x0f\x71\x65\x02\x76\x54\xc1\xf1\xd5\xb0\xa2\xa5\x28\x2a\x2d\x3b\x52\xf6\x56\x8e\x17\x00\xe9\xc0\x5b\x63\x63\xa8\xfd\x5a\xaa\x05\x00\xc0\x12\x14\x79\x4d\x2a\x15\xbc\xdb\x13\x56\x8c\x47\x37\xa2\xd4\x15\xb2\xb1\x85\x6d\x07\x51\xe2\xa2\x8d\x16\xdb\xea\xf5\xcb\xd7\x2f\x8f\x2f\x17\x99\xe7\x7d\x06\x1c\x48\x49\x96\x21\x3a\x92\xa5\x45\xb7\xf1\x12\x39\x11\x79\x0e\xdf\x52\x8d\x43\xab\x49\x92\x58\xc6\xde\x87\x35\xc4\x0d\x31\x34\xaa\xbd\x14\xf0\x5d\x0d\x4c\xbf\x0d\x9e\xc9\x9d\xc3\x87\x41\x14\x9c\x17\x5c\xb5\x04\xda\x78\x81\xa4\xbe\xc1\xb0\x26\xd0\x98\xf1\xde\xa7\xb8\xf7\x45\x12\x69\x1b\x4a\x0c\x32\x50\xbe\x7b\x9b\x22\xde\x7e\xff\x33\xbc\x80\x15\x21\x13\x83\xc6\x2b\x0a\x50\xfb\x96\x60\x2c\x06\x78\x81\x41\xc6\x12\xdb\x18\x02\xd9\x4c\x4d\x1b\x02\xb4\x3a\x60\x3b\xb2\xa4\x8c\x47\xc1\xf5\xd1\x07\x95\xb1\x0b\x63\x41\xc0\xc6\xae\x8f\x81\x82\x4a\x31\x66\xf4\x02\x42\x3d\x32\x6a\x62\x99\xf8\xdb\xa4\xf0\x06\x70\xd0\x26\x03\x8d\xb9\x07\x46\xf5\x31\xc0\x8a\x2c\x0e\x42\xb3\x87\x2f\x76\xb5\x41\x26\xd0\xeb\xb8\x43\xb4\x31\x58\xe2\x20\xe0\x43\xc6\xfa\x89\x63\x47\xda\xd0\x90\xd3\xd3\xdf\xd2\xcd\x64\xe2\xa0\xb1\x4b\x73\x00\xbe\x9e\x45\x01\x0f\x19\x4c\xbc\x1b\x55\x26\xed\xdb\x66\xc3\x8f\xda\x10\x5f\x7b\xa1\x73\xe8\x22\xdf\x56\x2d\xf6\x89\xb9\x40\x83\x1b\x9a\xa6\xb3\xe7\xb8\xf1\x8e\x1c\x5c\x7b\x6d\x7c\x48\x30\x19\xee\xeb\xdd\x40\x18\x71\xd3\x0c\x7e\x93\x1a\xa6\xad\x4c\x5f\xc7\x89\xb4\x68\x52\x67\x2a\x28\x37\xc8\x25\x0f\xa1\x14\xb2\x4c\x2a\xe5\x0e\xa2\xf0\xb1\x14\xe2\x8d\xb7\x84\xd6\xc6\x21\x68\x69\xb1\xb0\xac\x0b\x98\x7a\x6c\x72\x8f\x3f\x09\x29\x47\x2e\x00\xf6\x31\xce\x5b\xb3\x04\x8e\x09\x36\x0d\xf6\x02\x80\xa9\xc5\x15\xb5\x77\x5f\xa0\x4d\xa5\xa9\x20\x5f\x75\xd8\x67\x69\x4c\x6b\xfa\x58\x81\x31\x1d\x29\x9a\x19\x7e\x42\x32\x23\xca\x49\x71\x76\xba\xd8\xed\xe5\x78\x9a\x62\xd0\x39\x26\x11\x63\x26\xa8\xbe\x45\x4b\x1d\x05\xad\x66\x4c\x0b\x37\x2e\x56\xda\xd5\xea\xd5\xab\x2f\x33\x92\xc4\x81\xed\x84\x9f\xf6\xfc\x81\xfc\x69\x73\x2f\xe7\x3c\x27\x2a\x70\x8f\xca\x64\x0e\xa6\x47\x6d\xf6\xf1\x29\xb1\xf7\xe5\xe6\xa2\xcc\x9b\x5f\x1e\xfd\x7e\xf1\x67\xd9\x73\xfc\x78\x53\x4e\x81\xe5\xd6\x0c\xee\x78\xc6\x33\x6e\x3a\xb3\xa6\x40\xec\xad\x19\xf7\xcd\xf4\xd1\x3d\x3b\xa4\x15\x7d\x74\x0f\x75\xe2\x71\xf5\x7d\x74\x53\xf1\x3b\xe4\x2b\xd2\xac\xc4\x30\xb9\x06\xd5\xd8\xd8\xa5\x00\x62\x72\x63\x71\xb6\x9d\xbd\x22\xba\xd3\x55\xe5\x81\xfe\xc1\x84\xa9\x08\xa9\xbe\x77\x93\x4e\x65\x3e\xbc\x2b\xf3\x46\xee\xa3\x76\x3b\x55\xe7\x7b\xc6\xf2\x60\x9e\x91\xf5\x61\x9e\x5b\x12\xef\x7e\xad\x2e\xcf\x4e\x4f\xde\x54\xd5\x2f\xee\xec\xf4\xcd\x57\x27\xe9\xe3\xfe\xf0\x1c\x5d\x54\x47\x5f\xec\x15\x38\xdf\x80\xa7\x6e\xd8\xa3\x52\x1e\x18\xf6\xe9\xc5\x3c\xe8\xe8\xe2\xd0\xad\xc2\x8e\xa4\x47\x4b\x87\xf6\x70\x5f\xec\x13\x46\x6a\xb7\xc0\x4f\x4a\xb5\x0d\xcd\x3e\xbd\x2f\x57\xba\x34\xe6\x32\xdf\xdf\x96\xf8\xf8\xc4\xc6\xa0\xe8\x43\xf2\x5a\x94\x2b\x31\xf9\x8f\xc3\x1f\xbb\xd3\x8e\xba\xc8\x37\xa6\x46\xdf\x0e\x4c\x62\x34\x2a\xb6\xa7\xe3\xef\xff\xdd\x2d\x7a\xcc\x05\x26\x83\xfe\xf7\x9d\x60\x4a\xf4\xdf\xba\xc1\xa1\x49\x3f\x07\x47\x78\x12\xd7\xcf\xdf\x15\x0e\x92\xf3\x3f\x77\x86\xad\xc6\x4f\x74\x87\x79\xf8\xe2\xaf\x00\x00\x00\xff\xff\x6d\x42\x9b\xe2\x91\x0c\x00\x00")

func assetsPrometheusPrometheusAdditionalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusAdditionalYaml,
		"assets/prometheus/prometheus-additional.yaml",
	)
}

func assetsPrometheusPrometheusAdditionalYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusAdditionalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-additional.yaml", size: 3217, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusDatasourcesSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc9\x31\x0a\x42\x31\x0c\x06\xe0\x3d\xa7\xc8\x05\x3a\xb8\xe6\x12\x0e\x82\x7b\x6c\x7f\xb0\x48\xda\x9a\xa4\x82\xb7\x7f\x3c\xde\xfa\x7d\xba\xfa\x13\x1e\x7d\x0e\xe1\xdf\x8d\x9a\xa6\x0a\x7d\xfa\x68\xc2\x0f\x54\x47\x92\x21\xf5\x62\xe6\xa1\x06\x61\x7f\x5b\x31\x24\xfc\xa5\x81\x72\x5e\xcc\xed\x15\x41\xf9\x5f\x10\xbe\x2f\xfd\x6e\xd0\x11\x00\x00\xff\xff\x2f\x2c\x4d\x6e\x5b\x00\x00\x00")

func assetsPrometheusPrometheusDatasourcesSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusDatasourcesSecretYaml,
		"assets/prometheus/prometheus-datasources-secret.yaml",
	)
}

func assetsPrometheusPrometheusDatasourcesSecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusDatasourcesSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-datasources-secret.yaml", size: 91, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusRulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x5f\xb6\x8b\xa4\x62\xeb\x53\x20\x84\xd8\x56\x4e\xf2\x95\xba\xd8\x1e\x33\x63\xa3\x72\x7b\xd4\x10\x10\x9b\xee\x46\xa3\xf7\x9e\x7e\xa8\xf1\x8d\x6a\x51\x8a\x47\x96\x12\x9b\x68\x2c\xeb\x38\x8b\x52\x6c\x9c\x25\x9f\x3e\x9f\xdc\x7b\x2c\x8b\xc7\xb3\x4a\x66\xbb\xb0\xdb\x4b\x4f\x74\x99\x2d\x2c\xa1\x05\xef\x80\x59\x19\x5a\x94\xf2\x1a\x33\xad\x85\x5c\x3d\x4a\x4f\xc9\x01\x29\x4c\x4c\x76\x67\x80\xfa\x17\xf0\xe0\x2d\xe4\x9a\xb8\xfd\x55\x12\x3d\x42\xa2\xb6\x41\x7b\xa2\x39\xa0\x84\x4c\xff\xcf\x18\x76\x61\x07\xac\x72\xbe\x47\x57\x95\x5e\xb7\xfc\xb0\x2b\xe3\x69\x27\xc7\xdf\x14\xb0\x5d\x3f\x1b\x06\x28\x67\xd1\xc5\xe3\x2a\x93\xbf\xb4\x56\xcf\xb1\x54\x95\x55\x69\x76\x56\x7e\x74\x5a\x33\x6f\x3d\x6f\x38\xc0\x5b\x55\x0f\xeb\xf9\xf0\x08\x3e\x62\xfa\xc2\xe1\x2a\xd3\xd1\x7d\x07\x00\x00\xff\xff\x78\x3d\x62\x0e\x4e\x01\x00\x00")

func assetsPrometheusPrometheusRulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusRulesYaml,
		"assets/prometheus/prometheus-rules.yaml",
	)
}

func assetsPrometheusPrometheusRulesYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusRulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-rules.yaml", size: 334, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x5b\x8f\x1a\x39\x13\x7d\xe7\x57\x58\xbc\x20\x7d\x8a\x69\x40\xc9\xb7\x49\x4b\x3c\xcc\x12\x36\x13\xed\x4c\x32\x0a\x68\x2f\x2f\x8b\x8c\xbb\xa6\xb1\xf0\xa5\x53\xae\x26\xd3\x8a\xf2\xdf\x57\xee\x0b\x74\x43\x67\x2e\xef\x9b\xbc\x0c\xae\x53\xa7\x5d\xc7\xae\x63\x5b\x64\xea\x0f\x40\xaf\x9c\x8d\x99\x71\x56\x91\x43\x65\xd3\xb1\x74\x08\xce\x8f\xa5\x33\xd1\x61\x3a\xd8\x2b\x9b\xc4\xec\x0e\x9d\x01\xda\x41\xee\x07\x06\x48\x24\x82\x44\x3c\x60\xcc\x0a\x03\x31\xcb\x8e\x41\x6e\x80\x00\xb7\xc2\xc3\x80\x31\x2d\xb6\xa0\x7d\x80\xb1\x16\x24\x66\x08\xc9\x4e\x10\x37\x02\xf7\x40\x99\x16\x12\x06\x3e\x03\x19\x80\xe2\xfe\x5e\x59\x45\x45\x9d\xe4\x92\x2b\x4b\xea\xaa\x33\x18\xb8\xe0\x1e\x10\x21\x79\x9f\x87\xf9\xae\xe4\x0e\x92\x5c\x2b\x9b\x7e\x4c\xad\x3b\x0e\x2f\x1f\x40\xe6\x14\x6a\xab\xd3\x18\xe3\x25\x63\xcd\xb6\x06\x34\xa7\x50\xf8\x57\xce\x77\x05\x1a\x24\x39\xec\x86\x18\x33\x82\xe4\x6e\xf9\x90\x21\xf8\x20\x98\x3f\x8f\x07\xf6\x3d\x14\x6d\x31\x2e\x10\x8c\xb9\x0c\x50\x04\x76\xf6\xd1\xf6\x84\x0f\x42\xe7\xd0\x43\x5d\xd3\xbf\xed\x52\x06\xf1\x7d\x26\xe4\x65\x06\xef\xd3\xb8\x0d\x20\x97\x39\xed\xd2\xe2\xf7\x30\xe3\x7d\xbe\x05\xb4\x40\xe0\xc7\xca\x45\x3b\xe7\x29\x30\xb7\xf0\xdf\x40\xa5\x3b\x8a\xd9\x74\x32\x19\x30\x26\x9d\x25\xa1\x2c\x60\xfd\x59\xce\x04\xa6\xbe\xad\x32\xcf\xd0\x1d\x54\x02\x38\x77\x19\x58\xbf\x53\xf7\xd4\x8e\xee\x88\x32\xcf\x45\x92\x04\x2d\xe7\xf1\xbb\xc9\xbb\xe9\x79\xf8\x18\x6d\x07\xc0\x08\xa5\x79\xe2\x8c\x50\x76\xfe\xbf\x76\x24\xcf\x3c\x21\x08\x33\x0f\xb9\x71\x14\x69\x27\x85\x0e\x85\x04\xf2\x49\x97\x3c\x13\xde\x7f\x4b\xf8\xbd\xd2\x30\x8f\x80\x64\x94\xa1\x7b\x28\xa2\x26\x10\x89\x9c\x76\xed\x8c\x63\x09\xdc\x03\x1e\x94\x04\x2e\xa4\x74\xb9\xa5\xf9\x23\x1a\x73\x36\x6a\x27\x0a\x9c\x7f\x1f\x22\x78\x97\xa3\x84\x61\xcc\x86\xa7\xa5\x1b\xbe\x62\xc3\x03\xe0\x36\x8c\xa6\x40\xc3\x1f\xa3\x9f\x90\x24\xa0\x21\x15\x04\x3c\x47\xed\xe7\xdf\x87\xd1\x30\x66\xcf\x26\xed\xb0\x72\xd2\x9e\x4b\x40\xaa\xea\x27\xed\xa3\x0c\xd5\x41\x10\x84\xbf\xc7\x12\xe9\x1c\xbc\x87\xa2\x1f\xbb\x87\xa2\x8d\x95\x5a\x81\x0d\x42\x49\x04\xaa\x25\x3e\x08\x8c\x30\xb7\x51\x35\xe8\xa3\xee\x6e\xab\x35\xad\x25\x8d\xc8\xed\xc1\x76\x18\x9d\xdb\x2b\xe8\x32\x9e\x16\xad\xe1\xf4\x55\x53\x6e\xaa\xdf\xfd\xab\x27\x45\x9d\xb9\x57\x65\x19\x41\x80\x71\x06\xe6\xe7\xe8\x17\xcd\x5c\x8a\x73\xe1\xfc\x5e\x65\x3c\xec\x26\x8e\x90\xc2\xc3\xfc\x9f\xc8\x00\xa1\x92\x4d\x13\x83\x3d\xb4\x9b\xa6\xb2\xd2\xeb\xf5\xfa\x6e\x73\xf7\xe5\xf3\x5f\x7f\xb7\xfa\xaf\xb4\x85\x98\x8d\x46\xbd\xf0\xd5\x0b\xf0\x9f\x3e\x3f\x09\x56\x46\xa4\x10\xb3\xaf\xb9\x28\x42\x99\x47\x49\x22\x87\x2a\x55\x96\xbb\xb2\xa4\x52\xff\x58\x0b\x02\xdf\x14\x7d\x71\x16\x94\x98\xc6\xb3\x1d\x52\xc7\x23\x8e\x2e\x72\xe7\x90\x62\xd6\x31\x81\x86\xeb\x1b\x6c\xeb\xb1\x66\x9b\xb7\x28\x10\xbe\xe6\xe0\xa9\xe3\x7d\x32\xcb\x83\x4b\x99\xd6\x90\x01\xe3\xb0\x88\xd9\x6c\x72\xab\xea\x61\x02\x34\xca\x8a\x70\x36\xdc\x82\xf7\x22\x85\x3b\xa7\x95\x2c\x62\xf6\x9b\xd0\x7a\x2b\xe4\x7e\xed\x6e\x5c\xea\x3f\xdb\x25\xa2\xc3\x3a\xeb\xe0\x74\x6e\xe0\x36\x2c\x76\xa7\x10\x13\x46\xee\x04\xed\x62\x76\xde\x22\x17\x05\xd5\xdb\x18\x77\x86\xf7\x9d\x99\xa1\xd7\x1e\x61\xee\xec\xf9\x17\x73\xb7\x57\xe3\xe7\xec\x8d\x0d\xbe\x98\xbe\x93\xd8\x73\x24\x84\x16\xce\x11\xb8\x56\x9e\xc0\x1e\xfd\x7d\x32\x2e\xff\x07\x9f\x9e\x75\xe0\xe7\x96\x3e\x9d\xfd\x52\x42\xa7\x01\xfa\xa6\x03\x95\xce\xde\xab\xb4\x65\x0e\xa1\x51\x39\x6e\x85\xac\x8a\x8e\x2a\xc0\xb8\x10\x46\x77\x12\x1b\x1f\x6c\xa5\x3e\x61\x86\x65\x4a\x1d\x0f\xae\xf8\x48\xe6\x99\x35\x56\x1f\x53\xd9\x0e\x90\xfb\x5c\x11\xf8\xf9\xfa\x66\xb5\x59\x2e\xde\x5f\x2f\x37\x5f\x56\x57\x9b\x3f\x3f\xae\xaf\x37\x57\xcb\xd5\x66\x3a\x7b\xbb\xf9\xb0\xb8\xdd\xac\xae\xaf\x66\x6f\xfe\xff\xea\x84\x5a\x2e\xde\x3f\x81\xbb\xe0\x59\xfc\xba\x78\x16\x4f\x2f\xee\x11\xb6\x4e\x65\xda\xa5\xe4\x3c\x25\x80\x38\x27\xcc\xa1\x13\x3c\xcc\xa7\x93\x7e\x67\xa9\xae\x99\xe7\x8b\x15\x1f\x26\xe3\xd7\xe3\x69\xc7\x53\xce\x20\xcf\xb7\x94\xd9\xc5\x36\x26\xb0\xc2\xca\xe2\x3f\x5b\x39\x31\xf7\xab\x7b\xc1\x7e\x09\x43\xc8\xb4\x92\xc2\xc7\x6c\x36\xb8\xd0\xf2\x5c\xc7\x52\xc3\xd9\xe4\x28\x62\x23\xe0\xf4\x43\xd0\xaf\x3e\x4c\xaf\xaa\xc3\xf4\x53\xf9\xdd\xcb\xeb\x15\xef\xdc\xad\x33\x54\x0e\x15\x15\x0b\x2d\xbc\xaf\x52\x7c\xe1\x09\x0c\x97\x3a\xf7\x04\xc8\x25\x2a\x52\x52\x84\xa6\xaf\x6c\xe7\x26\xdc\x0b\x63\x56\x6f\x52\xeb\x12\xe8\x5e\xf7\xbb\x27\xbc\xf3\x31\xd3\xca\xe6\x0f\xe5\x04\x65\x5e\x7e\xcc\x59\x82\x07\x8a\xd9\xf7\x1f\xa7\x69\xdf\x56\x6f\xa7\x4f\xcd\xfd\xeb\x48\xda\x87\xea\x7e\xb1\x7c\x56\xdc\xb4\x1e\x4a\x61\xe8\x58\xf0\xb8\xd2\xa0\x7c\x8a\x95\xcb\x09\x49\xcc\x46\x61\xfa\xa3\xc7\xc1\x09\x64\xda\x15\x1d\x74\x7d\x6e\x34\x77\xf6\xbe\x55\xe7\xec\xc9\x2d\xf4\x08\xe4\x59\x3c\xad\x63\xa2\x72\x65\x23\xb2\xe3\x9c\x4a\xa1\x6c\x5a\x7a\xb2\xe7\x52\xf0\x6d\x6e\x13\x0d\xad\x19\x6b\xa8\xaf\xe1\x01\xd5\x8a\x7b\x72\x18\xcc\x65\x70\x6a\xa9\x85\x16\xca\xac\xc1\x64\xe1\x92\xd2\x68\xdb\xbc\x33\xeb\x5f\x55\x56\x6b\x03\x8d\x3c\x09\x9b\x08\x4c\x46\x2d\x43\xb8\xf0\x88\x7e\x97\x38\xcd\x82\xbd\x9e\x7c\x50\x83\x7f\x03\x00\x00\xff\xff\x63\xbc\x23\x94\x5e\x0f\x00\x00")

func assetsPrometheusPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusYaml,
		"assets/prometheus/prometheus.yaml",
	)
}

func assetsPrometheusPrometheusYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus.yaml", size: 3934, mode: os.FileMode(420), modTime: time.Unix(1595995577, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusProxySecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8a\x31\x0e\xc2\x30\x10\x04\xfb\x7b\xc5\x7e\xc0\x05\x1d\xf2\x27\x28\x90\xe8\x2f\x64\xa5\x58\x89\x9d\xc3\x77\x41\x44\x88\xbf\xa3\xd0\xd3\x8d\x66\x46\xad\xdc\xd8\xbd\xac\x2d\xe3\x79\x92\x51\x43\x33\xde\x1f\x99\x4b\x1b\x33\xae\xbc\x77\x86\x54\x86\xfe\x8a\x00\x8b\x0e\x5c\xfc\x20\x60\x3e\x7b\x52\xb3\x8c\x3e\xd5\x64\x7d\xad\x8c\x89\x9b\xa7\xca\x60\x1f\xd4\x29\x40\xd3\xca\xff\xc3\x21\x5f\xbb\xc4\x6e\xcc\xb8\x98\x3e\x36\xca\x37\x00\x00\xff\xff\x80\x76\x1c\x8b\x93\x00\x00\x00")

func assetsPrometheusProxySecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusProxySecretYaml,
		"assets/prometheus/proxy-secret.yaml",
	)
}

func assetsPrometheusProxySecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusProxySecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/proxy-secret.yaml", size: 147, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\x6a\x2b\x31\x0c\x45\xf7\xfe\x0a\xfd\x80\xf3\x5e\xba\x8b\x77\xa5\xab\xec\x02\x85\xee\x15\xe7\x26\x63\xe2\x91\x8d\xa4\xa4\xe4\xef\xcb\xcc\xa4\xa4\xa5\x50\xba\x94\x7c\xcf\x31\x17\x71\x2f\x6f\x50\x2b\x4d\x12\x5d\xd7\xe1\x5c\xe4\x90\xe8\x15\x7a\x2d\x19\x61\x84\xf3\x81\x9d\x53\x20\x62\x91\xe6\xec\xa5\x89\x4d\x23\x91\x2d\xa1\x15\xd7\x3e\xf0\xaa\x75\x88\x0d\xe5\xe8\xab\xd2\xfe\xcd\x4f\x72\x8a\x19\xea\xd1\x90\x15\x1e\x85\x47\x24\xd2\x61\x8c\x5d\xdb\x08\x1f\x70\xb1\x38\xc2\xa1\x7b\x36\x44\xaf\x16\x88\x2a\xef\x51\xef\xfe\x47\x2c\x91\xe2\x30\xb0\xc7\x91\xf5\x0c\xef\x95\x33\x02\xd1\xef\xc6\x60\x1d\x79\x32\xf5\xa6\x3e\x2b\xe3\x9d\x78\xc7\x7e\xf9\xa0\xa9\x27\xda\xfc\xdf\xac\xe7\xd1\x59\x4f\xf0\xdd\xbc\x5c\x22\x9f\x80\x43\x58\xf2\xed\x3b\xf4\xf4\x03\x7a\xc4\x0c\x15\xd9\x9b\x2e\x45\xb8\xf7\xf4\xa5\xcd\xdf\xca\x19\x6c\x3a\xca\xf3\xf1\x58\xa4\xf8\x2d\xd1\x4b\x2d\x10\xdf\xee\x02\x91\xdf\x3a\xa6\xc5\xc5\x1c\xba\xdd\x85\x8f\x00\x00\x00\xff\xff\x01\xff\x49\x77\xc4\x01\x00\x00")

func assetsPrometheusServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusServiceYaml,
		"assets/prometheus/service.yaml",
	)
}

func assetsPrometheusServiceYaml() (*asset, error) {
	bytes, err := assetsPrometheusServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/service.yaml", size: 452, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusServingCertsCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x31\x6e\xc3\x30\x0c\x46\xe1\x5d\xa7\x20\xb4\x4b\x45\x57\xad\x9d\xbb\x66\xff\x43\xd3\x36\x13\x9b\x12\x24\xda\xe7\x0f\x02\x23\x19\x1f\xf0\x3e\x34\xbd\x49\x1f\x5a\xad\xd0\xf9\x1b\x26\x38\x4a\x20\x1a\xd2\x4f\x65\x49\x8c\xcc\xdd\x0b\xc5\x18\x9e\x6a\x53\xa1\xbf\x6a\xb3\x2e\xff\x68\x61\x17\xc7\x67\x87\x59\x75\xb8\x56\x1b\xef\xfc\xfa\x8c\xad\xad\xc8\xb5\x89\x8d\x55\x67\xcf\x5a\x7f\xd4\x1e\xc2\x9e\x18\xf7\xc3\xa6\x4d\x0a\x45\xef\x87\xc4\x40\x64\xd8\xa5\x5c\xd4\x96\xc4\xd2\x7d\x24\x46\xba\xbe\xf0\x0a\x00\x00\xff\xff\x34\x3d\xf3\xe8\xaa\x00\x00\x00")

func assetsPrometheusServingCertsCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusServingCertsCaBundleYaml,
		"assets/prometheus/serving-certs-ca-bundle.yaml",
	)
}

func assetsPrometheusServingCertsCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusServingCertsCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/serving-certs-ca-bundle.yaml", size: 170, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x4d\x6f\xdb\x38\x13\xbe\xe7\x57\x10\x3d\xbf\xb4\xf5\x65\x59\x22\x60\xe0\xcd\xba\xde\xed\x02\x4d\x1a\xac\x8b\xdd\xa3\x31\xa2\x46\x36\x61\x8a\x54\xc9\x91\x11\xa3\xe8\x7f\x5f\xc8\x4e\x1c\x29\x71\x9a\xb8\xc7\xe5\x49\x1a\x3e\x33\xf3\xcc\x17\x49\x68\xd4\xdf\xe8\xbc\xb2\x46\x30\x68\x1a\x3f\xde\x85\x57\x5b\x65\x4a\xc1\x3e\x62\xa3\xed\xbe\x46\x43\x57\x35\x12\x94\x40\x20\xae\x18\xd3\x50\xa0\xf6\xdd\x17\xeb\x14\x46\xdb\xb6\x40\x67\x90\xd0\x8f\x94\x1d\x4b\x5b\x37\xd6\xa0\x21\xc1\xa4\x35\xe4\xac\xd6\xe8\x5e\xc1\x1a\xa8\x51\xb0\xc6\xd9\x1a\x69\x83\xad\xe7\xb6\x41\x07\x64\x5f\xc3\xef\x1e\x79\xee\x82\x51\x9c\x8d\xc2\x2b\xc6\x5e\x37\xe1\x1b\x94\x1d\x49\x87\x8d\x56\x12\xbc\x60\x1d\xde\xa3\x46\x49\xd6\x1d\xe9\xd7\x40\x72\xf3\xb9\x17\xcf\x65\x11\x5d\x1a\x13\x61\xdd\x68\x20\x7c\x70\xde\xcb\x69\xb7\xf4\x80\xc7\xa5\x4c\x2e\xcf\xef\xbb\x73\xcc\xd8\x63\x2e\xbb\xd5\x79\x06\x65\xd0\x9d\xa8\x72\x06\x6e\xdd\x23\xce\x19\xe7\x9d\x51\x8d\xc4\x3d\xba\x9d\x92\x38\xeb\xfe\xb9\xdf\x7b\xc2\x7a\xfc\xb0\x37\xc0\x6b\xbb\x26\xeb\xa9\x44\xe7\x66\xe4\x5a\x1c\x6c\x4a\x6b\x2a\xb5\xe6\x0e\xb5\x85\x12\x1d\x57\x35\xac\x71\xf6\xad\x85\x7d\xc7\xd8\x36\x68\xfc\x46\x55\xd4\x01\x10\x3c\xf2\x12\x77\x63\x2b\x1b\xbe\x4b\x46\x01\x07\x47\x9d\xe0\xff\x7e\x03\xd1\x24\x15\x45\x10\xe5\x61\x91\x54\x00\x49\x15\xe6\x71\x84\x10\x4f\xf3\x4a\x62\x1e\xe6\x79\x91\xe6\x59\x95\x00\x16\x41\x16\x26\x79\x9c\xa5\x11\x54\x69\x3a\x09\x73\x9c\x4c\x26\xa1\x9c\xc4\x71\x99\x0f\x88\xf5\x52\xfb\x8c\xe3\x2f\xb2\x9b\xca\x28\x4c\xb2\x44\xe6\x71\x15\x05\x71\x02\x65\x25\xb3\x2a\x0d\x21\x44\x0c\xf3\x69\x91\x4c\x83\xa2\x8c\xe2\x78\x2a\xa3\xa4\x84\xb8\x8c\x53\xcc\xf3\x49\x9e\xc7\x51\x92\x67\x59\x31\xcd\xae\x06\xf4\xba\xfa\xfb\x06\x24\xfa\xd9\xf7\xef\xb7\xd7\x37\x8b\xe5\xdd\xf5\x7c\xf1\xe3\xc7\x6b\x31\x28\xe3\x09\x8c\xc4\xf7\x29\x82\x46\x47\x35\x18\x58\x77\x25\xb9\x48\xf5\xa8\xc5\xa5\x2b\xfd\xac\x02\xed\x9f\xca\x7d\x28\xad\x60\xec\xd7\xd2\x17\x65\x69\x52\x48\x08\xf2\x74\x9a\x61\x99\x4d\xc3\x28\x49\x21\x0e\xd2\xa4\x08\x01\xd3\x7c\x9a\x86\x93\x20\xcb\xa5\x8c\xa1\x90\xd3\x2c\x4a\xd3\x32\xad\xa6\x51\x5a\x61\x12\x87\x21\x4c\x8a\x13\x8d\xb7\x27\xa7\xb1\x8e\x06\x3d\x7f\x9a\x8b\x3b\xeb\x48\xb0\x2c\xc8\x82\xd3\xee\xa3\xc1\x0d\x51\x73\x12\x3a\xf4\xb6\x75\x12\x7b\x56\x3a\xe1\xb7\x16\x3d\x0d\x64\x8c\xc9\xa6\x15\x6c\x52\x0f\x64\x35\xd6\xd6\xed\x05\x4b\x83\x1b\x75\xda\xf0\x28\x5b\xa7\x68\x3f\xb7\x86\xf0\x9e\x04\xfb\xfe\x94\x78\x42\x57\x2b\x03\xa4\xac\xb9\x41\xef\x61\x8d\x77\x56\x2b\xb9\x17\xec\x77\xd0\xba\x00\xb9\xfd\x6a\x3f\xdb\xb5\xff\x62\x16\xce\xf5\x22\xdd\x59\xdd\xd6\x78\x63\x5b\x33\x0c\xb8\xee\x24\x77\x40\x1b\xc1\xc6\x48\x72\x4c\xda\x8f\x1b\xa7\x76\x40\xf8\x22\xf0\x33\x99\xe4\xa4\xfd\x20\x70\x28\xbf\x18\xbd\x17\xac\xdf\x10\xe7\x8e\x96\xde\x51\x31\x90\x1f\x62\x47\xae\x95\x27\x34\x1c\xca\xd2\xa1\xf7\x33\x91\x25\x49\x3c\xc0\x91\xf6\x5c\xaa\x66\x83\x8e\xfb\x56\x11\xfa\xd9\xd7\xcf\xcb\xd5\x62\xfe\xf1\xd3\x62\xf5\xd7\xf2\x7a\xf5\xcf\x9f\x5f\x3f\xad\xae\x17\xcb\x55\x18\x65\xab\x3f\xe6\x37\xab\xe5\xa7\xeb\x68\x92\xfe\xef\x09\xb5\x98\x7f\x7c\x03\xf7\xc2\xce\xfc\xb7\xf9\xbb\xec\x9c\xc5\xfd\xc4\xda\x20\xb2\xb6\xf1\xe4\x10\xea\x59\xd7\x67\x5e\x8c\xc7\x67\xd2\x3e\x1a\x4c\xe5\xc8\xef\xa4\xe8\x5a\x75\xfc\x32\x45\xe8\x88\x57\x4a\xe3\xec\x79\x75\xbb\xef\x91\x74\xf4\x42\xe5\x61\x9f\x6f\x71\xff\x13\xcd\x2d\xee\x9f\x8f\xfb\xe3\xb4\x4b\xeb\xd0\xfa\xc3\x05\xc1\x5d\x01\xb2\x3b\x9c\xee\xf7\x62\x17\x8c\x92\x87\x9b\xe8\xa9\xa5\x9e\x81\xde\x3f\x98\xfd\x7e\xe8\x0f\xa6\xff\xe5\xc9\x0c\xcf\x4f\x66\xf2\x5f\x9e\xcc\x73\x7e\x8e\x77\x60\x0d\x8d\x1f\x9f\x6c\x1d\xda\x48\x02\x2f\x5a\x53\xea\x97\xee\x07\x38\x7f\x16\x78\xde\xbf\xb1\x25\x2e\x07\x8f\xb9\x6e\x15\x48\xf0\xec\x41\x63\xbd\x60\x5a\x99\xf6\xfe\xa9\x7f\x6c\x89\xdc\x59\x8d\xcf\x90\x35\x78\x42\x27\xd8\x87\x0f\x0f\xd0\xc6\x29\x7b\xa8\x99\x06\xef\x6f\x0f\x7c\x8f\x4f\x18\x2e\x75\xdb\x61\xb9\x74\x8a\x94\x04\x7d\xf5\x56\x91\x1f\xde\x41\xd7\x52\x76\x39\x3b\xda\x72\x58\x6e\x80\x78\x0d\x6e\x8b\xd4\x68\x90\xc8\x5f\xbf\x71\xc8\xea\xee\x5f\x59\xd3\x7b\x77\x61\x55\xa1\x24\xc1\x6e\xed\x52\x6e\xb0\x6c\x7b\x79\xdb\xe2\x5e\xbc\x11\xe9\x09\xfb\xe8\x4a\xb0\xc5\xbd\xf2\xf4\x58\xfc\x63\x7b\xf5\xdc\xbd\xaf\x63\x3c\x4a\x87\xd4\x1f\x93\xa3\xe4\xf6\x1d\xda\x87\x69\xad\xd4\xfa\x06\x1a\x71\x79\xaf\xbc\x01\xfb\x37\x00\x00\xff\xff\x40\x2d\xf3\x40\xea\x0c\x00\x00")

func assetsPrometheusOperatorDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorDeploymentYaml,
		"assets/prometheus-operator/deployment.yaml",
	)
}

func assetsPrometheusOperatorDeploymentYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/deployment.yaml", size: 3306, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorOperatorCertsCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x31\x0e\xc2\x30\x0c\x46\xe1\x3d\xa7\xb0\xb2\x27\x88\x35\x2b\x33\x2b\xfb\x4f\xea\x52\x43\x6b\x47\x89\xdb\xf3\x23\x84\x60\x7c\xd2\xf7\xd0\xe4\xc6\x7d\x88\x69\xa1\xe3\x1c\x26\x38\x4a\x20\x1a\xdc\x0f\xa9\x9c\x2a\x72\xed\x5e\x28\xc6\xf0\x12\x9d\x0a\x5d\x4c\x67\x79\x5c\xd1\xc2\xc6\x8e\x1f\x87\xaa\x39\x5c\x4c\xc7\x27\xff\x7f\xc6\xda\x16\x64\x6b\xac\x63\x91\xd9\xb3\xd8\x49\xf4\xc9\xd5\x53\xc5\x7d\xd7\x69\xe5\x42\xd1\xfb\xce\x31\x10\x29\x36\x2e\x64\x8d\x3b\xdc\x7a\xaa\xdc\x7d\xa4\x8a\xf4\x85\xe1\x1d\x00\x00\xff\xff\x7e\x2f\xba\xf8\xab\x00\x00\x00")

func assetsPrometheusOperatorOperatorCertsCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorOperatorCertsCaBundleYaml,
		"assets/prometheus-operator/operator-certs-ca-bundle.yaml",
	)
}

func assetsPrometheusOperatorOperatorCertsCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorOperatorCertsCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/operator-certs-ca-bundle.yaml", size: 171, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x41\x6e\xea\x40\x0c\x86\xf7\x39\x85\x2f\x90\x3c\x10\x2c\xd0\xdc\xe0\x6d\x2a\xa4\x4a\xdd\x3b\xc3\x5f\x18\x31\xb1\x47\xb6\xa1\xd7\xaf\x92\x42\x55\xa9\xca\xb2\x4b\xdb\xdf\xf7\xdb\x33\xdc\xca\x1b\xcc\x8b\x4a\xa2\xfb\xb6\xbb\x16\x39\x25\x7a\x85\xdd\x4b\x46\x37\x21\xf8\xc4\xc1\xa9\x23\x62\x11\x0d\x8e\xa2\xe2\x73\x49\xe4\x5f\xd0\x30\x22\x78\xd0\x06\xf1\x4b\x79\x8f\xa1\xe8\xbf\x65\x22\xe7\x3e\xc3\xa2\x77\x64\x43\xf4\xc2\x13\x12\x35\xd3\x09\x71\xc1\xcd\x7b\x6d\x30\x0e\xb5\x3e\xaa\x77\x44\x95\x47\xd4\x47\x32\xb7\x36\x5c\x6f\x23\x4c\x10\xf0\x39\x31\xeb\xd4\x54\x20\x91\x28\xab\x84\x69\xad\xb0\x15\x76\x75\xd3\x0a\x7f\xff\x7e\xfe\x66\xd8\x1d\x86\x6d\x47\xb4\x1e\xe1\x0d\x79\x3e\x32\xd7\x9b\x07\xec\xff\x31\xd1\x8b\x0a\x3a\xa2\xa6\x16\xcb\xfd\xfd\x43\xbf\x44\x34\x5f\x76\xce\xa3\x44\x87\xfd\x7e\xb7\x94\xc1\x76\x46\x1c\x97\xe6\x13\x7a\x4a\x1f\x18\x7f\x2a\x9b\xc3\xe6\x97\xf2\x68\x3a\x2a\x72\xa8\xfd\xed\x97\x7d\x06\x00\x00\xff\xff\x88\x7e\x8f\x4a\x1f\x02\x00\x00")

func assetsPrometheusOperatorServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorServiceYaml,
		"assets/prometheus-operator/service.yaml",
	)
}

func assetsPrometheusOperatorServiceYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/service.yaml", size: 543, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRazeeJobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x50\xb1\x6e\xeb\x30\x0c\xdc\xfd\x15\x42\xe6\xe7\x04\xc6\x43\x17\x6d\x5d\x8b\x22\xe8\xd4\x9d\xa6\x2f\x35\x6b\x49\x54\x25\xda\x80\xfb\xf5\x85\x13\xa7\xc8\x52\x4e\x87\xe3\xdd\xf1\x40\xca\xf2\x8e\x52\x45\x93\x77\x3d\x19\x8f\xa7\xa5\x6b\x26\x49\x83\x77\x2f\xda\x37\x11\x46\x03\x19\xf9\xc6\xb9\x44\x11\xde\x15\xfa\x06\x06\xe4\xa0\x6b\xfb\xa9\xfd\xce\xd7\x4c\xbc\x2d\xc7\xd8\x46\x2a\x13\x2c\x07\x62\x34\x35\x83\x37\xab\x21\xe6\x40\x86\x0d\x3b\x77\x67\xaf\x18\x65\x11\xc6\x33\xb3\xce\xc9\xce\xb7\x13\x18\x46\xb2\xc7\xa0\x56\x33\x0a\x99\x96\xdd\xc5\x9a\x8c\x24\xa1\xd4\x7b\x4e\xfb\x67\xbd\xdb\x48\xa4\x0f\x78\x77\xf8\x9a\x69\x3d\x8a\x9e\xae\xba\xd3\xa3\x7a\x40\x30\xf2\xdd\xb1\x3b\xfe\x3f\xfc\xda\x58\x63\xa4\xed\x19\x92\xaa\x51\x08\xff\xe6\xb4\xa3\x5d\x52\x50\x8d\x8a\xbd\x69\x10\x5e\xbd\x3b\x63\xc1\x56\xb2\x27\x9e\xf4\x72\x79\x95\x28\xe6\xdd\x53\xf3\x13\x00\x00\xff\xff\x91\xe6\x95\xeb\x67\x01\x00\x00")

func assetsRazeeRazeeJobYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRazeeJobYaml,
		"assets/razee/razee-job.yaml",
	)
}

func assetsRazeeRazeeJobYaml() (*asset, error) {
	bytes, err := assetsRazeeRazeeJobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/razee-job.yaml", size: 359, mode: os.FileMode(420), modTime: time.Unix(1591133712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRazeeNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x28\x4a\xac\x4a\x4d\x05\x04\x00\x00\xff\xff\x0e\x49\xcb\x5c\x36\x00\x00\x00")

func assetsRazeeRazeeNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRazeeNamespaceYaml,
		"assets/razee/razee-namespace.yaml",
	)
}

func assetsRazeeRazeeNamespaceYaml() (*asset, error) {
	bytes, err := assetsRazeeRazeeNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/razee-namespace.yaml", size: 54, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRemoteResourceS3Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x93\xe2\x46\x0c\xbd\xf3\x2b\x74\xe3\x64\x8c\x61\x80\xd9\xbe\x4d\x0d\x9b\x4a\x2a\x61\x97\x02\x36\x39\x4e\x89\x6e\x81\xbb\xb6\xbf\xb6\xbb\xcd\xc4\x49\xe5\xbf\xa7\x1a\xc3\xac\xed\x99\xd9\x45\x27\x97\xf4\xf4\x24\x3d\xa9\x8d\x4e\xfe\x49\x3e\x48\x6b\x18\xa0\x73\x21\x3f\x15\x83\xaf\xd2\x08\x06\x4b\x72\xca\xd6\x9a\x4c\x1c\x68\x8a\x28\x30\x22\x1b\x00\x18\xd4\xc4\xc0\x93\xb6\x91\x3c\x05\x5b\x79\x4e\x61\x9a\x71\x6b\xa2\xb7\x4a\x91\x1f\x00\xa0\x31\x36\x62\x94\xd6\x84\x94\x02\xe0\xf1\x1f\xa2\x91\xb4\xf9\x51\xc6\xcc\x93\xb3\x0c\x86\x65\x8c\x2e\xb0\x3c\xb9\xca\x6a\x3f\xe2\x56\xe7\x67\x58\x26\x6d\xbe\x39\xd3\x6f\x2e\xf4\xdb\xe9\xe8\x28\xe3\xb0\xcb\xc4\xad\xd6\x32\x66\xa1\x44\x06\xc3\xd9\x62\x51\x1c\xf6\xd3\x79\x31\xe7\xbc\x10\x38\xf9\x70\x7f\x3f\x9f\xcd\x0b\x9a\xde\x4f\x0e\xc5\xec\x20\xa6\xc5\x1d\x5f\xcc\xc4\x87\xc4\xa1\x70\x4f\xaa\xdd\x57\xfe\x8c\x91\x97\xd9\x75\x18\x06\x43\x25\x23\x0d\x07\xc1\x11\x4f\x30\x4f\x4e\x49\x8e\x81\x41\x31\x00\x08\xa4\x88\x47\xeb\x1b\x02\x9d\x52\xff\x68\x31\x42\x52\xf1\x67\xfa\x84\xe8\x31\xd2\xb1\x6e\x52\x62\xed\x88\xc1\xc6\x2a\x25\xcd\xf1\x8b\x13\x18\x69\x00\x10\x49\x3b\x85\x91\x2e\x75\x5a\x1b\x48\xa6\x3a\x25\x6f\x2a\xda\xd8\x0f\x27\x6e\x20\xb7\x6c\x18\xe0\xaa\xce\xf9\x9b\xfc\x49\x72\x7a\xe0\xdc\x56\x26\x7e\x6a\xf2\x53\x21\x71\xbe\xa1\x2c\xe0\x05\x98\x38\x50\x1a\xf2\xad\xd6\x33\x90\x1a\x8f\xa9\x89\x6f\x15\xd6\x69\xb5\x4d\x8f\xfd\x06\xd8\x78\x34\x1b\x4d\x86\x2f\x79\x69\x31\x97\x18\x6b\x39\x01\x94\xd4\x32\xf6\x7c\x49\x41\x6d\x7d\xcd\x60\x32\x1e\xaf\x64\x2f\xc6\x5d\xc5\xa0\x18\x8f\x75\xc7\xef\xe9\x5b\x45\xe1\x7d\xa6\xc5\xec\x6d\xa2\xbb\x0e\x0f\x99\x53\x97\x20\xbb\x08\xfc\xb8\x59\x3e\xfd\xf5\xb0\x7b\xfc\xf5\x69\xf7\xdb\xea\xe3\xe7\x2f\xbb\xa7\xed\xc7\xc7\xcf\x9f\x96\xdb\x1e\xe7\x09\x55\x45\xbf\x78\xab\xfb\x7d\x9c\xe5\x3c\xc8\xe3\x0a\xdd\xef\x54\x6f\xe8\xf0\x1a\xf0\xb2\xcc\xd6\x32\xec\x89\xbc\x97\x82\xc2\x1b\xe8\xaf\x54\xdf\xde\x58\x32\xeb\xd2\x2b\x47\xc5\x20\xfa\x8a\x5a\x80\xf3\x4e\xd7\x95\x52\x6b\xab\x24\xaf\x19\x3c\xa8\x67\xac\xdb\x35\x6f\x3b\xb3\xc6\x94\x3c\x91\xa1\x10\xd6\xde\xee\xa9\x3b\x26\xfd\xfd\xfd\x0e\xbf\xeb\xa2\x35\x1a\xf1\x5a\x8f\x0c\x42\x99\x5f\xc9\x46\xa1\xec\x00\xa4\x91\x51\xa2\x5a\x92\xc2\x7a\x4b\xdc\x1a\x11\x18\x4c\xc7\x1d\x8c\x23\x2f\xad\x78\x89\x16\xb3\x6e\x38\x4a\x4d\xb6\x8a\xef\x65\x1f\x50\xaa\xca\xd3\xae\xf4\x14\x4a\xab\x44\xf3\x47\xb9\xda\xc9\xaa\x4a\xd3\x2a\x3d\xa1\xd0\x3f\x19\x9d\xbc\x6b\x8c\x25\x83\xbc\x0a\x3e\x0f\x9e\xe7\xe8\x5c\x2e\xec\xb3\x51\x16\x45\xc6\x91\x97\xd4\x9b\xb7\x51\xf8\x1c\xc9\x1a\xf2\x1b\x59\x9b\xbb\x7a\x93\xad\x7d\x49\x1d\x58\x53\xa0\xf3\xae\x7f\x58\x9f\xb4\x8b\xf5\x52\x7a\x06\xff\xfe\xf7\x2a\xe7\xdd\x2a\xd0\xbe\xfa\xae\x48\x37\x64\x02\x08\x3a\x60\xa5\xe2\xca\x0a\x62\x70\x37\xe9\xae\xa7\x77\xcc\xff\x07\x00\x00\xff\xff\x74\x67\xf9\x34\x1b\x07\x00\x00")

func assetsRazeeRemoteResourceS3YamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRemoteResourceS3Yaml,
		"assets/razee/remote-resource-s3.yaml",
	)
}

func assetsRazeeRemoteResourceS3Yaml() (*asset, error) {
	bytes, err := assetsRazeeRemoteResourceS3YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/remote-resource-s3.yaml", size: 1819, mode: os.FileMode(420), modTime: time.Unix(1595641434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeWatchKeeperYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xdf\x73\x1a\x47\x0c\x7e\xe7\xaf\xd0\xf0\x7e\xdc\x81\x83\x93\xee\x1b\x53\x68\x33\x13\xe3\x30\xd8\x49\x9b\xbe\x30\xf2\x9e\x8e\xdb\xf1\xfe\xca\xee\x1e\xe9\xf5\xaf\xef\x2c\x87\xf1\x62\x8e\x34\x9e\xe9\x4c\xf6\x89\xd3\x27\x7d\xfa\x24\x21\xa1\x15\x9f\xc9\x79\x61\x34\x03\xb4\xd6\xe7\xbb\xf1\xe0\x51\xe8\x92\xc1\x9c\xac\x34\xad\x22\x1d\x06\x8a\x02\x96\x18\x90\x0d\x00\x50\x6b\x13\x30\x08\xa3\x7d\xfc\x04\xd8\x3d\x85\x0f\x0b\x7c\xf7\xae\xa4\xe9\xe4\xfa\xaa\xe2\xc4\x7f\xe1\xd5\xc3\xb4\xa2\x29\x5e\x55\xe3\xe9\xdb\x09\x11\xbf\xc2\x92\x5f\xbf\x1d\x4f\x86\xfb\x38\x87\xff\x10\x8d\x84\xc9\xb7\x22\x64\x8e\xac\x61\x30\xac\x43\xb0\x9e\xe5\xd1\x54\x37\x0f\x23\x6e\x54\xbe\x77\xcb\x84\xc9\xff\xc0\xc0\xeb\xec\x91\xc8\x92\x1b\x6d\x45\x78\xc1\xc2\x8d\x52\x22\x64\xbe\xc6\x57\x2a\xd1\xa8\x88\xc1\xb7\x84\x7d\x00\x20\xf1\x81\xe4\xa1\xc0\x7d\x8a\xbc\x73\x70\xe4\x4d\xe3\x38\x31\x18\x4a\x11\x68\x38\xf0\x96\x78\x74\x73\x64\xa5\xe0\xe8\x19\x8c\xf7\x5f\x3b\x11\x9b\xf2\x5e\xf8\x60\x5c\x7b\x23\x94\x08\x0c\x8a\x01\x80\x27\x49\x3c\x18\xd7\x51\xab\x48\x7a\x93\xe4\x82\x38\x84\x33\x35\x3e\x38\x0c\xb4\x6d\x3b\x9f\xd0\x5a\x62\xb0\x36\x52\x0a\xbd\xfd\x64\x4b\x0c\x34\x00\x08\xa4\xac\xc4\x40\x07\xe2\x64\x62\xf1\xc9\x93\x1c\xfd\x59\xba\xf7\xdd\x6a\x3b\x97\xde\x8e\x01\x3c\xb5\x62\xff\x9b\xdc\x4e\x70\x9a\x71\x6e\x1a\x1d\x6e\xcf\x02\x32\x8f\x07\x4f\x6e\x74\x40\xa1\xc9\x1d\xd5\x65\x40\x7a\xf7\x2c\x35\x1a\xba\x8c\x77\xf7\xb3\xf5\xfd\x66\xbe\xb8\x99\x7d\xd9\x2c\x67\x7f\x26\x1e\x00\x3b\x94\x0d\xfd\xe6\x8c\x62\x27\xe6\x3d\x7f\x25\xb6\x4b\xb4\x1f\xa8\x5d\x53\xf5\x12\xee\xab\x26\xeb\x62\xce\x3c\x1f\xa9\xfd\xbe\x88\xf8\x8c\x8d\xbb\x81\x92\x41\x70\x0d\xf5\x54\x71\x3b\x5b\x2e\xee\x56\xb3\x5f\x17\x3f\xa6\xbf\x12\x24\xcb\x5e\xe1\x7b\x64\x85\xa1\x66\xc7\x71\x8f\x62\x0a\x6f\x91\xf7\x25\x5e\xcf\xfe\x5a\x2c\xe6\xb3\xbb\xf7\x9b\x4f\xeb\x9b\x9f\xd3\xbc\x4b\x12\xce\x25\x7e\x5c\xff\xbe\xf9\xb0\xf8\xf2\x63\x32\x3d\x71\x47\xe1\x15\x1a\xbb\x80\xff\xd2\x78\xae\xe1\x38\xc3\x8f\xf3\xc5\x66\x71\xfb\xf9\x5c\x1e\x83\xa1\x75\xa6\x6c\x78\xfc\x17\x0c\x8f\xb8\x50\xb8\x8d\xd8\xd7\x06\xdb\x78\xad\xd2\x2d\xeb\x34\xb1\x62\x34\x1d\x4d\x5e\x44\xac\x1a\x29\x57\x46\x0a\xde\x32\x98\xc9\x6f\xd8\xfa\xc1\xe5\xaa\x9e\x57\xf8\xb0\xb6\x3e\xed\x85\x8c\x37\xc8\x9f\x76\x47\x91\x32\xae\x65\x30\x2d\x8a\xa5\x38\x41\xb8\x6d\x18\xbc\x29\x0a\x95\x58\x1d\x7d\x6d\xc8\x5f\xe2\x18\xf7\x73\x4c\x13\x0a\x29\x76\xa4\xc9\xfb\x95\x33\x0f\x94\xb2\xd0\xdf\xcf\x97\xe3\x10\x6b\x94\x42\x5d\x9e\x1a\x33\xf0\x75\xfe\x44\x32\xf2\x75\x02\x0a\x2d\x82\x40\x39\x27\x89\xed\x1d\x71\xa3\x4b\xcf\xe0\xba\x28\x12\x17\x4b\x4e\x98\xf2\x08\x5e\x9d\x80\x41\x28\x32\x4d\x48\xd0\x04\xac\x50\xc8\xc6\xd1\x7d\xed\xc8\xd7\x46\x96\xdd\x8d\xef\xde\xce\xc8\x46\xd1\x32\x5e\xb9\xa4\x31\x19\xa8\x68\xe9\x96\x33\x6f\xbc\xcb\xbd\xe3\x39\x5a\x9b\xef\xc7\x90\x59\x23\x65\x92\xa0\x9b\x65\x0f\x74\x99\x47\x1b\x9d\x1d\x97\xbd\x3c\xe3\xea\x85\x3b\xad\xc9\x9d\x3d\xae\x77\xda\xe7\x92\x2a\x6c\x64\x58\x9a\x92\x18\xbc\x99\x14\x67\xdc\x27\x9b\xd4\x23\xfa\x42\x35\xff\x4b\xba\x0b\x65\xf7\x16\xfd\x6f\x00\x00\x00\xff\xff\x5e\x39\x40\x98\xdb\x08\x00\x00")

func assetsRazeeWatchKeeperYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeWatchKeeperYaml,
		"assets/razee/watch-keeper.yaml",
	)
}

func assetsRazeeWatchKeeperYaml() (*asset, error) {
	bytes, err := assetsRazeeWatchKeeperYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/watch-keeper.yaml", size: 2267, mode: os.FileMode(420), modTime: time.Unix(1595641434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReporterJobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x31\x6f\x03\x21\x0c\x85\x77\x7e\x85\xb7\x5b\x4a\xa2\x0c\x5d\xd8\xba\x56\x55\xd5\xa9\x4b\xd5\xc1\x47\x5e\x12\x14\xc0\xc8\x38\x91\xfa\xef\xab\x0b\xbd\xa8\x95\xca\x82\x79\xfe\x78\x0f\xcc\x2d\xbd\x43\x7b\x92\x1a\x68\x66\x8b\xa7\xed\x75\xe7\xce\xa9\xee\x03\x3d\xcb\xec\x0a\x8c\xf7\x6c\x1c\x1c\x51\xe5\x82\x40\x7a\x2a\xbe\xc0\xa0\x5e\xd1\x44\xcd\x11\x65\x9e\x91\xfb\x82\x10\x15\xd6\x33\xac\x65\x8e\xd8\x28\xf6\x27\xb6\x4d\x94\xb2\x1d\x6c\xa0\xc9\xf4\x82\xc9\xf5\x86\xb8\xf0\x51\x4a\xcb\xb0\x24\xb5\x07\xda\x39\xa2\xc6\xca\x39\x23\xa7\x5e\x86\x30\x73\x3c\xcb\xe1\xf0\x92\x4a\xb2\x40\x8f\x8e\xc8\x50\x5a\x66\xc3\xc8\x5b\x9d\x6e\x35\xf4\x9a\x22\x9e\x62\x94\x4b\xb5\x40\x23\xdf\xff\x7a\x92\x97\x06\x65\x13\xfd\xb9\xa1\xe8\xc6\x6a\x6f\x92\x53\xfc\x0a\xf4\x8a\x2b\xd6\x56\x94\x6a\x9c\x2a\xb4\xaf\xf6\x44\x7e\x9d\xc1\xed\x37\x77\x74\x59\xa9\xf0\x11\x7f\x22\x47\xe0\x3f\x28\xeb\xb1\x07\xfa\x98\x46\x6b\x7a\xa0\xc9\xfb\xc5\x77\xa9\xd6\x7d\x28\xbd\x71\xbc\xcb\xe3\xf0\xe9\xbe\x03\x00\x00\xff\xff\x1f\x51\x01\x1d\xb2\x01\x00\x00")

func assetsReporterJobYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReporterJobYaml,
		"assets/reporter/job.yaml",
	)
}

func assetsReporterJobYaml() (*asset, error) {
	bytes, err := assetsReporterJobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reporter/job.yaml", size: 434, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/metric-state/deployment.yaml":                      assetsMetricStateDeploymentYaml,
	"assets/metric-state/service-monitor.yaml":                 assetsMetricStateServiceMonitorYaml,
	"assets/metric-state/service.yaml":                         assetsMetricStateServiceYaml,
	"assets/prometheus/additional-scrape-configs.yaml":         assetsPrometheusAdditionalScrapeConfigsYaml,
	"assets/prometheus/base-configmap.yaml":                    assetsPrometheusBaseConfigmapYaml,
	"assets/prometheus/deployment.yaml":                        assetsPrometheusDeploymentYaml,
	"assets/prometheus/htpasswd-secret.yaml":                   assetsPrometheusHtpasswdSecretYaml,
	"assets/prometheus/kube-rbac-proxy-secret.yaml":            assetsPrometheusKubeRbacProxySecretYaml,
	"assets/prometheus/kube-state-service-monitor.yaml":        assetsPrometheusKubeStateServiceMonitorYaml,
	"assets/prometheus/kubelet-serving-ca-bundle.yaml":         assetsPrometheusKubeletServingCaBundleYaml,
	"assets/prometheus/prometheus-additional.yaml":             assetsPrometheusPrometheusAdditionalYaml,
	"assets/prometheus/prometheus-datasources-secret.yaml":     assetsPrometheusPrometheusDatasourcesSecretYaml,
	"assets/prometheus/prometheus-rules.yaml":                  assetsPrometheusPrometheusRulesYaml,
	"assets/prometheus/prometheus.yaml":                        assetsPrometheusPrometheusYaml,
	"assets/prometheus/proxy-secret.yaml":                      assetsPrometheusProxySecretYaml,
	"assets/prometheus/service.yaml":                           assetsPrometheusServiceYaml,
	"assets/prometheus/serving-certs-ca-bundle.yaml":           assetsPrometheusServingCertsCaBundleYaml,
	"assets/prometheus-operator/deployment.yaml":               assetsPrometheusOperatorDeploymentYaml,
	"assets/prometheus-operator/operator-certs-ca-bundle.yaml": assetsPrometheusOperatorOperatorCertsCaBundleYaml,
	"assets/prometheus-operator/service.yaml":                  assetsPrometheusOperatorServiceYaml,
	"assets/razee/razee-job.yaml":                              assetsRazeeRazeeJobYaml,
	"assets/razee/razee-namespace.yaml":                        assetsRazeeRazeeNamespaceYaml,
	"assets/razee/remote-resource-s3.yaml":                     assetsRazeeRemoteResourceS3Yaml,
	"assets/razee/watch-keeper.yaml":                           assetsRazeeWatchKeeperYaml,
	"assets/reporter/job.yaml":                                 assetsReporterJobYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"metric-state": &bintree{nil, map[string]*bintree{
			"deployment.yaml":      &bintree{assetsMetricStateDeploymentYaml, map[string]*bintree{}},
			"service-monitor.yaml": &bintree{assetsMetricStateServiceMonitorYaml, map[string]*bintree{}},
			"service.yaml":         &bintree{assetsMetricStateServiceYaml, map[string]*bintree{}},
		}},
		"prometheus": &bintree{nil, map[string]*bintree{
			"additional-scrape-configs.yaml":     &bintree{assetsPrometheusAdditionalScrapeConfigsYaml, map[string]*bintree{}},
			"base-configmap.yaml":                &bintree{assetsPrometheusBaseConfigmapYaml, map[string]*bintree{}},
			"deployment.yaml":                    &bintree{assetsPrometheusDeploymentYaml, map[string]*bintree{}},
			"htpasswd-secret.yaml":               &bintree{assetsPrometheusHtpasswdSecretYaml, map[string]*bintree{}},
			"kube-rbac-proxy-secret.yaml":        &bintree{assetsPrometheusKubeRbacProxySecretYaml, map[string]*bintree{}},
			"kube-state-service-monitor.yaml":    &bintree{assetsPrometheusKubeStateServiceMonitorYaml, map[string]*bintree{}},
			"kubelet-serving-ca-bundle.yaml":     &bintree{assetsPrometheusKubeletServingCaBundleYaml, map[string]*bintree{}},
			"prometheus-additional.yaml":         &bintree{assetsPrometheusPrometheusAdditionalYaml, map[string]*bintree{}},
			"prometheus-datasources-secret.yaml": &bintree{assetsPrometheusPrometheusDatasourcesSecretYaml, map[string]*bintree{}},
			"prometheus-rules.yaml":              &bintree{assetsPrometheusPrometheusRulesYaml, map[string]*bintree{}},
			"prometheus.yaml":                    &bintree{assetsPrometheusPrometheusYaml, map[string]*bintree{}},
			"proxy-secret.yaml":                  &bintree{assetsPrometheusProxySecretYaml, map[string]*bintree{}},
			"service.yaml":                       &bintree{assetsPrometheusServiceYaml, map[string]*bintree{}},
			"serving-certs-ca-bundle.yaml":       &bintree{assetsPrometheusServingCertsCaBundleYaml, map[string]*bintree{}},
		}},
		"prometheus-operator": &bintree{nil, map[string]*bintree{
			"deployment.yaml":               &bintree{assetsPrometheusOperatorDeploymentYaml, map[string]*bintree{}},
			"operator-certs-ca-bundle.yaml": &bintree{assetsPrometheusOperatorOperatorCertsCaBundleYaml, map[string]*bintree{}},
			"service.yaml":                  &bintree{assetsPrometheusOperatorServiceYaml, map[string]*bintree{}},
		}},
		"razee": &bintree{nil, map[string]*bintree{
			"razee-job.yaml":          &bintree{assetsRazeeRazeeJobYaml, map[string]*bintree{}},
			"razee-namespace.yaml":    &bintree{assetsRazeeRazeeNamespaceYaml, map[string]*bintree{}},
			"remote-resource-s3.yaml": &bintree{assetsRazeeRemoteResourceS3Yaml, map[string]*bintree{}},
			"watch-keeper.yaml":       &bintree{assetsRazeeWatchKeeperYaml, map[string]*bintree{}},
		}},
		"reporter": &bintree{nil, map[string]*bintree{
			"job.yaml": &bintree{assetsReporterJobYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
