// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package manifests generated by go-bindata.// sources:
// ../../assets/prometheus/additional-scrape-configs.yaml
// ../../assets/prometheus/base-configmap.yaml
// ../../assets/prometheus/deployment.yaml
// ../../assets/prometheus/kubelet-serving-ca-bundle.yaml
// ../../assets/prometheus/prometheus-additional.yaml
// ../../assets/prometheus/prometheus-rules.yaml
// ../../assets/prometheus/prometheus.yaml
// ../../assets/prometheus/serving-certs-ca-bundle.yaml
// ../../assets/prometheus-operator/deployment.yaml
// ../../assets/prometheus-operator/operator-certs-ca-bundle (Copy 1).yaml
// ../../assets/prometheus-operator/operator-certs-ca-bundle.yaml
// ../../assets/prometheus-operator/service.yaml
// ../../assets/razee/razee-job.yaml
// ../../assets/razee/razee-namespace.yaml
// ../../assets/razee/remote-resource-s3.yaml
// ../../assets/razee/watch-keeper.yaml
package manifests

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsPrometheusAdditionalScrapeConfigsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x5d\x73\xa3\x38\x16\x7d\xcf\xaf\xc8\x1f\xe8\x5d\x10\x21\xd3\xa4\x6a\x1e\x8c\xbb\xf9\xb2\x4d\xc6\xb8\x8d\x3e\xde\x90\x64\x03\xb6\x64\x18\x1b\x63\x8b\x5f\xbf\x25\x20\x1f\x9d\x74\x7a\x66\xbb\xe6\x61\xab\xf6\x21\x95\x0a\x65\x74\xef\x39\xf7\x9c\x73\x15\x67\x75\x99\x6e\x8e\xa7\xb2\x3a\x3c\xdc\xb6\xe6\x0d\xcf\x9a\xec\xe1\xe6\xf6\xb6\x3e\x56\x72\xd3\x14\x9b\xf3\xe9\x53\xc6\x79\xd9\x94\xd5\x21\x13\xff\x52\x99\x14\x0f\xb7\xa1\x5a\xe4\xf3\x95\x91\x7f\x83\x9e\x1d\xfa\xb6\x20\x70\x99\x73\xff\x73\x8e\xe5\x3a\x27\xbe\x90\xa4\x74\x25\xb5\xc2\x1c\x5b\xd1\x6e\x0e\x9c\x0b\x81\x76\x97\xf9\x42\xf2\x49\xd5\x84\x7e\xdd\x62\xe1\x9c\x31\x34\xc5\x63\x39\x39\x64\x56\x5a\x92\x95\xd9\x71\xdf\x33\xc8\xca\x6c\x08\x4a\x54\x06\xe3\x2e\xba\x54\x79\x18\xc4\x06\x46\x49\x8d\x4d\x67\x47\x81\x2d\x33\xc8\xbb\xc7\xbc\xca\xc3\xe9\x24\x9f\xaf\x5c\x03\xa3\xe8\x40\x50\xd2\x3d\x96\x2e\x8d\x40\x63\x62\xb9\x6e\x98\x95\x14\xdc\x5f\x37\x14\xa6\x06\x93\x62\xc7\x94\x7d\xe4\x30\x12\x73\x14\xdb\xcc\x4a\x04\x5d\xd9\x1d\x97\x8b\x33\x06\x57\x53\xff\xcd\x4a\xfb\x44\x41\x5c\xd0\x2f\xd5\xdd\xe2\x4b\x7e\x89\x4c\x63\x36\xe2\x9b\xcd\x57\xee\x9f\x14\x44\x5b\x2a\xbd\x86\x7c\xab\xf2\xa1\x46\xaa\xa8\x4c\x0d\x82\x16\x0d\x95\xce\x5e\xff\xc6\xc0\xdb\x73\x29\x3a\x6a\x85\x87\x69\x39\xc9\x43\xe5\x7e\x25\x90\x14\x1c\x5e\x8d\x30\x48\xda\x30\x88\x77\x4c\x7a\x97\x0c\xda\x87\xd0\x77\x00\x41\x61\x9e\x05\x89\xc1\x82\xc5\x39\xfc\x2a\x64\x18\x44\x82\xa1\xb4\x66\x32\xdd\xcf\xa7\xee\x9f\x1c\xc5\x46\xe8\x27\x35\x03\x5e\x49\xfd\x75\xce\xfd\xa2\x66\xca\x6d\x59\xe9\xee\x32\xdf\x3b\x13\xa0\x9f\x7d\x9e\x85\xd3\xc9\x2e\xf4\xdd\x8a\x07\xc9\x05\x4f\xef\x66\xe1\xd4\xed\x30\x28\x04\x85\xeb\xfb\xd0\x2f\x0c\x1e\xb8\xdd\xd8\xcf\x3a\xf3\x45\x17\x7a\xc9\x62\xad\x26\x32\xf4\x23\x81\x51\x24\x58\xe9\x1a\x14\x34\x82\x96\xae\xcc\xe0\x55\x84\x7e\xdc\x52\x49\x6a\xa2\x5c\x5d\xcf\x64\x20\xdd\xf7\xfd\xf7\xcf\x6d\x81\xad\x61\xce\xdc\x2f\x44\xe8\x7b\x3b\x1e\xa4\x05\xd5\x35\xad\xa8\x60\xfe\x7a\xec\x27\x3d\x93\xc0\x6d\x33\x68\x1b\x4c\x8d\x3a\x78\xe6\xda\xdd\x51\x60\x5e\x28\xb0\x05\x3d\x24\xdd\xbc\x1c\xfb\xd2\x3f\x41\x2c\x98\xef\x29\x8c\x12\x31\xd4\xd4\xf8\xe3\x96\xcb\x54\x6d\x56\x6e\xc1\x51\x52\x8d\x58\x9e\xb4\x60\x32\xe9\x19\x19\x74\xce\x3d\x1e\xe0\x99\x0c\xf4\xfa\xeb\x30\xd0\x1c\x47\x76\x38\xc5\x39\x03\xb1\xc2\xc8\xad\xa9\x64\xb9\xc6\x1c\x06\x89\x45\x95\xdb\x11\xe4\x16\xfa\x7d\xb2\xea\xcf\xdb\x11\x14\x9d\x99\x72\x6b\xda\xeb\x6b\x91\xaf\x83\xa8\xd5\x1a\xca\xfc\xd4\x64\xea\x2e\x4f\x7b\xcc\xef\x7b\x7a\xc3\x99\x7e\xd6\x52\xa8\xfb\x5a\xe4\x19\xc4\x6f\xce\x71\x15\x87\xb6\xc6\x7b\x66\x40\xec\xc9\x72\xa8\x35\xf0\x19\x9f\xf4\xdc\x09\x0a\xcf\xe1\x57\x47\x7f\x5e\x71\x20\x3a\xb2\xba\xe4\x14\x3a\x6a\xec\x53\x66\x90\xe5\xd4\x72\x7b\xdc\x4c\xb9\x15\x46\x64\xe4\x4b\x63\x73\x15\xb5\x48\x4d\x7c\x3d\x37\x5e\x6b\xdd\xd0\xd2\x35\xb2\xa7\xd9\x7c\xb9\xf6\x5e\x60\xd2\x16\xdc\x4f\x3b\x64\xc5\x7b\x04\xc6\xfe\xbb\xbb\xb3\xe6\x97\xfb\xd7\xee\xe5\x59\xa5\xdf\xcb\x43\x3f\x2e\x10\x20\x35\xf5\xd7\xf7\xe1\xd4\x01\x18\x85\x2d\x3b\xa4\xe7\xb9\x15\x0b\x6c\x45\x82\x07\x8b\xb6\xf7\x31\x8a\xce\x04\x25\x82\x29\xbb\xa6\xca\xe9\x08\x8a\x40\x06\x63\x81\x61\xbc\xa3\x56\x7a\xe6\x53\x67\x87\x57\xf6\x8e\x1d\x96\x5a\xab\x25\x81\x9e\x22\x28\xda\x72\xdf\x39\x12\x68\x6f\x89\x14\x27\xed\xb3\xb9\x45\x0a\x56\x3a\x8a\xc3\xbb\x96\x81\x74\xc7\x64\x6a\x30\xe5\x7c\xd7\xfb\x5c\x8a\x56\xd7\x67\x07\x52\x63\x90\x16\x58\xcf\x05\xda\xc6\xdc\x4a\xda\x0c\xa4\x3d\x96\xef\x7a\x32\x9d\x8e\x78\x6f\x73\xc4\xc8\x99\x74\xfa\x9a\xbd\x97\xf5\x3c\x82\x48\x50\xdf\x2b\x09\xbc\x6e\x31\x70\xce\x44\x8a\x03\x1b\x78\x68\x7a\xcd\xfb\xa2\xa5\xbb\x2a\x1f\x3f\xd3\x60\x34\x19\x38\x0a\x22\x41\x40\x7a\xf7\x58\xba\x5b\x04\x4c\xc1\x7d\x6f\xfb\xa6\xfe\x99\x82\x44\x20\x70\x2d\xb0\x4c\x4f\x48\xe5\xe7\x99\xda\x0f\xe7\x06\x49\xc1\x24\x17\xdc\x73\x4e\x18\x46\x82\x7e\xa9\x72\x64\x3a\x05\xf1\x13\x45\x50\xdc\x21\xf3\xf3\x73\x0d\xe6\x5f\x0b\x0c\xd2\x86\x40\xdb\x78\x2c\xdd\x37\x9c\x24\x82\x48\xcf\xa4\xc1\xf2\xcc\x2c\xb2\x7b\xdc\x2d\x8d\xc5\x65\xc4\x09\x1c\x93\xc9\xf8\xb9\x3e\xeb\xaa\x1c\x9a\xce\x56\x6b\x13\xa7\xdf\x73\x8b\x80\xdd\x12\x3f\x1d\x72\x2f\x35\xde\xe0\x9b\x54\xf3\xf2\x54\xf7\x5e\x9c\x3e\x67\xf0\x76\xe0\xe3\x72\x1f\x7a\xc3\x99\x7d\xf6\x9a\xce\x05\xa3\xa4\xfa\xb8\xff\x49\xab\xbd\x39\xb7\xf0\x75\x3e\xd4\xec\xe6\x2a\xf9\x6d\x81\x8c\x96\x05\x51\xbb\x09\xf6\xed\x4b\x8e\x3b\x3b\x0c\x13\x90\xa1\xb8\x65\xf9\xbb\x3d\x52\x32\x59\x34\x08\x70\x41\x65\xaa\xf7\xc7\x76\xf4\xbd\x40\x96\xdb\x92\x69\xa8\xf5\xf6\xb1\xf6\xad\xc5\xbd\xc6\x33\x5f\xb9\x8a\x82\xab\x78\x2c\xdd\x0b\x05\xbd\x46\x15\x81\xe3\xbc\xde\x7f\xb6\xa3\x56\xaa\x30\x48\x47\xec\xd7\x7e\x0f\x21\xd3\xd1\x3b\xac\x40\xdf\xed\x8a\x78\xcb\x7c\x67\xff\x3c\x7b\x60\x16\x4c\x36\x82\x07\xee\x09\xc3\x58\x20\x2b\x12\xc4\x2f\x0a\xde\xeb\xd3\xec\xf9\x23\x28\x12\xc4\x1b\xb9\x7f\xa5\xbb\x0c\xa4\x82\x4d\x86\x1d\xc8\x64\x7a\x20\x28\xbf\x0f\x83\x44\x71\xb8\x1e\xb5\x14\xb7\x1c\x45\x3b\x92\x8e\x5a\x0a\x16\xf7\xa1\xd7\x7c\xa4\xc9\x0b\x05\x4f\xb3\xbb\x6e\x29\xf4\x54\x06\x52\x63\x9c\xd1\x56\xef\xa3\xcc\xf7\x8c\x1e\x7b\xea\x3c\xed\xe6\x2d\xf3\x3d\x23\xfb\x41\x6f\x4c\xa6\x17\xea\x7b\xbb\x21\xd7\x74\x96\x78\x8a\x80\xd4\x78\xc2\xfd\xec\x8d\x20\xaa\xb1\xf5\x74\x8e\xb3\x1d\xb5\xa4\x08\xe4\x62\xf3\xa5\xca\x67\xd3\xbb\xe3\x6c\xf9\x73\xdd\x62\x98\xec\x99\x4c\x3b\x66\x3a\xdb\xf9\xf4\x43\xcf\xfd\x22\x3e\x47\xf1\xbf\x81\xef\x99\xff\x69\x41\xd1\xae\xe6\x33\xb5\xaf\xfe\xe8\xaa\x7b\xe4\x2f\x8f\xb3\x6f\x9f\x7f\x9b\x79\xd7\xfd\xe8\xf1\x1f\x69\x7f\xbf\xf8\x56\xed\x17\xf9\xcf\xb8\xf2\xf6\x44\xbf\x67\xc5\x5b\x34\xfa\x18\xc3\xb8\xcf\xfe\xc7\xd2\x1d\xe6\xeb\x9b\xc5\x3b\x3d\x78\x1f\xf8\x5a\x7b\xe1\x29\x63\x3c\xa7\xc1\x28\x3a\x12\x94\x0c\x98\x52\x47\x11\x98\x54\x18\x25\x3a\xf7\x9a\x57\xf9\x94\xff\x28\x9f\x5e\xb8\x7b\xa3\x65\xb5\xbc\xfe\x8a\x3f\xfa\xac\x41\xf1\xa5\x3f\x63\xe4\xf7\x15\x56\x45\xd0\x70\xfe\x87\xb9\xe3\x7f\x7c\xde\xaf\xfb\xd5\x2e\x28\x4c\xf9\x58\xb3\xc0\x56\x52\x53\x70\x77\xff\x32\xcb\xf5\x87\xfc\xfc\x50\x87\xba\xa7\x71\xe7\xff\xa4\x9f\x3e\xd3\x90\xe9\x0c\x75\xd5\x77\xd9\x7b\x98\xe9\xfb\xc6\x21\x29\x32\x68\x0b\x26\x1c\x03\xa3\xf8\xa8\x77\x5b\x7f\x7f\x46\x57\xbd\xdf\x0c\x0c\xc5\x59\xef\x55\x0a\xd3\x86\x5a\x91\x8d\x00\x29\x32\x78\x35\xb5\x5f\x90\x95\xb4\xdc\xf7\x4e\xb3\x15\x1b\xee\x04\xaf\x71\xf9\x8d\x20\x68\xf2\xee\xde\x1b\x1e\xa2\x8a\xa6\xce\x81\xe8\x9a\x52\xec\x90\x35\xdc\x67\x49\xfa\xb2\xe3\x43\xad\xe3\x37\x33\x60\x20\x79\xbf\x43\xf5\x7d\x48\xdf\x23\x02\xb7\x25\x93\xbf\xd8\xb7\xff\x5d\x96\x3d\xf7\xf2\x3f\x98\xb3\xbf\xd4\xdb\xc0\xb5\x5b\x70\xbf\xf8\x25\x0d\x8e\xda\xee\xff\x9f\x1a\xcf\x19\x73\xe4\x75\x76\xbd\xbe\x87\x7c\x84\xe9\x55\x0e\xa9\x4b\xfe\xa1\x67\x40\xaa\xb8\x14\x2f\xef\xff\x55\xc6\x3c\xed\x02\xed\x0f\x2b\x32\xfe\x86\xef\x5f\x76\x84\xd7\x6c\x1e\x85\x71\x9c\xad\xf2\x7f\x3f\xee\x6a\x46\xa6\xa7\xfa\x8f\xee\x54\xf5\xd9\xfb\x92\xcf\x43\x5d\x68\x0a\x7a\x58\xde\x87\xd3\xe5\xf5\xb1\x5c\xaa\x9f\xdd\x5d\x5e\xef\x95\x31\x37\x5e\xf9\x63\x98\x1d\x85\xde\xe5\x6d\x3f\xff\x18\x27\xff\xef\xb9\xfb\xc2\xd7\x90\x83\xff\x40\x4f\x6f\xcf\x9c\xe6\xbf\xff\x7e\xb3\x2f\x0f\xfc\xe1\x76\xb5\x61\xc7\x4d\x73\x23\x37\x4d\xf6\xf4\xcd\x07\x3b\x6e\xb2\xa6\xac\x0e\xdf\x4a\xb9\x39\x35\x99\xac\x1f\x6e\x0f\x67\x21\x6e\x6e\x6f\x0f\x99\xdc\x3c\xdc\xbe\x7c\x1d\xf2\xe9\xc4\x8e\x59\xbd\xf9\xc4\xaa\xc3\xb6\xcc\x4f\x37\xff\x09\x00\x00\xff\xff\xb8\x45\x75\xfd\x4b\x11\x00\x00")

func assetsPrometheusAdditionalScrapeConfigsYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusAdditionalScrapeConfigsYaml,
		"assets/prometheus/additional-scrape-configs.yaml",
	)
}

func assetsPrometheusAdditionalScrapeConfigsYaml() (*asset, error) {
	bytes, err := assetsPrometheusAdditionalScrapeConfigsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/additional-scrape-configs.yaml", size: 4427, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusBaseConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\x1b\x37\x10\xbd\xeb\x57\x0c\x92\x00\xb6\x61\x4b\x81\x03\xf4\x50\x36\x6e\x80\x16\x39\xb6\xa7\xa2\x17\xd7\x25\x66\x97\x23\x2d\x6b\x2e\x87\x20\xb9\x8e\x5c\xf4\xc7\x17\xe4\x72\x3f\xa4\xca\x52\x64\xa4\x27\x01\xcb\x79\x6f\x1e\x1f\x87\x8f\x7a\xd4\x56\x09\xf8\x99\xed\x5a\x6f\x7e\x41\xb7\x40\xa7\x7f\x27\x1f\x34\x5b\x01\x4f\xb7\x8b\x96\x22\x2a\x8c\x28\x16\x00\x16\x5b\x12\xe0\x3c\xb7\x14\x1b\xea\xc2\xb2\xc2\x40\xcb\x3a\x43\xcb\x72\x70\x58\x93\x00\x45\x6b\xec\x4c\x5c\x0c\xc8\x09\xb3\x7a\x6e\x8d\x80\x7f\x16\x00\x00\xa1\xf6\xe8\x48\xf6\x04\x41\xe4\x6f\x6f\xe1\xf3\x16\x5b\x67\xa8\xac\x42\xbf\x0a\x6b\xf6\x89\xa5\xd2\x76\x03\x81\xfc\x93\xae\x29\xc0\x93\x46\x88\x0d\xc1\x4f\x06\xeb\xc7\x8a\xb7\xf0\x79\xeb\xd8\x47\xf2\xab\x9e\xab\x30\xfe\xd6\x10\x78\x32\x58\x91\x49\x70\x34\x86\xbf\x84\x0c\xc4\x3a\x76\x68\x06\xc2\xa1\x25\x59\xe5\x58\xdb\x08\x91\xa1\x1a\x14\x74\x9e\x54\xe1\x4b\x5a\xd0\x18\x60\x0f\x6c\xcd\x33\x04\x6e\x69\x14\xd5\xb7\x5e\xc2\x5f\x5c\xc9\xde\xb0\x8b\xc7\xae\x22\x6f\x29\x52\x58\x0e\x55\x17\x8b\x5c\x06\xd0\x52\xf4\xba\x0e\xd2\x61\x6c\x04\xbc\x4f\x5b\xa4\xb2\xe4\xd0\x63\x5b\x6c\xc9\xa5\xac\x3a\x43\x02\xee\x9b\x18\x9d\xfc\xb0\xdd\x3e\x0c\x24\x53\x03\x19\xd4\xae\x9f\x49\x8a\xe7\x04\x2b\xad\x07\x4c\x31\x64\xbf\x7a\xf2\xbf\x14\x24\x13\xb2\xaa\x03\x7b\x85\xd8\x60\x84\x06\x9f\x08\xde\x50\x0f\x5b\x69\x7e\x1f\x1a\xee\x8c\x92\x15\xc9\x0c\x54\x70\x07\xd1\x77\xf4\x06\xd0\x5a\x8e\x18\x35\xdb\xb1\x1b\x2c\x21\x70\xe7\x6b\x92\xb9\x5b\x10\x70\x2f\x65\x1a\x3a\x39\xdf\x54\xdf\x4f\x4e\x78\x59\xda\x49\xcd\x72\xbf\xdd\xc3\x44\x0e\xe9\x84\xf3\x28\x3f\x12\xb9\xf9\x77\x4f\x1b\xda\x8a\xac\x6b\xf4\xe9\xbf\x42\x50\x29\x4f\x21\x48\xf9\x30\x9e\x42\x44\xbf\xa1\xd8\x17\x09\x90\x32\x9f\x92\xec\xbf\x8e\x4c\xfb\x45\x23\xcf\x48\xe3\xc9\x19\xac\xa9\x25\x1b\x05\x54\x65\x7e\x97\x34\xcc\xef\xe0\x66\xcd\xad\xf8\xfe\xf6\xf6\xbb\x23\x1a\xe7\x02\x5e\x92\xa9\x6d\x88\x68\xeb\x69\xab\x83\x2d\x79\xbd\x45\x37\xd3\x95\x7d\x79\xf9\x0c\xfa\xa9\xb9\x5c\x5d\x5f\x1d\xd1\xb4\x0f\x1e\xa3\xe1\x25\x81\x87\x6a\xcf\xe0\x1f\xc4\x25\xec\x57\xb6\x58\x9c\x8e\x1b\x56\xe1\xbc\x1c\x71\xac\x06\x9e\x13\xd1\x91\x40\x8a\x6a\x83\x9e\x14\xa4\x33\x0f\x70\x99\x5b\xfa\xb8\x5c\x7b\xa2\xa2\x1d\xf4\x1a\x2c\x5b\x02\x1d\xc6\xf2\xab\x42\xb5\x93\x3e\x99\xe2\x78\xf4\xa4\xed\x5c\x9c\x95\x18\x8e\xd5\x6b\xd2\xa2\x38\x90\xc5\xa5\xa6\x53\x4a\x8c\xa8\xc3\x69\xd1\x03\x0f\xc5\xc5\xea\xbc\xbc\x70\xac\x4e\x66\x45\x69\xf6\xca\xb0\x78\x7b\xcc\x80\xba\x0b\x91\x5b\xfd\x37\x95\x74\x87\x14\xee\x90\x1e\x4b\x05\x6c\xb3\xad\x87\x8c\xe8\x8b\xf3\x4b\x00\x77\xf0\x71\x86\xfd\xf1\x7f\xf1\x62\xd6\xef\xa0\x0b\x25\xa2\xe6\x4b\xfb\xb9\x36\x7f\xbd\xc6\x70\x9b\x5b\x36\xcb\x89\xa3\x96\xcd\x67\x26\x68\xbb\x31\x74\x03\x8a\x82\x1e\xae\x47\xbe\x38\xe9\xd2\xcc\xcd\x9b\x3b\xba\x3b\x52\xfd\x1f\x8b\x0c\xbc\x83\x8f\xe9\xf7\x05\x0b\x7f\xe5\x48\xfd\x7c\xce\x42\x3a\xdd\xb6\x96\x95\x5e\x6b\x52\xd0\x90\xa7\x1b\x08\x9c\xae\x62\xea\x53\xb3\x8d\xa8\x2d\xf9\x70\xd1\xdf\xba\x91\x0b\xfd\x74\xa7\x6f\x92\xd8\xe7\x7c\xd5\xbf\x68\x63\x52\x16\xe8\x8d\x65\x4f\xea\xc4\xf1\x8d\x22\x6e\x0e\x64\xf0\x91\xb9\x9e\x76\xfc\xb5\x67\x39\x9c\xd0\xfd\x9f\xe2\xe1\xfa\xea\xf2\x93\x10\x7f\xa8\xeb\xab\x4f\x3f\x5c\xa6\x9f\xdd\xc2\xd9\x53\xf5\xee\x56\xbc\xfb\x70\x6c\x24\xf6\x9f\xba\xd7\xbc\x35\x69\x9f\xdf\xea\x9d\x39\xec\xc0\x37\x7e\x7f\x92\xe0\xdd\xb7\xe7\xec\xb6\x03\xc5\xe2\xdf\x00\x00\x00\xff\xff\x00\x36\x77\xa1\x91\x0b\x00\x00")

func assetsPrometheusBaseConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusBaseConfigmapYaml,
		"assets/prometheus/base-configmap.yaml",
	)
}

func assetsPrometheusBaseConfigmapYaml() (*asset, error) {
	bytes, err := assetsPrometheusBaseConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/base-configmap.yaml", size: 2961, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x4d\x8f\xe3\x36\x0c\xbd\xe7\x57\x08\x7b\xae\x12\x7f\xc5\xb1\x05\x04\xe8\x74\x76\xda\x2d\xb0\xb3\xbb\xe8\x2c\xda\x63\x40\xcb\x74\x22\x44\x96\xbc\x12\x1d\x4c\x50\xf4\xbf\x17\x4e\x26\x19\x3b\xc9\x7c\xf6\x56\x9f\x6c\xf2\x89\xe2\x23\xf9\x2c\x41\xa3\xfe\x44\xe7\x95\x35\x82\x41\xd3\xf8\xc9\x26\x1c\xad\x95\x29\x05\xfb\x88\x8d\xb6\xdb\x1a\x0d\x8d\x6a\x24\x28\x81\x40\x8c\x18\xd3\x50\xa0\xf6\xdd\x1b\xeb\x16\x8c\xd7\x6d\x81\xce\x20\xa1\x1f\x2b\x3b\x91\xb6\x6e\xac\x41\x43\x82\x49\x6b\xc8\x59\xad\xd1\x3d\x81\x35\x50\xa3\x60\x8d\xb3\x35\xd2\x0a\x5b\xcf\x6d\x83\x0e\xc8\x3e\x85\xdf\x1c\xf2\xdc\x04\xe3\x38\x1b\x87\x23\xc6\x9e\x0b\xd1\xf9\x7c\x03\x12\x05\xb3\x0d\x1a\xbf\x52\x15\x71\x87\xe5\x0a\x88\xd7\xe0\xd6\x48\x8d\x06\x89\x23\xdf\xa0\xec\xe8\x38\x6c\xb4\x92\xe0\x05\xeb\x22\x7b\xd4\x28\xc9\xba\x3d\xd1\x1a\x48\xae\x3e\xf7\x98\xbf\x8d\xfb\x5b\xd9\x13\xd6\x8d\x06\xc2\x87\xcd\x7b\xd5\xef\x1e\x3d\xc8\xe3\xad\x99\xbc\xbd\x13\xaf\xee\x06\x63\x87\x5a\x76\x4f\xb7\x33\x28\x83\xee\x98\x2a\x67\xe0\x96\xbd\xc4\x39\xe3\xbc\x0b\xaa\x91\xb8\x47\xb7\x51\x12\xe7\xdd\x37\xf7\x5b\x4f\x58\x4f\x1e\x7c\x03\xbc\xb6\x4b\xb2\x9e\x4a\x74\x6e\x4e\xae\xc5\x81\x53\x5a\x53\xa9\x25\x77\xa8\x2d\x94\xe8\xb8\xaa\x61\x89\xf3\x1f\x2d\x6c\xbb\x8c\xfb\x53\xa0\x11\x3c\xf2\x12\x37\x13\x2b\x1b\xbe\x49\xc6\x01\x07\x47\x9d\xe1\x67\xbf\x82\x68\x9a\x8a\x22\x88\xf2\xb0\x48\x2a\x80\xa4\x0a\xf3\x38\x42\x88\x67\x79\x25\x31\x0f\xf3\xbc\x48\xf3\xac\x4a\x00\x8b\x20\x0b\x93\x3c\xce\xd2\x08\xaa\x34\x9d\x86\x39\x4e\xa7\xd3\x50\x4e\xe3\xb8\xcc\x07\x89\xf5\x4a\x7b\x92\xe3\x3b\xb3\x9b\xc9\x28\x4c\xb2\x44\xe6\x71\x15\x05\x71\x02\x65\x25\xb3\x2a\x0d\x21\x44\x0c\xf3\x59\x91\xcc\x82\xa2\x8c\xe2\x78\x26\xa3\xa4\x84\xb8\x8c\x53\xcc\xf3\x69\x9e\xc7\x51\x92\x67\x59\x31\xcb\x46\x83\xf4\x8e\x52\xf1\xf3\x67\xa5\xf2\x04\x25\x65\x3c\x81\x91\xf8\xae\x38\xa0\xd1\x51\x0d\x06\x96\x5d\xc3\xfe\x4b\xa4\x7d\x10\x2e\x5d\xe9\xe7\x15\x68\xff\xe8\xdd\xcd\x81\x60\xec\x7d\xb5\x8e\xb2\x34\x29\x24\x04\x79\x3a\xcb\xb0\xcc\x66\x61\x94\xa4\x10\x07\x69\x52\x84\x80\x69\x3e\x4b\xc3\x69\x90\xe5\x52\xc6\x50\xc8\x59\x16\xa5\x69\x99\x56\xb3\x28\xad\x30\x89\xc3\x10\xa6\xc5\x31\x8d\x97\x65\xd6\x58\x47\x03\x81\x1c\x45\xf4\xcd\x3a\x12\x2c\x0b\xb2\xe0\xe8\x3d\x04\x5c\x11\x35\x47\xa3\x43\x6f\x5b\x27\xb1\x17\xa5\x33\xfe\x68\xd1\xd3\xc0\xc6\x98\x6c\x5a\xc1\xa6\xf5\xc0\x56\x63\x6d\xdd\x56\xb0\x34\xb8\x55\x47\x87\x47\xd9\x3a\x45\xdb\x6b\x6b\x08\xef\x49\xb0\xbf\xff\x39\xfa\x08\x5d\xad\x0c\x90\xb2\xe6\x16\xbd\x87\x25\x7e\xb3\x5a\xc9\xad\x60\xbf\x82\xd6\x05\xc8\xf5\x77\xfb\xd9\x2e\xfd\x57\x73\xe3\x5c\x8f\xe9\xc6\xea\xb6\xc6\x5b\xdb\x9a\x21\xe1\xba\xb3\x7c\x03\x5a\x09\x36\x41\x92\x13\xd2\x7e\xd2\x38\xb5\x01\xc2\x33\xe2\x17\x2a\xc9\x49\xfb\x01\x71\x28\xbf\x1a\xbd\x15\xac\x3f\x10\x97\xfe\x43\xbd\xff\xca\xc0\xbe\xe3\x8e\x5c\x2b\x4f\x68\x38\x94\xa5\x43\xef\xe7\x22\x4b\x92\x78\x80\x23\xed\xb9\x54\xcd\x0a\x1d\xf7\xad\x22\xf4\xf3\xef\x9f\xef\x16\x37\xd7\x1f\x3f\xdd\x2c\xfe\xb8\xbb\x5a\xfc\xf5\xfb\xf7\x4f\x8b\xab\x9b\xbb\x45\x18\x65\x8b\xdf\xae\x6f\x17\x77\x9f\xae\xa2\x69\xfa\xd3\x23\xea\xe6\xfa\xe3\x0b\xb8\xb3\x38\xd7\xbf\x5c\xbf\x2a\xce\x45\xdc\x33\xd1\x06\xcc\xda\xc6\x93\x43\xa8\xe7\xdd\x9c\x79\x31\x99\x5c\x28\xfb\xf8\x39\x91\x8e\xfd\x46\x8a\x6e\x72\x27\xe7\x15\x43\x47\xbc\x52\x1a\xe7\xa7\xcd\xee\xde\xc7\xd2\xd1\xd9\x92\x07\x3f\x5f\xe3\xf6\x99\x95\x6b\xdc\x9e\xaa\xff\x20\x7e\x69\x1d\x5a\xbf\x3b\x5c\xb8\x2b\x40\x76\x7f\xb2\xfb\xad\xd8\x04\xe3\xe4\xe1\x14\x7b\x9c\xb0\x13\xd0\xeb\x75\xda\x1f\x8f\xbe\x4e\xfd\xbb\x85\x1a\x5e\x16\x6a\xf2\x7f\x16\xea\xa5\x7d\xf6\xe7\x67\x0d\x8d\x9f\x1c\x63\xed\xc6\x48\x02\x2f\x5a\x53\xea\xf3\xed\x07\x38\x7f\x11\x78\x79\x7f\x63\x4b\xbc\x1b\x5c\x04\xbb\xa7\x40\x82\x93\xcb\x90\xf5\x82\x69\x65\xda\xfb\xc7\xf9\xb1\x25\x72\x67\x35\x9e\x20\x6b\xf0\x84\x4e\xb0\x0f\x1f\x1e\xa0\x8d\x53\x76\xd7\x33\x0d\xde\x7f\xd9\xe5\xbb\xbf\xfe\x70\xa9\xdb\x0e\xcb\xa5\x53\xa4\x24\xe8\xd1\x4b\x4d\x7e\xb8\x43\x5d\x49\xd9\xd5\x6c\x1f\xeb\x5c\x8e\xfc\xe9\x03\x88\xac\xee\xbe\x95\x35\xbd\x3b\x1b\x56\x15\x4a\x12\xec\x8b\xbd\x93\x2b\x2c\xdb\x5e\xdd\xd6\xb8\x15\x2f\x30\x3d\x62\x0f\x5b\x09\x76\x73\xaf\x3c\x1d\x9a\xbf\x1f\xaf\xde\x76\xaf\x9b\x18\x8f\xd2\x21\xf5\x65\xb2\xb7\x7c\x79\xc5\xea\x9d\x5a\x2b\xb5\xbc\x85\x46\xbc\x7d\x56\x5e\x80\xfd\x1b\x00\x00\xff\xff\xaa\x85\xcc\xa9\x50\x0d\x00\x00")

func assetsPrometheusDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusDeploymentYaml,
		"assets/prometheus/deployment.yaml",
	)
}

func assetsPrometheusDeploymentYaml() (*asset, error) {
	bytes, err := assetsPrometheusDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/deployment.yaml", size: 3408, mode: os.FileMode(420), modTime: time.Unix(1594210914, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusKubeletServingCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\xae\xc3\x20\x0c\x05\xd0\x9d\xaf\xb0\xb2\xf3\xa4\xb7\x7a\xed\xdc\xb5\xbb\x03\x37\x89\x15\x30\x08\x9c\x7c\x7f\x97\xb6\xfb\xd1\x91\xae\x2f\x8c\xa9\xcd\x98\xee\xff\x90\xc5\x85\x03\x51\x92\xb8\x5e\x96\x0b\xfe\xd2\x70\xa6\x65\x09\xa7\x5a\x66\x7a\x34\xdb\x74\x7f\x4a\x0f\x15\x2e\x5f\x6d\x52\xc1\x74\x5e\x2b\x0a\x3c\x4e\x8c\x5b\x6d\x8f\xbf\xe3\x23\x66\x97\x04\xa6\xd6\x61\xf3\xd0\xcd\xe3\x40\x3e\xc4\x63\x95\x71\xc2\x7b\x91\x84\xf0\x0e\x00\x00\xff\xff\x46\x71\x92\xbe\x8f\x00\x00\x00")

func assetsPrometheusKubeletServingCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeletServingCaBundleYaml,
		"assets/prometheus/kubelet-serving-ca-bundle.yaml",
	)
}

func assetsPrometheusKubeletServingCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeletServingCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kubelet-serving-ca-bundle.yaml", size: 143, mode: os.FileMode(420), modTime: time.Unix(1594213807, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusAdditionalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xdb\x46\x10\xbd\xeb\x57\x0c\x12\x23\xb6\x61\x8b\x8c\xdb\x1c\x02\xb6\x68\x2e\xbd\x14\x68\xd1\x02\xcd\x2d\x75\x37\xa3\xdd\xa1\xb8\x31\xb9\xcb\xce\x0c\xe5\x18\x6d\xff\x7b\xb1\x4b\xca\xa2\x6b\x19\x96\x83\xb6\x48\x4f\x82\x76\x77\xde\xbc\x37\x1f\x4f\x7a\xfe\x1c\x96\x4b\xf8\x01\x6f\x20\x10\x39\xd0\x08\x2b\x02\xe7\xeb\x1a\xea\xc8\x60\xd9\x96\xb1\xa7\x20\x8d\xaf\x75\xb1\x84\x0f\x71\x65\x02\x76\x54\xc1\xf1\xd5\xb0\xa2\xa5\x28\x2a\x2d\x3b\x52\xf6\x56\x8e\x17\x00\xe9\xc0\x5b\x63\x63\xa8\xfd\x5a\xaa\x05\x00\xc0\x12\x14\x79\x4d\x2a\x15\xbc\xdb\x13\x56\x8c\x47\x37\xa2\xd4\x15\xb2\xb1\x85\x6d\x07\x51\xe2\xa2\x8d\x16\xdb\xea\xf5\xcb\xd7\x2f\x8f\x2f\x17\x99\xe7\x7d\x06\x1c\x48\x49\x96\x21\x3a\x92\xa5\x45\xb7\xf1\x12\x39\x11\x79\x0e\xdf\x52\x8d\x43\xab\x49\x92\x58\xc6\xde\x87\x35\xc4\x0d\x31\x34\xaa\xbd\x14\xf0\x5d\x0d\x4c\xbf\x0d\x9e\xc9\x9d\xc3\x87\x41\x14\x9c\x17\x5c\xb5\x04\xda\x78\x81\xa4\xbe\xc1\xb0\x26\xd0\x98\xf1\xde\xa7\xb8\xf7\x45\x12\x69\x1b\x4a\x0c\x32\x50\xbe\x7b\x9b\x22\xde\x7e\xff\x33\xbc\x80\x15\x21\x13\x83\xc6\x2b\x0a\x50\xfb\x96\x60\x2c\x06\x78\x81\x41\xc6\x12\xdb\x18\x02\xd9\x4c\x4d\x1b\x02\xb4\x3a\x60\x3b\xb2\xa4\x8c\x47\xc1\xf5\xd1\x07\x95\xb1\x0b\x63\x41\xc0\xc6\xae\x8f\x81\x82\x4a\x31\x66\xf4\x02\x42\x3d\x32\x6a\x62\x99\xf8\xdb\xa4\xf0\x06\x70\xd0\x26\x03\x8d\xb9\x07\x46\xf5\x31\xc0\x8a\x2c\x0e\x42\xb3\x87\x2f\x76\xb5\x41\x26\xd0\xeb\xb8\x43\xb4\x31\x58\xe2\x20\xe0\x43\xc6\xfa\x89\x63\x47\xda\xd0\x90\xd3\xd3\xdf\xd2\xcd\x64\xe2\xa0\xb1\x4b\x73\x00\xbe\x9e\x45\x01\x0f\x19\x4c\xbc\x1b\x55\x26\xed\xdb\x66\xc3\x8f\xda\x10\x5f\x7b\xa1\x73\xe8\x22\xdf\x56\x2d\xf6\x89\xb9\x40\x83\x1b\x9a\xa6\xb3\xe7\xb8\xf1\x8e\x1c\x5c\x7b\x6d\x7c\x48\x30\x19\xee\xeb\xdd\x40\x18\x71\xd3\x0c\x7e\x93\x1a\xa6\xad\x4c\x5f\xc7\x89\xb4\x68\x52\x67\x2a\x28\x37\xc8\x25\x0f\xa1\x14\xb2\x4c\x2a\xe5\x0e\xa2\xf0\xb1\x14\xe2\x8d\xb7\x84\xd6\xc6\x21\x68\x69\xb1\xb0\xac\x0b\x98\x7a\x6c\x72\x8f\x3f\x09\x29\x47\x2e\x00\xf6\x31\xce\x5b\xb3\x04\x8e\x09\x36\x0d\xf6\x02\x80\xa9\xc5\x15\xb5\x77\x5f\xa0\x4d\xa5\xa9\x20\x5f\x75\xd8\x67\x69\x4c\x6b\xfa\x58\x81\x31\x1d\x29\x9a\x19\x7e\x42\x32\x23\xca\x49\x71\x76\xba\xd8\xed\xe5\x78\x9a\x62\xd0\x39\x26\x11\x63\x26\xa8\xbe\x45\x4b\x1d\x05\xad\x66\x4c\x0b\x37\x2e\x56\xda\xd5\xea\xd5\xab\x2f\x33\x92\xc4\x81\xed\x84\x9f\xf6\xfc\x81\xfc\x69\x73\x2f\xe7\x3c\x27\x2a\x70\x8f\xca\x64\x0e\xa6\x47\x6d\xf6\xf1\x29\xb1\xf7\xe5\xe6\xa2\xcc\x9b\x5f\x1e\xfd\x7e\xf1\x67\xd9\x73\xfc\x78\x53\x4e\x81\xe5\xd6\x0c\xee\x78\xc6\x33\x6e\x3a\xb3\xa6\x40\xec\xad\x19\xf7\xcd\xf4\xd1\x3d\x3b\xa4\x15\x7d\x74\x0f\x75\xe2\x71\xf5\x7d\x74\x53\xf1\x3b\xe4\x2b\xd2\xac\xc4\x30\xb9\x06\xd5\xd8\xd8\xa5\x00\x62\x72\x63\x71\xb6\x9d\xbd\x22\xba\xd3\x55\xe5\x81\xfe\xc1\x84\xa9\x08\xa9\xbe\x77\x93\x4e\x65\x3e\xbc\x2b\xf3\x46\xee\xa3\x76\x3b\x55\xe7\x7b\xc6\xf2\x60\x9e\x91\xf5\x61\x9e\x5b\x12\xef\x7e\xad\x2e\xcf\x4e\x4f\xde\x54\xd5\x2f\xee\xec\xf4\xcd\x57\x27\xe9\xe3\xfe\xf0\x1c\x5d\x54\x47\x5f\xec\x15\x38\xdf\x80\xa7\x6e\xd8\xa3\x52\x1e\x18\xf6\xe9\xc5\x3c\xe8\xe8\xe2\xd0\xad\xc2\x8e\xa4\x47\x4b\x87\xf6\x70\x5f\xec\x13\x46\x6a\xb7\xc0\x4f\x4a\xb5\x0d\xcd\x3e\xbd\x2f\x57\xba\x34\xe6\x32\xdf\xdf\x96\xf8\xf8\xc4\xc6\xa0\xe8\x43\xf2\x5a\x94\x2b\x31\xf9\x8f\xc3\x1f\xbb\xd3\x8e\xba\xc8\x37\xa6\x46\xdf\x0e\x4c\x62\x34\x2a\xb6\xa7\xe3\xef\xff\xdd\x2d\x7a\xcc\x05\x26\x83\xfe\xf7\x9d\x60\x4a\xf4\xdf\xba\xc1\xa1\x49\x3f\x07\x47\x78\x12\xd7\xcf\xdf\x15\x0e\x92\xf3\x3f\x77\x86\xad\xc6\x4f\x74\x87\x79\xf8\xe2\xaf\x00\x00\x00\xff\xff\x6d\x42\x9b\xe2\x91\x0c\x00\x00")

func assetsPrometheusPrometheusAdditionalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusAdditionalYaml,
		"assets/prometheus/prometheus-additional.yaml",
	)
}

func assetsPrometheusPrometheusAdditionalYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusAdditionalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-additional.yaml", size: 3217, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusRulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x5f\xb6\x8b\xa4\x62\xeb\x53\x20\x84\xd8\x56\x4e\xf2\x95\xba\xd8\x1e\x33\x63\xa3\x72\x7b\xd4\x10\x10\x9b\xee\x46\xa3\xf7\x9e\x7e\xa8\xf1\x8d\x6a\x51\x8a\x47\x96\x12\x9b\x68\x2c\xeb\x38\x8b\x52\x6c\x9c\x25\x9f\x3e\x9f\xdc\x7b\x2c\x8b\xc7\xb3\x4a\x66\xbb\xb0\xdb\x4b\x4f\x74\x99\x2d\x2c\xa1\x05\xef\x80\x59\x19\x5a\x94\xf2\x1a\x33\xad\x85\x5c\x3d\x4a\x4f\xc9\x01\x29\x4c\x4c\x76\x67\x80\xfa\x17\xf0\xe0\x2d\xe4\x9a\xb8\xfd\x55\x12\x3d\x42\xa2\xb6\x41\x7b\xa2\x39\xa0\x84\x4c\xff\xcf\x18\x76\x61\x07\xac\x72\xbe\x47\x57\x95\x5e\xb7\xfc\xb0\x2b\xe3\x69\x27\xc7\xdf\x14\xb0\x5d\x3f\x1b\x06\x28\x67\xd1\xc5\xe3\x2a\x93\xbf\xb4\x56\xcf\xb1\x54\x95\x55\x69\x76\x56\x7e\x74\x5a\x33\x6f\x3d\x6f\x38\xc0\x5b\x55\x0f\xeb\xf9\xf0\x08\x3e\x62\xfa\xc2\xe1\x2a\xd3\xd1\x7d\x07\x00\x00\xff\xff\x78\x3d\x62\x0e\x4e\x01\x00\x00")

func assetsPrometheusPrometheusRulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusRulesYaml,
		"assets/prometheus/prometheus-rules.yaml",
	)
}

func assetsPrometheusPrometheusRulesYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusRulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-rules.yaml", size: 334, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\xcb\x6e\x1b\x31\x0c\xbc\xfb\x2b\x74\xf3\x69\x1d\xa7\x28\xd0\x62\x6f\x41\x1a\x04\x41\x1f\x28\x90\xa0\x77\x45\x3b\xde\x15\x2c\x89\x2a\x49\xb9\xd9\xbf\x2f\x64\xaf\x1f\xeb\x06\xd5\x4d\x9c\xe1\x90\x1c\x51\x36\xfb\x5f\x60\xf1\x94\x5a\x13\x29\x79\x25\xf6\xa9\x5f\x39\x62\x90\xac\x1c\xc5\x9b\xdd\xed\x62\xeb\x53\xd7\x9a\x9f\x4c\x11\x3a\xa0\xc8\x22\x42\x6d\x67\xd5\xb6\x0b\x63\x92\x8d\x68\x4d\x3e\x83\xc6\x04\xfb\x8a\x20\x15\x34\x17\xc0\x8c\x24\x19\xae\x12\xec\x66\xe3\x93\xd7\x71\x22\x53\x77\x97\xd4\xdf\xcd\x82\x55\x03\x1b\x30\xa3\xfb\x52\x6a\x77\xcf\x6e\x40\x57\x82\x4f\xfd\x53\x9f\xe8\x14\x7e\x78\x83\x2b\x5a\x27\x99\xd2\x8c\x69\xf6\x8a\x93\xda\x0b\x38\x9e\xa1\x7a\xf6\x7d\x3e\x23\xc0\x29\xf1\x1c\x32\x26\x5a\x75\xc3\xc3\x5b\x66\x48\xb5\x47\xae\xf1\xaa\xbe\xc5\x78\x35\xfa\xf5\xa1\x0c\xb6\x55\xdd\x3c\xa5\x77\xe0\x9d\x0d\x05\xef\x48\x4f\xf2\x9f\xe7\x92\xd5\x6a\xc9\xd6\xfd\x9b\xd1\xd4\x42\x49\x06\xbf\xd1\x86\xd1\x0d\x56\x9b\xf3\x6b\xce\xb8\x4a\x99\x02\xf5\xe3\xd7\xda\xfa\xb6\xbc\x82\x13\x14\xb2\xf2\x74\x33\x90\x68\x2d\x71\xc1\xff\x03\xdf\x0f\xda\x9a\xdb\xf5\x7a\x61\x0c\x23\x07\xef\xac\xb4\xe6\xc3\xc2\x18\x01\xef\xbc\xc3\x9d\x73\x54\x92\xfe\xd8\xaf\xc1\xb1\xb6\xe5\x2d\x34\x07\xeb\xd0\xcc\xec\xc9\xec\x89\xbd\x8e\xf7\xc1\x8a\x1c\x52\x64\x14\x45\x6c\x5c\x28\xa2\xe0\xc6\xb1\x57\xef\x6c\xa8\x9b\x45\x1d\xe6\xaf\x33\xef\x97\xa4\x35\xc1\xa7\xf2\xb6\x6f\x4d\xa8\xf0\xc9\x19\xc6\xef\x02\xd1\x93\x4f\x2e\x97\xd6\x7c\x5a\xc7\xe9\x1a\x11\x89\xc7\xd6\xdc\x3e\xfa\xf3\x20\xdf\x0f\x86\xcd\x2b\xee\xb7\xe0\xdb\xc5\x3e\xd7\xd0\x69\xb8\xd5\x61\xde\xfd\x3f\x89\x50\x30\xba\xd6\x2c\x95\x0b\x96\xff\x27\x77\xc8\x81\xc6\x19\xdb\x51\xda\xf8\x3e\xda\x3c\x15\x6a\x0e\x7d\xa5\xbe\x71\x60\x95\xc6\xd9\xe6\xb5\xa4\x2e\x60\x42\xab\x17\x01\xda\x9c\x58\x17\xb8\x28\xb1\xed\x71\x10\xda\x51\x28\x11\xf7\xc1\xfa\xf8\x82\x98\x83\x55\x1c\x47\x39\xfe\xc2\xe9\x76\xc8\xba\x78\x9b\xa5\xa8\x4d\x9d\xe5\x6e\x79\x22\x5d\x19\x7d\x0c\xce\xed\x9e\xe9\xb5\xe6\xe3\xfa\xd1\x2f\xfe\x06\x00\x00\xff\xff\x1c\x40\x12\x58\x6a\x04\x00\x00")

func assetsPrometheusPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusYaml,
		"assets/prometheus/prometheus.yaml",
	)
}

func assetsPrometheusPrometheusYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus.yaml", size: 1130, mode: os.FileMode(420), modTime: time.Unix(1594231513, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusServingCertsCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xb1\x0e\xc2\x30\x0c\x05\xf7\x7c\x85\x95\x3d\x41\xac\x59\x99\x59\xd9\x8d\xeb\xb6\x86\xd6\x8e\x12\xb7\xdf\x8f\x50\xa1\xe3\xd3\xbb\xbb\x80\x55\x1e\xdc\xba\x98\x16\xd8\xaf\x61\x40\xc7\x12\x00\x3a\xb7\x5d\x88\x13\x61\xa6\xe6\x05\x62\x0c\x6f\xd1\xa1\xc0\xcd\x74\x94\xe9\x8e\x35\xac\xec\xf8\xc7\x51\xd5\x1c\x5d\x4c\xfb\x77\x9e\x7e\xc6\xa5\xce\x98\xad\xb2\xf6\x59\x46\xcf\x62\x17\xd1\x17\x93\x27\xc2\xe7\xa6\xc3\xc2\x05\xa2\xb7\x8d\x63\x00\x50\x5c\xb9\x1c\xaa\x4e\x89\xb8\x79\x4f\x84\xe9\xe0\x7e\x7f\xaf\x48\x5c\xe0\x2c\xa6\xd5\x54\xdc\x9a\xe8\x14\x3e\x01\x00\x00\xff\xff\x7a\x8b\xb6\x04\xcd\x00\x00\x00")

func assetsPrometheusServingCertsCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusServingCertsCaBundleYaml,
		"assets/prometheus/serving-certs-ca-bundle.yaml",
	)
}

func assetsPrometheusServingCertsCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusServingCertsCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/serving-certs-ca-bundle.yaml", size: 205, mode: os.FileMode(420), modTime: time.Unix(1594216039, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x4d\x8f\xe3\x36\x0c\xbd\xe7\x57\x08\x7b\xae\x12\x7f\xc5\xb1\x05\x04\xe8\x74\x76\xda\x2d\xb0\xb3\xbb\xe8\x2c\xda\x63\x40\xcb\x74\x22\x44\x96\xbc\x12\x1d\x4c\x50\xf4\xbf\x17\x4e\x26\x19\x3b\xc9\x7c\xf6\x56\x9f\x6c\xf2\x89\xe2\x23\xf9\x2c\x41\xa3\xfe\x44\xe7\x95\x35\x82\x41\xd3\xf8\xc9\x26\x1c\xad\x95\x29\x05\xfb\x88\x8d\xb6\xdb\x1a\x0d\x8d\x6a\x24\x28\x81\x40\x8c\x18\xd3\x50\xa0\xf6\xdd\x1b\xeb\x16\x8c\xd7\x6d\x81\xce\x20\xa1\x1f\x2b\x3b\x91\xb6\x6e\xac\x41\x43\x82\x49\x6b\xc8\x59\xad\xd1\x3d\x81\x35\x50\xa3\x60\x8d\xb3\x35\xd2\x0a\x5b\xcf\x6d\x83\x0e\xc8\x3e\x85\xdf\x1c\xf2\xdc\x04\xe3\x38\x1b\x87\x23\xc6\x9e\x0b\xd1\xf9\x7c\x03\x12\x05\xb3\x0d\x1a\xbf\x52\x15\x71\x87\xe5\x0a\x88\xd7\xe0\xd6\x48\x8d\x06\x89\x23\xdf\xa0\xec\xe8\x38\x6c\xb4\x92\xe0\x05\xeb\x22\x7b\xd4\x28\xc9\xba\x3d\xd1\x1a\x48\xae\x3e\xf7\x98\xbf\x8d\xfb\x5b\xd9\x13\xd6\x8d\x06\xc2\x87\xcd\x7b\xd5\xef\x1e\x3d\xc8\xe3\xad\x99\xbc\xbd\x13\xaf\xee\x06\x63\x87\x5a\x76\x4f\xb7\x33\x28\x83\xee\x98\x2a\x67\xe0\x96\xbd\xc4\x39\xe3\xbc\x0b\xaa\x91\xb8\x47\xb7\x51\x12\xe7\xdd\x37\xf7\x5b\x4f\x58\x4f\x1e\x7c\x03\xbc\xb6\x4b\xb2\x9e\x4a\x74\x6e\x4e\xae\xc5\x81\x53\x5a\x53\xa9\x25\x77\xa8\x2d\x94\xe8\xb8\xaa\x61\x89\xf3\x1f\x2d\x6c\xbb\x8c\xfb\x53\xa0\x11\x3c\xf2\x12\x37\x13\x2b\x1b\xbe\x49\xc6\x01\x07\x47\x9d\xe1\x67\xbf\x82\x68\x9a\x8a\x22\x88\xf2\xb0\x48\x2a\x80\xa4\x0a\xf3\x38\x42\x88\x67\x79\x25\x31\x0f\xf3\xbc\x48\xf3\xac\x4a\x00\x8b\x20\x0b\x93\x3c\xce\xd2\x08\xaa\x34\x9d\x86\x39\x4e\xa7\xd3\x50\x4e\xe3\xb8\xcc\x07\x89\xf5\x4a\x7b\x92\xe3\x3b\xb3\x9b\xc9\x28\x4c\xb2\x44\xe6\x71\x15\x05\x71\x02\x65\x25\xb3\x2a\x0d\x21\x44\x0c\xf3\x59\x91\xcc\x82\xa2\x8c\xe2\x78\x26\xa3\xa4\x84\xb8\x8c\x53\xcc\xf3\x69\x9e\xc7\x51\x92\x67\x59\x31\xcb\x46\x83\xf4\x8e\x52\xf1\xf3\x67\xa5\xf2\x04\x25\x65\x3c\x81\x91\xf8\xae\x38\xa0\xd1\x51\x0d\x06\x96\x5d\xc3\xfe\x4b\xa4\x7d\x10\x2e\x5d\xe9\xe7\x15\x68\xff\xe8\xdd\xcd\x81\x60\xec\x7d\xb5\x8e\xb2\x34\x29\x24\x04\x79\x3a\xcb\xb0\xcc\x66\x61\x94\xa4\x10\x07\x69\x52\x84\x80\x69\x3e\x4b\xc3\x69\x90\xe5\x52\xc6\x50\xc8\x59\x16\xa5\x69\x99\x56\xb3\x28\xad\x30\x89\xc3\x10\xa6\xc5\x31\x8d\x97\x65\xd6\x58\x47\x03\x81\x1c\x45\xf4\xcd\x3a\x12\x2c\x0b\xb2\xe0\xe8\x3d\x04\x5c\x11\x35\x47\xa3\x43\x6f\x5b\x27\xb1\x17\xa5\x33\xfe\x68\xd1\xd3\xc0\xc6\x98\x6c\x5a\xc1\xa6\xf5\xc0\x56\x63\x6d\xdd\x56\xb0\x34\xb8\x55\x47\x87\x47\xd9\x3a\x45\xdb\x6b\x6b\x08\xef\x49\xb0\xbf\xff\x39\xfa\x08\x5d\xad\x0c\x90\xb2\xe6\x16\xbd\x87\x25\x7e\xb3\x5a\xc9\xad\x60\xbf\x82\xd6\x05\xc8\xf5\x77\xfb\xd9\x2e\xfd\x57\x73\xe3\x5c\x8f\xe9\xc6\xea\xb6\xc6\x5b\xdb\x9a\x21\xe1\xba\xb3\x7c\x03\x5a\x09\x36\x41\x92\x13\xd2\x7e\xd2\x38\xb5\x01\xc2\x33\xe2\x17\x2a\xc9\x49\xfb\x01\x71\x28\xbf\x1a\xbd\x15\xac\x3f\x10\x97\xfe\x43\xbd\xff\xca\xc0\xbe\xe3\x8e\x5c\x2b\x4f\x68\x38\x94\xa5\x43\xef\xe7\x22\x4b\x92\x78\x80\x23\xed\xb9\x54\xcd\x0a\x1d\xf7\xad\x22\xf4\xf3\xef\x9f\xef\x16\x37\xd7\x1f\x3f\xdd\x2c\xfe\xb8\xbb\x5a\xfc\xf5\xfb\xf7\x4f\x8b\xab\x9b\xbb\x45\x18\x65\x8b\xdf\xae\x6f\x17\x77\x9f\xae\xa2\x69\xfa\xd3\x23\xea\xe6\xfa\xe3\x0b\xb8\xb3\x38\xd7\xbf\x5c\xbf\x2a\xce\x45\xdc\x33\xd1\x06\xcc\xda\xc6\x93\x43\xa8\xe7\xdd\x9c\x79\x31\x99\x5c\x28\xfb\xf8\x39\x91\x8e\xfd\x46\x8a\x6e\x72\x27\xe7\x15\x43\x47\xbc\x52\x1a\xe7\xa7\xcd\xee\xde\xc7\xd2\xd1\xd9\x92\x07\x3f\x5f\xe3\xf6\x99\x95\x6b\xdc\x9e\xaa\xff\x20\x7e\x69\x1d\x5a\xbf\x3b\x5c\xb8\x2b\x40\x76\x7f\xb2\xfb\xad\xd8\x04\xe3\xe4\xe1\x14\x7b\x9c\xb0\x13\xd0\xeb\x75\xda\x1f\x8f\xbe\x4e\xfd\xbb\x85\x1a\x5e\x16\x6a\xf2\x7f\x16\xea\xa5\x7d\xf6\xe7\x67\x0d\x8d\x9f\x1c\x63\xed\xc6\x48\x02\x2f\x5a\x53\xea\xf3\xed\x07\x38\x7f\x11\x78\x79\x7f\x63\x4b\xbc\x1b\x5c\x04\xbb\xa7\x40\x82\x93\xcb\x90\xf5\x82\x69\x65\xda\xfb\xc7\xf9\xb1\x25\x72\x67\x35\x9e\x20\x6b\xf0\x84\x4e\xb0\x0f\x1f\x1e\xa0\x8d\x53\x76\xd7\x33\x0d\xde\x7f\xd9\xe5\xbb\xbf\xfe\x70\xa9\xdb\x0e\xcb\xa5\x53\xa4\x24\xe8\xd1\x4b\x4d\x7e\xb8\x43\x5d\x49\xd9\xd5\x6c\x1f\xeb\x5c\x8e\xfc\xe9\x03\x88\xac\xee\xbe\x95\x35\xbd\x3b\x1b\x56\x15\x4a\x12\xec\x8b\xbd\x93\x2b\x2c\xdb\x5e\xdd\xd6\xb8\x15\x2f\x30\x3d\x62\x0f\x5b\x09\x76\x73\xaf\x3c\x1d\x9a\xbf\x1f\xaf\xde\x76\xaf\x9b\x18\x8f\xd2\x21\xf5\x65\xb2\xb7\x7c\x79\xc5\xea\x9d\x5a\x2b\xb5\xbc\x85\x46\xbc\x7d\x56\x5e\x80\xfd\x1b\x00\x00\xff\xff\xaa\x85\xcc\xa9\x50\x0d\x00\x00")

func assetsPrometheusOperatorDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorDeploymentYaml,
		"assets/prometheus-operator/deployment.yaml",
	)
}

func assetsPrometheusOperatorDeploymentYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/deployment.yaml", size: 3408, mode: os.FileMode(420), modTime: time.Unix(1594157558, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorOperatorCertsCaBundleCopy1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x4a\xbf\x41\xb4\xdb\x52\xd3\xd2\x0f\x5e\x1f\x31\x97\xd8\x2b\xaf\x2f\xcf\x8f\x50\xe0\xca\x91\xbe\xf9\x31\xf4\x43\x62\xaa\x5b\xa3\xf3\xb5\x74\x24\x5a\x21\x9a\x12\xa7\xb2\x54\xc6\xca\x91\x8d\x96\xa5\xdc\xd5\x7a\xa3\x37\xb7\x9b\x7e\xbd\x63\x94\x43\x12\xff\x1c\x66\x9e\x48\x75\x9b\xbf\xf3\xf9\x5f\xb1\x8f\x0d\xab\x0f\xb1\xb9\xe9\x2d\x57\xf5\x17\xb5\x6f\xe1\xac\x8c\xcf\x87\xf5\x5d\x1a\x2d\x19\x0f\x59\x0a\x91\xe1\x90\x46\x3e\x24\x90\x1e\x95\x25\x72\x56\x46\xbd\xe0\x1f\x98\x03\x7c\xa9\x2b\x59\x43\xfa\x86\xac\x07\xe2\x2e\x39\x76\xb0\x94\x9f\x00\x00\x00\xff\xff\x20\xa9\xa1\x03\xd5\x00\x00\x00")

func assetsPrometheusOperatorOperatorCertsCaBundleCopy1YamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorOperatorCertsCaBundleCopy1Yaml,
		"assets/prometheus-operator/operator-certs-ca-bundle (Copy 1).yaml",
	)
}

func assetsPrometheusOperatorOperatorCertsCaBundleCopy1Yaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorOperatorCertsCaBundleCopy1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/operator-certs-ca-bundle (Copy 1).yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1594212135, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorOperatorCertsCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x4a\xbf\x41\xb4\xdb\x52\xd3\xd2\x0f\x5e\x1f\x31\x97\xd8\x2b\xaf\x2f\xcf\x8f\x50\xe0\xca\x91\xbe\xf9\x31\xf4\x43\x62\xaa\x5b\xa3\xf3\xb5\x74\x24\x5a\x21\x9a\x12\xa7\xb2\x54\xc6\xca\x91\x8d\x96\xa5\xdc\xd5\x7a\xa3\x37\xb7\x9b\x7e\xbd\x63\x94\x43\x12\xff\x1c\x66\x9e\x48\x75\x9b\xbf\xf3\xf9\x5f\xb1\x8f\x0d\xab\x0f\xb1\xb9\xe9\x2d\x57\xf5\x17\xb5\x6f\xe1\xac\x8c\xcf\x87\xf5\x5d\x1a\x2d\x19\x0f\x59\x0a\x91\xe1\x90\x46\x3e\x24\x90\x1e\x95\x25\x72\x56\x46\xbd\xe0\x1f\x98\x03\x7c\xa9\x2b\x59\x43\xfa\x86\xac\x07\xe2\x2e\x39\x76\xb0\x94\x9f\x00\x00\x00\xff\xff\x20\xa9\xa1\x03\xd5\x00\x00\x00")

func assetsPrometheusOperatorOperatorCertsCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorOperatorCertsCaBundleYaml,
		"assets/prometheus-operator/operator-certs-ca-bundle.yaml",
	)
}

func assetsPrometheusOperatorOperatorCertsCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorOperatorCertsCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/operator-certs-ca-bundle.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1593696936, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x4d\x8e\x22\x31\x0c\x85\xf7\x39\x85\x2f\x90\x1a\x10\x2c\x50\x6e\x30\x9b\x11\xd2\x48\xb3\x77\x85\x37\x54\x44\x2a\x8e\x6c\x43\x5f\xbf\x55\xd5\x80\x5a\x6a\xd1\xbb\x5e\xda\xef\xc7\xf9\xc2\xbd\xfc\x83\x5a\x91\x96\xe8\xb6\x0d\x97\xd2\x4e\x89\xfe\x42\x6f\x25\x23\xcc\x70\x3e\xb1\x73\x0a\x44\xdc\x9a\x38\x7b\x91\x66\xcb\x48\x64\x1f\xa6\x61\x84\xf3\x20\x1d\xcd\xa6\xf2\xdf\x87\x22\xbf\x56\xa5\x9d\x63\x86\x7a\x34\x64\x85\xc7\xc6\x33\x12\x75\x95\x19\x3e\xe1\x6a\x51\x3a\x94\x5d\x34\x7a\xb5\x40\x54\x79\x44\xbd\x37\x73\xef\xc3\xe5\x3a\x42\x1b\x1c\xb6\x34\x66\x99\xbb\x34\x34\x4f\x94\xa5\xb9\x4a\xad\xd0\x17\xde\x97\x97\x5e\xf8\x6f\x4f\xfc\xcd\xb0\x3b\x0c\xdb\x40\xf4\x5d\xc5\xa2\x59\xe7\x8c\x44\x4f\xe8\xa8\x38\x4d\xec\x71\x66\xbd\xc0\x7b\xe5\x8c\x60\x1d\x79\xc1\xc9\xf5\x6a\x0e\xfd\x7d\x4c\xf4\x47\x1a\x02\x51\x17\xf5\x95\x34\xde\x0f\x4d\xee\xdd\xd6\xd7\x2d\x52\xa2\xc3\x7e\xbf\x5b\x47\x67\x3d\xc3\x8f\xeb\xf2\x61\x7a\x84\xde\x30\x7e\x8e\x6c\x0e\x9b\x2f\x91\xfb\xd2\x50\x91\x5d\xf4\x67\x3f\xf7\x3d\x00\x00\xff\xff\x2a\x9f\xe2\x9c\x49\x02\x00\x00")

func assetsPrometheusOperatorServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorServiceYaml,
		"assets/prometheus-operator/service.yaml",
	)
}

func assetsPrometheusOperatorServiceYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/service.yaml", size: 585, mode: os.FileMode(420), modTime: time.Unix(1593698038, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRazeeJobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x50\xb1\x6e\xeb\x30\x0c\xdc\xfd\x15\x42\xe6\xe7\x04\xc6\x43\x17\x6d\x5d\x8b\x22\xe8\xd4\x9d\xa6\x2f\x35\x6b\x49\x54\x25\xda\x80\xfb\xf5\x85\x13\xa7\xc8\x52\x4e\x87\xe3\xdd\xf1\x40\xca\xf2\x8e\x52\x45\x93\x77\x3d\x19\x8f\xa7\xa5\x6b\x26\x49\x83\x77\x2f\xda\x37\x11\x46\x03\x19\xf9\xc6\xb9\x44\x11\xde\x15\xfa\x06\x06\xe4\xa0\x6b\xfb\xa9\xfd\xce\xd7\x4c\xbc\x2d\xc7\xd8\x46\x2a\x13\x2c\x07\x62\x34\x35\x83\x37\xab\x21\xe6\x40\x86\x0d\x3b\x77\x67\xaf\x18\x65\x11\xc6\x33\xb3\xce\xc9\xce\xb7\x13\x18\x46\xb2\xc7\xa0\x56\x33\x0a\x99\x96\xdd\xc5\x9a\x8c\x24\xa1\xd4\x7b\x4e\xfb\x67\xbd\xdb\x48\xa4\x0f\x78\x77\xf8\x9a\x69\x3d\x8a\x9e\xae\xba\xd3\xa3\x7a\x40\x30\xf2\xdd\xb1\x3b\xfe\x3f\xfc\xda\x58\x63\xa4\xed\x19\x92\xaa\x51\x08\xff\xe6\xb4\xa3\x5d\x52\x50\x8d\x8a\xbd\x69\x10\x5e\xbd\x3b\x63\xc1\x56\xb2\x27\x9e\xf4\x72\x79\x95\x28\xe6\xdd\x53\xf3\x13\x00\x00\xff\xff\x91\xe6\x95\xeb\x67\x01\x00\x00")

func assetsRazeeRazeeJobYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRazeeJobYaml,
		"assets/razee/razee-job.yaml",
	)
}

func assetsRazeeRazeeJobYaml() (*asset, error) {
	bytes, err := assetsRazeeRazeeJobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/razee-job.yaml", size: 359, mode: os.FileMode(420), modTime: time.Unix(1591133712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRazeeNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x28\x4a\xac\x4a\x4d\x05\x04\x00\x00\xff\xff\x0e\x49\xcb\x5c\x36\x00\x00\x00")

func assetsRazeeRazeeNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRazeeNamespaceYaml,
		"assets/razee/razee-namespace.yaml",
	)
}

func assetsRazeeRazeeNamespaceYaml() (*asset, error) {
	bytes, err := assetsRazeeRazeeNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/razee-namespace.yaml", size: 54, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRemoteResourceS3Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x93\xe2\x46\x0c\xbd\xf3\x2b\x74\xe3\x64\x8c\x61\x80\xd9\xbe\x4d\x0d\x9b\x4a\x2a\x61\x97\x02\x36\x39\x4e\x89\x6e\x81\xbb\xb6\xbf\xb6\xbb\xcd\xc4\x49\xe5\xbf\xa7\x1a\xc3\xac\xed\x99\xd9\x45\x27\x97\xf4\xf4\x24\x3d\xa9\x8d\x4e\xfe\x49\x3e\x48\x6b\x18\xa0\x73\x21\x3f\x15\x83\xaf\xd2\x08\x06\x4b\x72\xca\xd6\x9a\x4c\x1c\x68\x8a\x28\x30\x22\x1b\x00\x18\xd4\xc4\xc0\x93\xb6\x91\x3c\x05\x5b\x79\x4e\x61\x9a\x71\x6b\xa2\xb7\x4a\x91\x1f\x00\xa0\x31\x36\x62\x94\xd6\x84\x94\x02\xe0\xf1\x1f\xa2\x91\xb4\xf9\x51\xc6\xcc\x93\xb3\x0c\x86\x65\x8c\x2e\xb0\x3c\xb9\xca\x6a\x3f\xe2\x56\xe7\x67\x58\x26\x6d\xbe\x39\xd3\x6f\x2e\xf4\xdb\xe9\xe8\x28\xe3\xb0\xcb\xc4\xad\xd6\x32\x66\xa1\x44\x06\xc3\xd9\x62\x51\x1c\xf6\xd3\x79\x31\xe7\xbc\x10\x38\xf9\x70\x7f\x3f\x9f\xcd\x0b\x9a\xde\x4f\x0e\xc5\xec\x20\xa6\xc5\x1d\x5f\xcc\xc4\x87\xc4\xa1\x70\x4f\xaa\xdd\x57\xfe\x8c\x91\x97\xd9\x75\x18\x06\x43\x25\x23\x0d\x07\xc1\x11\x4f\x30\x4f\x4e\x49\x8e\x81\x41\x31\x00\x08\xa4\x88\x47\xeb\x1b\x02\x9d\x52\xff\x68\x31\x42\x52\xf1\x67\xfa\x84\xe8\x31\xd2\xb1\x6e\x52\x62\xed\x88\xc1\xc6\x2a\x25\xcd\xf1\x8b\x13\x18\x69\x00\x10\x49\x3b\x85\x91\x2e\x75\x5a\x1b\x48\xa6\x3a\x25\x6f\x2a\xda\xd8\x0f\x27\x6e\x20\xb7\x6c\x18\xe0\xaa\xce\xf9\x9b\xfc\x49\x72\x7a\xe0\xdc\x56\x26\x7e\x6a\xf2\x53\x21\x71\xbe\xa1\x2c\xe0\x05\x98\x38\x50\x1a\xf2\xad\xd6\x33\x90\x1a\x8f\xa9\x89\x6f\x15\xd6\x69\xb5\x4d\x8f\xfd\x06\xd8\x78\x34\x1b\x4d\x86\x2f\x79\x69\x31\x97\x18\x6b\x39\x01\x94\xd4\x32\xf6\x7c\x49\x41\x6d\x7d\xcd\x60\x32\x1e\xaf\x64\x2f\xc6\x5d\xc5\xa0\x18\x8f\x75\xc7\xef\xe9\x5b\x45\xe1\x7d\xa6\xc5\xec\x6d\xa2\xbb\x0e\x0f\x99\x53\x97\x20\xbb\x08\xfc\xb8\x59\x3e\xfd\xf5\xb0\x7b\xfc\xf5\x69\xf7\xdb\xea\xe3\xe7\x2f\xbb\xa7\xed\xc7\xc7\xcf\x9f\x96\xdb\x1e\xe7\x09\x55\x45\xbf\x78\xab\xfb\x7d\x9c\xe5\x3c\xc8\xe3\x0a\xdd\xef\x54\x6f\xe8\xf0\x1a\xf0\xb2\xcc\xd6\x32\xec\x89\xbc\x97\x82\xc2\x1b\xe8\xaf\x54\xdf\xde\x58\x32\xeb\xd2\x2b\x47\xc5\x20\xfa\x8a\x5a\x80\xf3\x4e\xd7\x95\x52\x6b\xab\x24\xaf\x19\x3c\xa8\x67\xac\xdb\x35\x6f\x3b\xb3\xc6\x94\x3c\x91\xa1\x10\xd6\xde\xee\xa9\x3b\x26\xfd\xfd\xfd\x0e\xbf\xeb\xa2\x35\x1a\xf1\x5a\x8f\x0c\x42\x99\x5f\xc9\x46\xa1\xec\x00\xa4\x91\x51\xa2\x5a\x92\xc2\x7a\x4b\xdc\x1a\x11\x18\x4c\xc7\x1d\x8c\x23\x2f\xad\x78\x89\x16\xb3\x6e\x38\x4a\x4d\xb6\x8a\xef\x65\x1f\x50\xaa\xca\xd3\xae\xf4\x14\x4a\xab\x44\xf3\x47\xb9\xda\xc9\xaa\x4a\xd3\x2a\x3d\xa1\xd0\x3f\x19\x9d\xbc\x6b\x8c\x25\x83\xbc\x0a\x3e\x0f\x9e\xe7\xe8\x5c\x2e\xec\xb3\x51\x16\x45\xc6\x91\x97\xd4\x9b\xb7\x51\xf8\x1c\xc9\x1a\xf2\x1b\x59\x9b\xbb\x7a\x93\xad\x7d\x49\x1d\x58\x53\xa0\xf3\xae\x7f\x58\x9f\xb4\x8b\xf5\x52\x7a\x06\xff\xfe\xf7\x2a\xe7\xdd\x2a\xd0\xbe\xfa\xae\x48\x37\x64\x02\x08\x3a\x60\xa5\xe2\xca\x0a\x62\x70\x37\xe9\xae\xa7\x77\xcc\xff\x07\x00\x00\xff\xff\x74\x67\xf9\x34\x1b\x07\x00\x00")

func assetsRazeeRemoteResourceS3YamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRemoteResourceS3Yaml,
		"assets/razee/remote-resource-s3.yaml",
	)
}

func assetsRazeeRemoteResourceS3Yaml() (*asset, error) {
	bytes, err := assetsRazeeRemoteResourceS3YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/remote-resource-s3.yaml", size: 1819, mode: os.FileMode(420), modTime: time.Unix(1591987436, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeWatchKeeperYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xdf\x73\x1a\x47\x0c\x7e\xe7\xaf\xd0\xf0\x7e\xdc\x81\x83\x93\xee\x1b\x53\x68\x33\x13\xe3\x30\xd8\x49\x9b\xbe\x30\xf2\x9e\x8e\xdb\xf1\xfe\xca\xee\x1e\xe9\xf5\xaf\xef\x2c\x87\xf1\x62\x8e\x34\x9e\xe9\x4c\xf6\x89\xd3\x27\x7d\xfa\x24\x21\xa1\x15\x9f\xc9\x79\x61\x34\x03\xb4\xd6\xe7\xbb\xf1\xe0\x51\xe8\x92\xc1\x9c\xac\x34\xad\x22\x1d\x06\x8a\x02\x96\x18\x90\x0d\x00\x50\x6b\x13\x30\x08\xa3\x7d\xfc\x04\xd8\x3d\x85\x0f\x0b\x7c\xf7\xae\xa4\xe9\xe4\xfa\xaa\xe2\xc4\x7f\xe1\xd5\xc3\xb4\xa2\x29\x5e\x55\xe3\xe9\xdb\x09\x11\xbf\xc2\x92\x5f\xbf\x1d\x4f\x86\xfb\x38\x87\xff\x10\x8d\x84\xc9\xb7\x22\x64\x8e\xac\x61\x30\xac\x43\xb0\x9e\xe5\xd1\x54\x37\x0f\x23\x6e\x54\xbe\x77\xcb\x84\xc9\xff\xc0\xc0\xeb\xec\x91\xc8\x92\x1b\x6d\x45\x78\xc1\xc2\x8d\x52\x22\x64\xbe\xc6\x57\x2a\xd1\xa8\x88\xc1\xb7\x84\x7d\x00\x20\xf1\x81\xe4\xa1\xc0\x7d\x8a\xbc\x73\x70\xe4\x4d\xe3\x38\x31\x18\x4a\x11\x68\x38\xf0\x96\x78\x74\x73\x64\xa5\xe0\xe8\x19\x8c\xf7\x5f\x3b\x11\x9b\xf2\x5e\xf8\x60\x5c\x7b\x23\x94\x08\x0c\x8a\x01\x80\x27\x49\x3c\x18\xd7\x51\xab\x48\x7a\x93\xe4\x82\x38\x84\x33\x35\x3e\x38\x0c\xb4\x6d\x3b\x9f\xd0\x5a\x62\xb0\x36\x52\x0a\xbd\xfd\x64\x4b\x0c\x34\x00\x08\xa4\xac\xc4\x40\x07\xe2\x64\x62\xf1\xc9\x93\x1c\xfd\x59\xba\xf7\xdd\x6a\x3b\x97\xde\x8e\x01\x3c\xb5\x62\xff\x9b\xdc\x4e\x70\x9a\x71\x6e\x1a\x1d\x6e\xcf\x02\x32\x8f\x07\x4f\x6e\x74\x40\xa1\xc9\x1d\xd5\x65\x40\x7a\xf7\x2c\x35\x1a\xba\x8c\x77\xf7\xb3\xf5\xfd\x66\xbe\xb8\x99\x7d\xd9\x2c\x67\x7f\x26\x1e\x00\x3b\x94\x0d\xfd\xe6\x8c\x62\x27\xe6\x3d\x7f\x25\xb6\x4b\xb4\x1f\xa8\x5d\x53\xf5\x12\xee\xab\x26\xeb\x62\xce\x3c\x1f\xa9\xfd\xbe\x88\xf8\x8c\x8d\xbb\x81\x92\x41\x70\x0d\xf5\x54\x71\x3b\x5b\x2e\xee\x56\xb3\x5f\x17\x3f\xa6\xbf\x12\x24\xcb\x5e\xe1\x7b\x64\x85\xa1\x66\xc7\x71\x8f\x62\x0a\x6f\x91\xf7\x25\x5e\xcf\xfe\x5a\x2c\xe6\xb3\xbb\xf7\x9b\x4f\xeb\x9b\x9f\xd3\xbc\x4b\x12\xce\x25\x7e\x5c\xff\xbe\xf9\xb0\xf8\xf2\x63\x32\x3d\x71\x47\xe1\x15\x1a\xbb\x80\xff\xd2\x78\xae\xe1\x38\xc3\x8f\xf3\xc5\x66\x71\xfb\xf9\x5c\x1e\x83\xa1\x75\xa6\x6c\x78\xfc\x17\x0c\x8f\xb8\x50\xb8\x8d\xd8\xd7\x06\xdb\x78\xad\xd2\x2d\xeb\x34\xb1\x62\x34\x1d\x4d\x5e\x44\xac\x1a\x29\x57\x46\x0a\xde\x32\x98\xc9\x6f\xd8\xfa\xc1\xe5\xaa\x9e\x57\xf8\xb0\xb6\x3e\xed\x85\x8c\x37\xc8\x9f\x76\x47\x91\x32\xae\x65\x30\x2d\x8a\xa5\x38\x41\xb8\x6d\x18\xbc\x29\x0a\x95\x58\x1d\x7d\x6d\xc8\x5f\xe2\x18\xf7\x73\x4c\x13\x0a\x29\x76\xa4\xc9\xfb\x95\x33\x0f\x94\xb2\xd0\xdf\xcf\x97\xe3\x10\x6b\x94\x42\x5d\x9e\x1a\x33\xf0\x75\xfe\x44\x32\xf2\x75\x02\x0a\x2d\x82\x40\x39\x27\x89\xed\x1d\x71\xa3\x4b\xcf\xe0\xba\x28\x12\x17\x4b\x4e\x98\xf2\x08\x5e\x9d\x80\x41\x28\x32\x4d\x48\xd0\x04\xac\x50\xc8\xc6\xd1\x7d\xed\xc8\xd7\x46\x96\xdd\x8d\xef\xde\xce\xc8\x46\xd1\x32\x5e\xb9\xa4\x31\x19\xa8\x68\xe9\x96\x33\x6f\xbc\xcb\xbd\xe3\x39\x5a\x9b\xef\xc7\x90\x59\x23\x65\x92\xa0\x9b\x65\x0f\x74\x99\x47\x1b\x9d\x1d\x97\xbd\x3c\xe3\xea\x85\x3b\xad\xc9\x9d\x3d\xae\x77\xda\xe7\x92\x2a\x6c\x64\x58\x9a\x92\x18\xbc\x99\x14\x67\xdc\x27\x9b\xd4\x23\xfa\x42\x35\xff\x4b\xba\x0b\x65\xf7\x16\xfd\x6f\x00\x00\x00\xff\xff\x5e\x39\x40\x98\xdb\x08\x00\x00")

func assetsRazeeWatchKeeperYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeWatchKeeperYaml,
		"assets/razee/watch-keeper.yaml",
	)
}

func assetsRazeeWatchKeeperYaml() (*asset, error) {
	bytes, err := assetsRazeeWatchKeeperYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/watch-keeper.yaml", size: 2267, mode: os.FileMode(420), modTime: time.Unix(1591987436, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/prometheus/additional-scrape-configs.yaml":                  assetsPrometheusAdditionalScrapeConfigsYaml,
	"assets/prometheus/base-configmap.yaml":                             assetsPrometheusBaseConfigmapYaml,
	"assets/prometheus/deployment.yaml":                                 assetsPrometheusDeploymentYaml,
	"assets/prometheus/kubelet-serving-ca-bundle.yaml":                  assetsPrometheusKubeletServingCaBundleYaml,
	"assets/prometheus/prometheus-additional.yaml":                      assetsPrometheusPrometheusAdditionalYaml,
	"assets/prometheus/prometheus-rules.yaml":                           assetsPrometheusPrometheusRulesYaml,
	"assets/prometheus/prometheus.yaml":                                 assetsPrometheusPrometheusYaml,
	"assets/prometheus/serving-certs-ca-bundle.yaml":                    assetsPrometheusServingCertsCaBundleYaml,
	"assets/prometheus-operator/deployment.yaml":                        assetsPrometheusOperatorDeploymentYaml,
	"assets/prometheus-operator/operator-certs-ca-bundle (Copy 1).yaml": assetsPrometheusOperatorOperatorCertsCaBundleCopy1Yaml,
	"assets/prometheus-operator/operator-certs-ca-bundle.yaml":          assetsPrometheusOperatorOperatorCertsCaBundleYaml,
	"assets/prometheus-operator/service.yaml":                           assetsPrometheusOperatorServiceYaml,
	"assets/razee/razee-job.yaml":                                       assetsRazeeRazeeJobYaml,
	"assets/razee/razee-namespace.yaml":                                 assetsRazeeRazeeNamespaceYaml,
	"assets/razee/remote-resource-s3.yaml":                              assetsRazeeRemoteResourceS3Yaml,
	"assets/razee/watch-keeper.yaml":                                    assetsRazeeWatchKeeperYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"prometheus": &bintree{nil, map[string]*bintree{
			"additional-scrape-configs.yaml": &bintree{assetsPrometheusAdditionalScrapeConfigsYaml, map[string]*bintree{}},
			"base-configmap.yaml":            &bintree{assetsPrometheusBaseConfigmapYaml, map[string]*bintree{}},
			"deployment.yaml":                &bintree{assetsPrometheusDeploymentYaml, map[string]*bintree{}},
			"kubelet-serving-ca-bundle.yaml": &bintree{assetsPrometheusKubeletServingCaBundleYaml, map[string]*bintree{}},
			"prometheus-additional.yaml":     &bintree{assetsPrometheusPrometheusAdditionalYaml, map[string]*bintree{}},
			"prometheus-rules.yaml":          &bintree{assetsPrometheusPrometheusRulesYaml, map[string]*bintree{}},
			"prometheus.yaml":                &bintree{assetsPrometheusPrometheusYaml, map[string]*bintree{}},
			"serving-certs-ca-bundle.yaml":   &bintree{assetsPrometheusServingCertsCaBundleYaml, map[string]*bintree{}},
		}},
		"prometheus-operator": &bintree{nil, map[string]*bintree{
			"deployment.yaml":                        &bintree{assetsPrometheusOperatorDeploymentYaml, map[string]*bintree{}},
			"operator-certs-ca-bundle (Copy 1).yaml": &bintree{assetsPrometheusOperatorOperatorCertsCaBundleCopy1Yaml, map[string]*bintree{}},
			"operator-certs-ca-bundle.yaml":          &bintree{assetsPrometheusOperatorOperatorCertsCaBundleYaml, map[string]*bintree{}},
			"service.yaml":                           &bintree{assetsPrometheusOperatorServiceYaml, map[string]*bintree{}},
		}},
		"razee": &bintree{nil, map[string]*bintree{
			"razee-job.yaml":          &bintree{assetsRazeeRazeeJobYaml, map[string]*bintree{}},
			"razee-namespace.yaml":    &bintree{assetsRazeeRazeeNamespaceYaml, map[string]*bintree{}},
			"remote-resource-s3.yaml": &bintree{assetsRazeeRemoteResourceS3Yaml, map[string]*bintree{}},
			"watch-keeper.yaml":       &bintree{assetsRazeeWatchKeeperYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
