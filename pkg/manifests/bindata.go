// Code generated by go-bindata. (@generated) DO NOT EDIT.

//Package manifests generated by go-bindata.// sources:
// ../../assets/metric-state/deployment.yaml
// ../../assets/metric-state/service-monitor.yaml
// ../../assets/metric-state/service.yaml
// ../../assets/prometheus/additional-scrape-configs.yaml
// ../../assets/prometheus/htpasswd-secret.yaml
// ../../assets/prometheus/kube-rbac-proxy-secret.yaml
// ../../assets/prometheus/kube-state-service-monitor.yaml
// ../../assets/prometheus/kubelet-serving-ca-bundle.yaml
// ../../assets/prometheus/prometheus-additional.yaml
// ../../assets/prometheus/prometheus-datasources-secret.yaml
// ../../assets/prometheus/prometheus-rules.yaml
// ../../assets/prometheus/prometheus.yaml
// ../../assets/prometheus/proxy-secret.yaml
// ../../assets/prometheus/service.yaml
// ../../assets/prometheus/serving-certs-ca-bundle.yaml
// ../../assets/prometheus-operator/deployment.yaml
// ../../assets/prometheus-operator/operator-certs-ca-bundle.yaml
// ../../assets/prometheus-operator/service.yaml
// ../../assets/razee/razee-job.yaml
// ../../assets/razee/razee-namespace.yaml
// ../../assets/razee/remote-resource-s3.yaml
// ../../assets/razee/watch-keeper.yaml
// ../../assets/reporter/job.yaml
package manifests

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsMetricStateDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x6f\xe3\x46\x0c\xbd\xfb\x57\xcc\x6d\x2f\x1d\xcb\xf2\x62\xdb\xec\x00\x39\xa4\x8e\xdb\x14\x88\xb3\x41\x1d\xb4\x47\x83\x1e\xd1\xf6\xc0\xf3\xb5\x1c\xca\x8d\x50\xf4\xbf\x17\x8a\x9c\x8d\x2c\xdb\xf1\x1a\x5b\x04\x28\xb0\x73\x4a\xc8\x47\xf2\x89\xe4\x3c\x4b\x10\xcd\x1f\x48\xc9\x04\xaf\x04\xc4\x98\xb2\x4d\xde\x5b\x1b\x5f\x28\x71\x8d\xd1\x86\xca\xa1\xe7\x9e\x43\x86\x02\x18\x54\x4f\x08\x0f\x0e\x95\xa0\x95\x93\x0e\x99\x8c\x96\x89\x81\xb1\x27\x84\x85\x39\xda\x54\x43\x44\x9d\xa9\xbf\x2e\xe7\x48\x1e\x19\x53\xdf\x84\x4c\x07\x17\x83\x47\xcf\x4a\xe8\xe0\x99\x82\xb5\x48\x47\xb0\x47\x4a\xa4\x88\xba\x4e\x4f\x18\xad\xd1\x90\x94\xc8\x7b\x42\x24\xb4\xa8\x39\x50\x53\xd8\x01\xeb\xd5\x6d\x8b\xc9\x79\x5c\xce\x60\x23\x04\xa3\x8b\x16\x18\xb7\x95\x5b\x3d\xaa\x8f\xdd\x21\x71\x2e\x8d\xb3\x88\x08\xf1\xdc\x9a\xfa\xd4\xb9\xc0\x78\xa4\x56\x71\xb9\x1d\xdb\x5e\x60\x73\x8c\x83\xe5\x71\x2f\x61\x0a\x25\x69\x6c\xe5\x6b\xcc\x9f\x4b\x4c\xdc\xb1\x0a\xa1\x63\xa9\x44\x3e\x18\xb8\x8e\xdd\xa1\x0b\x54\x29\x91\x7f\x18\x4c\x4c\xcb\x97\x50\x97\x64\xb8\x1a\x05\xcf\xf8\xc8\x4a\xfc\xfd\x4f\xcb\xcb\x48\xce\x78\x60\x13\xfc\x04\x53\x82\x25\xde\x07\x6b\x74\xa5\xc4\x2f\x60\xed\x1c\xf4\xfa\x21\xdc\x86\x65\xfa\xe4\xc7\x44\x81\x5a\x91\x31\x50\x97\x9c\x7c\x69\xce\x7d\x20\x56\xe2\x62\x70\x31\xe8\xd0\x6c\x1a\xf5\x17\xce\x4f\x46\xe6\x07\x23\x9b\x26\xa6\x96\x0f\x68\xd9\xe5\xd1\x1a\xcc\x01\xaf\x90\xd2\x86\x25\x87\xc4\x05\x12\xed\xf9\x9e\x1a\x86\xd2\x9a\xc4\xe8\x25\x14\x05\x61\x4a\x97\xea\xe3\xe0\xe3\x70\x0f\xcb\x36\x49\x6d\xe2\x0a\x49\xa6\xd2\x30\xa6\xcb\x87\xdb\xe9\x6c\x3c\xba\xbe\x19\xcf\x7e\x9f\x5e\xcd\xfe\xfc\xed\xe1\x66\x76\x35\x9e\xce\xf2\xe1\xc5\xec\xd7\xd1\x64\x36\xbd\xb9\x1a\x7e\xf8\xf1\x87\x17\xd4\x78\x74\x7d\x02\xb7\x97\x67\xf4\xf3\xe8\xab\xf2\x1c\xc4\xbd\x92\x6d\xef\xe9\xca\x98\x98\x10\xdc\xe5\x8a\x39\xaa\x2c\xcb\x87\x3f\xf5\x07\xfd\x41\x3f\x57\xf5\x60\xb3\xc3\xdd\x40\x62\xb9\x30\x16\x2f\x33\x64\x9d\xb1\x4d\x59\x24\xb3\x01\xc6\xfa\xef\xbe\x26\x3e\x18\xb6\xc5\xc8\x35\x56\xaf\x44\xaf\xb1\x3a\x4a\x52\x6a\x68\x45\xea\xe0\x17\x66\xe9\x20\xa6\x2c\x21\x6d\x8c\x5f\x36\xcc\x34\xc8\x79\xe9\x0b\x8b\x8d\x59\xa3\xd4\xd0\x21\xb5\xbd\xad\x9f\x4b\xa8\x1a\x19\x21\x0c\x29\xab\xb5\x42\xd2\x1c\xb4\x8c\x14\x1e\x2b\xb5\x19\xf4\x3f\xf4\xdb\xcb\xdd\xac\x67\x07\x26\xf3\x33\x6f\xcc\xde\x96\x3d\x27\xae\x47\x90\xbe\x59\x35\x8e\x89\xc6\xf0\x6d\x34\x63\x13\x6c\xe9\x70\x12\x4a\xbf\xdf\x08\x57\x5b\xef\x81\x57\x4a\x74\x67\x7f\xb0\x21\x5d\xa1\xae\xd7\xa8\x03\x24\x84\xe2\x93\xb7\x95\x12\x0b\xb0\x09\x4f\x14\x3c\xb9\x32\x07\x69\xb4\xa1\xe9\x28\xf6\x18\x93\xff\x56\x9f\xde\x7f\xd7\xa7\x17\x7d\xca\xff\x8f\xfa\x94\xde\x5c\xa0\x86\xe7\x0b\xd4\xfb\xe3\x02\x25\xf7\x7f\x9e\xbf\x0b\xd5\x1b\x09\xd5\x71\xf5\xf9\x76\xa5\xf2\xa1\xc0\xe9\xce\x97\x40\x7d\xe6\xc8\xd0\x79\x89\x0e\x49\x09\x6b\x7c\xf9\xf8\x05\x54\x87\x4a\x0a\x16\x3b\x48\x07\x89\x91\x94\x78\xf7\x6e\x0b\x8d\x64\xc2\xd3\x2c\x2d\xa4\x74\xd7\x50\xae\x12\xa3\x93\xda\x96\x35\x56\x6a\x32\x6c\x34\xd8\xde\xa9\xe1\x6f\xaf\xce\x95\xd6\x75\xeb\x9a\x5c\x84\xc5\x0a\x58\x3a\xa0\x35\x72\xb4\xa0\x51\x86\x88\x04\xfc\x65\xf0\x1c\x6c\xfd\xbf\x09\x7e\xe7\xd5\x1e\x17\x0b\xd4\xac\xc4\x5d\x98\xea\x15\x16\xe5\x4e\xcb\xd6\x58\xa9\x13\x8f\xd8\x42\x3f\x17\x54\x62\xfc\x68\x12\x3f\xaf\x41\xb3\x6d\x07\xbe\x27\x4e\xac\x4e\x42\x4d\xc8\xbb\xfb\xd9\xd8\xee\x4e\x87\x3f\xdd\xec\x85\x59\x4e\x20\xee\x66\xf8\xda\x6d\x79\x1d\xf7\x6f\x00\x00\x00\xff\xff\xa1\xa2\xd2\x51\xf9\x0e\x00\x00")

func assetsMetricStateDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateDeploymentYaml,
		"assets/metric-state/deployment.yaml",
	)
}

func assetsMetricStateDeploymentYaml() (*asset, error) {
	bytes, err := assetsMetricStateDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/deployment.yaml", size: 3833, mode: os.FileMode(420), modTime: time.Unix(1596574854, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMetricStateServiceMonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x53\x4d\x8f\xd4\x30\x0c\xbd\xcf\xaf\xf0\x1f\x48\x2b\x38\xa1\x5e\x91\x38\x2d\x5c\x58\x71\x77\xdd\xc7\x34\x4c\x62\x47\x8e\x3b\xbf\x1f\xb5\x1d\xd0\x72\x58\xa4\x95\xb8\x70\x73\x5e\xfc\xf1\xfc\x92\xc7\x2d\x7f\x83\xf7\x6c\x3a\x51\x35\xcd\x61\x9e\xf5\x3a\x88\x39\xac\x0f\x62\x75\xbc\xbf\xbb\xdc\xb2\x2e\x13\x7d\x85\xdf\xb3\xe0\xf3\x99\x75\xa9\x08\x5e\x38\x78\xba\x10\x15\x9e\x51\xfa\x1e\x11\x71\x6b\xc3\x6d\x9b\xe1\x8a\x40\x1f\xb2\x8d\x62\xb5\x99\x42\x63\x22\x31\x0d\xb7\x52\xe0\xaf\xe4\x2a\x57\x4c\xe4\x6b\x4d\x15\xe1\x59\x52\x0f\x0e\x5c\x88\x5e\xb9\xe8\x0d\xb2\xcf\x85\x2e\xcd\xb2\xc6\x41\x22\xd1\x0c\x76\xf8\xb3\xdd\xa0\x9f\x72\xc1\x44\xe3\x9d\x7d\xf4\x4d\xc7\x0e\x71\x44\x1f\xff\x1c\xdb\xcf\xdd\x58\xc4\x36\x8d\x31\xf6\xc2\x83\xe1\x6a\x6a\xfe\x74\xae\x47\xe1\x1b\x0e\x34\x6b\xc0\xef\x5c\x26\x7a\x5f\x0f\xa0\x99\xc7\x44\x6b\x44\xeb\xc7\xb9\xcb\x8a\x9d\xef\x4b\xc4\xb9\xe1\x39\x57\xd8\x16\xbf\xeb\xa2\xf4\x8f\xa6\xdf\xf3\xf5\xd4\x8e\x48\xf8\xc1\x17\x21\x63\x73\xab\x88\x15\x5b\x1f\xe5\xc8\xaa\xdc\xfa\xc9\x55\xaf\x49\xe0\xd1\x93\x70\x9a\x37\x5d\x0a\x7e\xed\x90\x84\x07\xf1\x78\xf4\xdb\x41\xf8\x97\x43\xbc\x33\x4e\xbb\x92\xc9\xd1\x0a\x0b\x96\xc4\x91\x7c\xd3\xc8\x15\xff\x56\xb8\xbf\x49\xf4\x78\xc2\xff\x5a\xaa\x1f\x36\x1f\xdf\x62\xa2\xdb\x87\x9e\xb8\xb5\xcb\xde\xa1\x40\xc2\xfc\x64\x58\x39\x64\x7d\x7a\xe1\x8c\xb7\x79\xe3\x0d\xee\xf8\x19\x00\x00\xff\xff\x74\xfb\x99\x7d\xc5\x03\x00\x00")

func assetsMetricStateServiceMonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateServiceMonitorYaml,
		"assets/metric-state/service-monitor.yaml",
	)
}

func assetsMetricStateServiceMonitorYaml() (*asset, error) {
	bytes, err := assetsMetricStateServiceMonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/service-monitor.yaml", size: 965, mode: os.FileMode(420), modTime: time.Unix(1595995577, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMetricStateServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\xbd\x6e\x02\x31\x10\x84\x7b\x3f\xc5\xbe\x80\x2f\x7f\x15\xee\xa2\x54\x74\x48\x91\xd2\x1b\x33\x80\x85\x6f\x6d\x79\x07\x24\xde\x3e\x3a\x38\x29\x89\x92\x2b\x53\x7a\x76\x66\x3e\xdb\x1b\x5b\xfe\x40\xb7\x5c\x35\xc8\xe5\xc9\x9d\xb2\xee\x82\xbc\xa3\x5f\x72\x82\x1b\xc1\xb8\x8b\x8c\xc1\x89\x44\xd5\xca\xc8\x5c\xd5\xa6\xa3\x88\xdd\x4d\xc3\x16\x8c\x43\x6d\x50\x3b\xe6\x3d\x87\x5c\x1f\x6e\x13\x3d\xf8\x84\x4e\x6f\x48\x1d\xf4\x1a\x47\x04\xe9\xc7\xd1\x8f\x60\xcf\xc9\x1b\x23\xe1\x59\xcc\x89\x94\xb8\x45\x99\x6b\x63\x6b\xc3\xe9\xbc\x45\x57\x10\x36\xd5\xa5\x3a\xb6\xaa\x50\x06\x49\x55\xd9\x6b\x29\xe8\x0b\xde\xbf\x31\x4e\x64\x81\x3f\x3f\xc2\x59\x43\x9a\xf8\xad\x76\xce\x17\xf1\x73\xe6\x48\x36\xbb\x29\xf7\x71\x90\xd5\xe3\xea\x79\x16\x18\xfb\x01\xdc\xdc\xe4\x2f\xe3\x8f\xe8\x0c\xfc\x55\xf1\xb2\x54\xf1\x2d\x60\x28\x48\xac\xfd\x5f\xbf\xc6\x60\xd3\xfe\x5f\xf7\xfb\xac\x99\xd7\x20\x6f\x25\x43\xb9\xde\x38\x11\x5e\x1b\x26\xe1\x6c\x44\x5f\x6f\xdc\x67\x00\x00\x00\xff\xff\xe0\x0f\xf0\x12\x2f\x02\x00\x00")

func assetsMetricStateServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMetricStateServiceYaml,
		"assets/metric-state/service.yaml",
	)
}

func assetsMetricStateServiceYaml() (*asset, error) {
	bytes, err := assetsMetricStateServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/metric-state/service.yaml", size: 559, mode: os.FileMode(420), modTime: time.Unix(1596569744, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusAdditionalScrapeConfigsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xc9\x31\x0a\x82\x31\x0c\x05\xe0\x3d\xa7\xc8\x05\x3a\xb8\xf6\x1a\x82\xfb\xb3\x7d\x6a\xd0\xa6\x3f\x49\x70\x11\xef\x2e\x38\x7f\x38\xec\xc2\x48\xdb\xde\xf5\x7d\x92\x89\x42\xd7\xcf\x57\x9e\xe6\xb3\xeb\x99\x23\x58\xb2\x58\xf8\x8b\xa8\x3a\x16\xbb\xc6\x63\xb5\xc5\x62\x5c\x91\x6c\x98\xd3\xca\xb6\xe3\xd5\x72\x04\x0e\xb6\xb1\xfd\x66\xf7\x94\x5f\x00\x00\x00\xff\xff\x49\x3e\x20\xcd\x5f\x00\x00\x00")

func assetsPrometheusAdditionalScrapeConfigsYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusAdditionalScrapeConfigsYaml,
		"assets/prometheus/additional-scrape-configs.yaml",
	)
}

func assetsPrometheusAdditionalScrapeConfigsYaml() (*asset, error) {
	bytes, err := assetsPrometheusAdditionalScrapeConfigsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/additional-scrape-configs.yaml", size: 95, mode: os.FileMode(420), modTime: time.Unix(1596164441, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusHtpasswdSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\x31\x0a\x02\x31\x10\x85\xe1\x7e\x4e\xf1\x2e\x90\xc2\x4e\x72\x09\x0b\xc1\x7e\xd6\x7d\x90\xb0\x9b\xec\x98\x99\x55\x44\xbc\xbb\x68\x6f\xf7\xc3\xff\xa9\xd5\x0b\x87\xd7\xad\x67\xdc\x0f\x32\x6b\x68\xc6\xeb\x2d\x4b\xed\x73\xc6\x99\xd7\xc1\x90\xc6\xd0\xdf\x11\x60\xd5\x89\xab\x7f\x0b\x58\x8e\x9e\xd4\x2c\x63\x94\x96\x6c\x6c\x8d\x51\xb8\x7b\x6a\x0c\x8e\x49\x9d\x02\x74\x6d\xfc\x0f\x52\x09\x53\xf7\xc7\x2c\xf1\x34\x66\x9c\x4c\x6f\x3b\xe5\x13\x00\x00\xff\xff\x12\xe6\xd6\x91\x96\x00\x00\x00")

func assetsPrometheusHtpasswdSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusHtpasswdSecretYaml,
		"assets/prometheus/htpasswd-secret.yaml",
	)
}

func assetsPrometheusHtpasswdSecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusHtpasswdSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/htpasswd-secret.yaml", size: 150, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusKubeRbacProxySecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\xcb\x8e\x9b\x30\x14\x40\xf7\x7c\x85\x7f\x80\x2a\x24\x4d\x35\x83\x34\x8b\x49\x24\xc0\xb4\x10\x29\x51\x0c\x78\xe7\xc7\x2d\x98\xd8\xc6\xe5\x95\xd2\xaf\xaf\x48\x1a\x75\x67\xe9\xf8\xdc\x73\x75\x99\x53\x04\xfa\x41\x75\x36\x44\x73\xe0\x49\x36\xb2\xd0\x43\x48\x74\xf6\xa7\xaa\xbf\x2c\xcc\xe8\x10\x61\x13\x05\x32\x6e\x66\x61\xf4\xb7\xaa\x3c\x3b\xbe\xfd\xaa\x4e\x75\x57\xe3\x63\xba\xd0\x32\x9f\x65\x99\xb6\xf4\x1a\x6d\x64\x92\xba\xca\x92\x0d\x2d\xb3\x7f\xfc\xb3\xc6\x26\xba\x33\x42\xb5\xb0\xf9\xd3\x53\x9f\x8a\x17\x64\x23\x8c\x6e\xc5\xb2\xef\x4f\x49\x36\xb1\xe2\x6d\x96\x6d\xa4\x68\x79\x6e\xb2\x0b\xfe\xfe\xf0\x8e\xe9\x54\x15\x81\x16\xbb\x43\x53\x6d\xaf\x0f\x0f\x76\x43\xfd\x43\xd3\x86\x27\x44\xe3\x24\x78\xc7\xaf\x86\x4d\xb5\xd8\xbe\x07\xc2\xe4\x1a\xb7\x5d\x8d\xed\x61\xa6\x49\xa6\x8e\xea\xc9\xe4\x2e\x75\x32\x26\x7f\x70\xdb\xbd\x66\x2b\x20\x51\x40\xcb\x74\x7f\x8d\xa3\x65\xed\xc8\x98\x2c\xff\xf9\xba\xf7\xbe\xe1\xc5\xb3\xcb\x4d\x34\xd2\x32\xbf\x57\x45\xae\x71\xfd\xf1\xe1\xdd\x94\x95\x21\xba\x80\xe8\x61\xf4\x0c\x8c\xec\x75\x36\xcd\x38\xe8\x61\x7d\x21\x74\x7b\x1b\x7c\xe6\x5c\x88\xfa\xc6\xf8\xae\xef\x0c\x8c\x0d\x4c\x83\x6f\x60\x84\x9e\xb3\x01\x3c\x84\x2c\x33\x10\xa2\xdb\xc4\xc1\xef\x39\x13\xeb\xb7\xdf\x8b\x37\x2e\x0e\x42\x74\x72\xec\xd7\x04\xde\xdf\x00\x00\x00\xff\xff\x6d\xa5\xc6\x38\xa1\x01\x00\x00")

func assetsPrometheusKubeRbacProxySecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeRbacProxySecretYaml,
		"assets/prometheus/kube-rbac-proxy-secret.yaml",
	)
}

func assetsPrometheusKubeRbacProxySecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeRbacProxySecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kube-rbac-proxy-secret.yaml", size: 417, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusKubeStateServiceMonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x93\x41\xab\xd5\x30\x10\x85\xf7\xfd\x15\xe1\xed\xd3\xa2\x2b\xe9\x56\x10\x84\xa7\x1b\x1f\xee\xa7\xd3\xf3\x6e\x63\x93\x4c\x98\x4c\x2f\xf8\xef\x25\xe9\xbd\x22\x22\x17\x04\x37\xee\xc2\xe1\xcc\xe4\x9b\x93\x0c\x95\xf0\x15\x5a\x83\xe4\xd9\x25\xc9\xc1\x44\x43\xbe\x8c\x2c\x0a\xa9\x23\x4b\x9a\xae\x6f\x86\x3d\xe4\x75\x76\x5f\xa0\xd7\xc0\xf8\x74\xba\x86\x04\xa3\x95\x8c\xe6\xc1\xb9\x48\x0b\x62\x6d\x27\xe7\x12\xe9\x0e\x2b\x91\x18\xa3\x62\xdd\xc8\x7a\x9b\x15\x25\xca\x77\xac\xb3\x7b\x32\x3d\xf0\xf4\xc8\x9b\x60\xd0\xbf\xb2\x8e\x27\xe2\xc7\x6c\xd0\x4c\xf1\x37\x54\xe7\x32\x25\xcc\x6e\x3f\x16\xf8\x6a\x64\xf0\x09\xa6\x81\xeb\x50\x0b\xb8\x71\x23\xaf\x45\x42\xb6\x3e\x84\x77\x0b\x48\xa1\x2f\xb2\x23\x7f\x08\x11\xb3\x9b\xae\xa4\x93\x1e\x79\xaa\x60\x85\xd5\xa9\xf5\xd2\x0c\x43\x1d\x83\x4c\xf5\xbc\x90\x98\xe5\xc8\x36\x59\x2b\xec\xd8\x9b\x64\xd1\xe7\x33\x1e\xd7\xa6\xe9\x6a\x68\x9c\x57\x8a\xb3\x7b\x9b\xba\x50\x44\x6d\x76\x9b\x59\xa9\x3e\x51\x38\x6b\x2b\x6f\x68\xd8\x5d\xbe\x29\x4a\x05\x2f\x21\x41\x0e\xfb\x59\x6c\xb1\xbe\x97\xfc\x1a\x2e\xe7\x03\x38\xc7\x74\x83\x86\xf1\x54\x54\x12\x6c\xc3\x51\x27\xee\xae\x44\xa5\x9e\xc0\xf9\xe2\x19\x6a\xd5\x33\xf9\xe5\xc8\x6b\xc4\x7d\x10\xcf\x34\xb2\xda\xad\x5f\x13\xa1\x9f\x7b\x86\xe7\xd9\xb7\x40\xbd\xa2\xbf\xc7\xea\xc9\xbc\x1e\xd9\x42\xc2\xbf\x4d\xef\x61\x4e\x15\xf1\xf5\x7f\xce\xe9\x9b\x2c\xfd\x63\xcc\x6e\x7f\x57\x3d\x95\x32\xb4\x0e\x11\x6c\xa2\xf7\x55\x32\xde\x9e\x7f\xd9\x2d\x77\xb7\xfe\xf1\x2f\xff\x08\x00\x00\xff\xff\x14\x46\xa1\xb2\xcc\x03\x00\x00")

func assetsPrometheusKubeStateServiceMonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeStateServiceMonitorYaml,
		"assets/prometheus/kube-state-service-monitor.yaml",
	)
}

func assetsPrometheusKubeStateServiceMonitorYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeStateServiceMonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kube-state-service-monitor.yaml", size: 972, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusKubeletServingCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xa1\x0e\x03\x21\x0c\x00\x50\xdf\xaf\x68\xce\xb3\x64\xb6\x76\x7a\x76\xbe\x77\x74\xa4\x01\x0a\x81\xc2\xf7\x4f\xed\xfc\xcb\xe3\xae\x1f\x19\x53\x9b\x11\xee\x27\x44\x76\x26\x40\xbc\x38\x9c\xcb\x62\x91\xc7\x35\x9c\xf0\x38\x20\xab\x45\xc2\x57\xb3\xaf\xa6\x37\x77\xa8\xe2\xfc\xd7\xc6\x55\x08\xf3\x3a\xa5\x88\x87\x29\x63\xab\xa5\x70\x1f\xf0\x0b\x00\x00\xff\xff\x86\x09\x45\x3a\x65\x00\x00\x00")

func assetsPrometheusKubeletServingCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusKubeletServingCaBundleYaml,
		"assets/prometheus/kubelet-serving-ca-bundle.yaml",
	)
}

func assetsPrometheusKubeletServingCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusKubeletServingCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/kubelet-serving-ca-bundle.yaml", size: 101, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusAdditionalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x6f\xdb\x46\x10\xbd\xeb\x57\x0c\x12\x23\xb6\x61\x8b\x8c\xdb\x1c\x02\xb6\x68\x2e\xbd\x14\x68\xd1\x02\xcd\x2d\x75\x37\xa3\xdd\xa1\xb8\x31\xb9\xcb\xce\x0c\xe5\x18\x6d\xff\x7b\xb1\x4b\xca\xa2\x6b\x19\x96\x83\xb6\x48\x4f\x82\x76\x77\xde\xbc\x37\x1f\x4f\x7a\xfe\x1c\x96\x4b\xf8\x01\x6f\x20\x10\x39\xd0\x08\x2b\x02\xe7\xeb\x1a\xea\xc8\x60\xd9\x96\xb1\xa7\x20\x8d\xaf\x75\xb1\x84\x0f\x71\x65\x02\x76\x54\xc1\xf1\xd5\xb0\xa2\xa5\x28\x2a\x2d\x3b\x52\xf6\x56\x8e\x17\x00\xe9\xc0\x5b\x63\x63\xa8\xfd\x5a\xaa\x05\x00\xc0\x12\x14\x79\x4d\x2a\x15\xbc\xdb\x13\x56\x8c\x47\x37\xa2\xd4\x15\xb2\xb1\x85\x6d\x07\x51\xe2\xa2\x8d\x16\xdb\xea\xf5\xcb\xd7\x2f\x8f\x2f\x17\x99\xe7\x7d\x06\x1c\x48\x49\x96\x21\x3a\x92\xa5\x45\xb7\xf1\x12\x39\x11\x79\x0e\xdf\x52\x8d\x43\xab\x49\x92\x58\xc6\xde\x87\x35\xc4\x0d\x31\x34\xaa\xbd\x14\xf0\x5d\x0d\x4c\xbf\x0d\x9e\xc9\x9d\xc3\x87\x41\x14\x9c\x17\x5c\xb5\x04\xda\x78\x81\xa4\xbe\xc1\xb0\x26\xd0\x98\xf1\xde\xa7\xb8\xf7\x45\x12\x69\x1b\x4a\x0c\x32\x50\xbe\x7b\x9b\x22\xde\x7e\xff\x33\xbc\x80\x15\x21\x13\x83\xc6\x2b\x0a\x50\xfb\x96\x60\x2c\x06\x78\x81\x41\xc6\x12\xdb\x18\x02\xd9\x4c\x4d\x1b\x02\xb4\x3a\x60\x3b\xb2\xa4\x8c\x47\xc1\xf5\xd1\x07\x95\xb1\x0b\x63\x41\xc0\xc6\xae\x8f\x81\x82\x4a\x31\x66\xf4\x02\x42\x3d\x32\x6a\x62\x99\xf8\xdb\xa4\xf0\x06\x70\xd0\x26\x03\x8d\xb9\x07\x46\xf5\x31\xc0\x8a\x2c\x0e\x42\xb3\x87\x2f\x76\xb5\x41\x26\xd0\xeb\xb8\x43\xb4\x31\x58\xe2\x20\xe0\x43\xc6\xfa\x89\x63\x47\xda\xd0\x90\xd3\xd3\xdf\xd2\xcd\x64\xe2\xa0\xb1\x4b\x73\x00\xbe\x9e\x45\x01\x0f\x19\x4c\xbc\x1b\x55\x26\xed\xdb\x66\xc3\x8f\xda\x10\x5f\x7b\xa1\x73\xe8\x22\xdf\x56\x2d\xf6\x89\xb9\x40\x83\x1b\x9a\xa6\xb3\xe7\xb8\xf1\x8e\x1c\x5c\x7b\x6d\x7c\x48\x30\x19\xee\xeb\xdd\x40\x18\x71\xd3\x0c\x7e\x93\x1a\xa6\xad\x4c\x5f\xc7\x89\xb4\x68\x52\x67\x2a\x28\x37\xc8\x25\x0f\xa1\x14\xb2\x4c\x2a\xe5\x0e\xa2\xf0\xb1\x14\xe2\x8d\xb7\x84\xd6\xc6\x21\x68\x69\xb1\xb0\xac\x0b\x98\x7a\x6c\x72\x8f\x3f\x09\x29\x47\x2e\x00\xf6\x31\xce\x5b\xb3\x04\x8e\x09\x36\x0d\xf6\x02\x80\xa9\xc5\x15\xb5\x77\x5f\xa0\x4d\xa5\xa9\x20\x5f\x75\xd8\x67\x69\x4c\x6b\xfa\x58\x81\x31\x1d\x29\x9a\x19\x7e\x42\x32\x23\xca\x49\x71\x76\xba\xd8\xed\xe5\x78\x9a\x62\xd0\x39\x26\x11\x63\x26\xa8\xbe\x45\x4b\x1d\x05\xad\x66\x4c\x0b\x37\x2e\x56\xda\xd5\xea\xd5\xab\x2f\x33\x92\xc4\x81\xed\x84\x9f\xf6\xfc\x81\xfc\x69\x73\x2f\xe7\x3c\x27\x2a\x70\x8f\xca\x64\x0e\xa6\x47\x6d\xf6\xf1\x29\xb1\xf7\xe5\xe6\xa2\xcc\x9b\x5f\x1e\xfd\x7e\xf1\x67\xd9\x73\xfc\x78\x53\x4e\x81\xe5\xd6\x0c\xee\x78\xc6\x33\x6e\x3a\xb3\xa6\x40\xec\xad\x19\xf7\xcd\xf4\xd1\x3d\x3b\xa4\x15\x7d\x74\x0f\x75\xe2\x71\xf5\x7d\x74\x53\xf1\x3b\xe4\x2b\xd2\xac\xc4\x30\xb9\x06\xd5\xd8\xd8\xa5\x00\x62\x72\x63\x71\xb6\x9d\xbd\x22\xba\xd3\x55\xe5\x81\xfe\xc1\x84\xa9\x08\xa9\xbe\x77\x93\x4e\x65\x3e\xbc\x2b\xf3\x46\xee\xa3\x76\x3b\x55\xe7\x7b\xc6\xf2\x60\x9e\x91\xf5\x61\x9e\x5b\x12\xef\x7e\xad\x2e\xcf\x4e\x4f\xde\x54\xd5\x2f\xee\xec\xf4\xcd\x57\x27\xe9\xe3\xfe\xf0\x1c\x5d\x54\x47\x5f\xec\x15\x38\xdf\x80\xa7\x6e\xd8\xa3\x52\x1e\x18\xf6\xe9\xc5\x3c\xe8\xe8\xe2\xd0\xad\xc2\x8e\xa4\x47\x4b\x87\xf6\x70\x5f\xec\x13\x46\x6a\xb7\xc0\x4f\x4a\xb5\x0d\xcd\x3e\xbd\x2f\x57\xba\x34\xe6\x32\xdf\xdf\x96\xf8\xf8\xc4\xc6\xa0\xe8\x43\xf2\x5a\x94\x2b\x31\xf9\x8f\xc3\x1f\xbb\xd3\x8e\xba\xc8\x37\xa6\x46\xdf\x0e\x4c\x62\x34\x2a\xb6\xa7\xe3\xef\xff\xdd\x2d\x7a\xcc\x05\x26\x83\xfe\xf7\x9d\x60\x4a\xf4\xdf\xba\xc1\xa1\x49\x3f\x07\x47\x78\x12\xd7\xcf\xdf\x15\x0e\x92\xf3\x3f\x77\x86\xad\xc6\x4f\x74\x87\x79\xf8\xe2\xaf\x00\x00\x00\xff\xff\x6d\x42\x9b\xe2\x91\x0c\x00\x00")

func assetsPrometheusPrometheusAdditionalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusAdditionalYaml,
		"assets/prometheus/prometheus-additional.yaml",
	)
}

func assetsPrometheusPrometheusAdditionalYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusAdditionalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-additional.yaml", size: 3217, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusDatasourcesSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc9\x31\x0a\x42\x31\x0c\x06\xe0\x3d\xa7\xc8\x05\x3a\xb8\xe6\x12\x0e\x82\x7b\x6c\x7f\xb0\x48\xda\x9a\xa4\x82\xb7\x7f\x3c\xde\xfa\x7d\xba\xfa\x13\x1e\x7d\x0e\xe1\xdf\x8d\x9a\xa6\x0a\x7d\xfa\x68\xc2\x0f\x54\x47\x92\x21\xf5\x62\xe6\xa1\x06\x61\x7f\x5b\x31\x24\xfc\xa5\x81\x72\x5e\xcc\xed\x15\x41\xf9\x5f\x10\xbe\x2f\xfd\x6e\xd0\x11\x00\x00\xff\xff\x2f\x2c\x4d\x6e\x5b\x00\x00\x00")

func assetsPrometheusPrometheusDatasourcesSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusDatasourcesSecretYaml,
		"assets/prometheus/prometheus-datasources-secret.yaml",
	)
}

func assetsPrometheusPrometheusDatasourcesSecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusDatasourcesSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-datasources-secret.yaml", size: 91, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusRulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x5f\xb6\x8b\xa4\x62\xeb\x53\x20\x84\xd8\x56\x4e\xf2\x95\xba\xd8\x1e\x33\x63\xa3\x72\x7b\xd4\x10\x10\x9b\xee\x46\xa3\xf7\x9e\x7e\xa8\xf1\x8d\x6a\x51\x8a\x47\x96\x12\x9b\x68\x2c\xeb\x38\x8b\x52\x6c\x9c\x25\x9f\x3e\x9f\xdc\x7b\x2c\x8b\xc7\xb3\x4a\x66\xbb\xb0\xdb\x4b\x4f\x74\x99\x2d\x2c\xa1\x05\xef\x80\x59\x19\x5a\x94\xf2\x1a\x33\xad\x85\x5c\x3d\x4a\x4f\xc9\x01\x29\x4c\x4c\x76\x67\x80\xfa\x17\xf0\xe0\x2d\xe4\x9a\xb8\xfd\x55\x12\x3d\x42\xa2\xb6\x41\x7b\xa2\x39\xa0\x84\x4c\xff\xcf\x18\x76\x61\x07\xac\x72\xbe\x47\x57\x95\x5e\xb7\xfc\xb0\x2b\xe3\x69\x27\xc7\xdf\x14\xb0\x5d\x3f\x1b\x06\x28\x67\xd1\xc5\xe3\x2a\x93\xbf\xb4\x56\xcf\xb1\x54\x95\x55\x69\x76\x56\x7e\x74\x5a\x33\x6f\x3d\x6f\x38\xc0\x5b\x55\x0f\xeb\xf9\xf0\x08\x3e\x62\xfa\xc2\xe1\x2a\xd3\xd1\x7d\x07\x00\x00\xff\xff\x78\x3d\x62\x0e\x4e\x01\x00\x00")

func assetsPrometheusPrometheusRulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusRulesYaml,
		"assets/prometheus/prometheus-rules.yaml",
	)
}

func assetsPrometheusPrometheusRulesYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusRulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus-rules.yaml", size: 334, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\xcb\x6f\x1a\xc9\x13\xbe\xf3\x57\xb4\xb8\x58\xfa\x29\xcd\x00\x52\x7e\x49\x46\xe2\xe0\x25\x6c\x1c\x6d\x1c\x5b\x01\xed\xe3\xb2\xa8\xe9\x29\x86\x16\xfd\x98\x54\xd7\x10\x23\x2b\xff\xfb\xaa\xe7\x01\x33\x0c\x36\xf6\x61\x0f\x9b\x53\xdc\xf5\xd5\x47\x75\x3d\xbe\xea\x11\x99\xfa\x1d\xd0\x2b\x67\x63\x66\x9c\x55\xe4\x50\xd9\x74\x20\x1d\x82\xf3\x03\xe9\x4c\xb4\x1b\xf5\xb6\xca\x26\x31\xbb\x47\x67\x80\x36\x90\xfb\x9e\x01\x12\x89\x20\x11\xf7\x18\xb3\xc2\x40\xcc\xb2\x83\x91\x1b\x20\xc0\x95\xf0\xd0\x63\x4c\x8b\x15\x68\x1f\x60\xac\x01\x89\x19\x42\xb2\x11\xc4\x8d\xc0\x2d\x50\xa6\x85\x84\x9e\xcf\x40\x06\xa0\x58\xaf\x95\x55\xb4\xaf\x9c\x5c\x72\x6d\x49\x5d\xb7\x0e\x03\x17\xac\x01\x11\x92\x8f\x79\x88\x77\x2e\x37\x90\xe4\x5a\xd9\xf4\x73\x6a\xdd\xe1\x78\xf6\x00\x32\xa7\x70\xb7\xca\x8d\x31\x5e\x30\x56\x6c\x0b\x40\x73\x34\x85\x7f\x45\xbc\x73\xd0\x20\xc9\x61\xdb\xc4\x98\x11\x24\x37\xb3\x87\x0c\xc1\x87\x84\xf9\x53\x7b\x60\xdf\xc2\xbe\x99\x8c\x0e\x82\x31\x97\x01\x8a\xc0\xce\x3e\xdb\x33\xe6\x9d\xd0\x39\x9c\xa1\xae\xe8\xdf\xb7\x29\x43\xf2\x7d\x26\x64\xd7\x83\x9f\xcb\x71\x13\x40\x2e\x73\xda\xa5\xfb\xdf\x42\xc4\xdb\x7c\x05\x68\x81\xc0\x0f\x94\x8b\x36\xce\x53\x60\x6e\xe0\x7f\x80\x4a\x37\x14\xb3\xd1\x70\xd8\x63\x4c\x3a\x4b\x42\x59\xc0\xea\x67\x39\x13\x98\xfa\x66\x96\x79\x86\x6e\xa7\x12\xc0\x89\xcb\xc0\xfa\x8d\x5a\x53\xd3\xba\x21\xca\x3c\x17\x49\x12\x72\x39\x89\x3f\x0c\x3f\x8c\x4e\xcd\x07\x6b\xd3\x00\x46\x28\xcd\x13\x67\x84\xb2\x93\xff\x35\x2d\x79\xe6\x09\x41\x98\x49\xf0\x8d\xa3\x48\x3b\x29\x74\xb8\x48\x20\x1f\xb6\xc9\x33\xe1\xfd\x8f\x84\xaf\x95\x86\x49\x04\x24\xa3\x0c\xdd\xc3\x3e\xaa\x0d\x91\xc8\x69\xd3\xf4\x38\x5c\x81\x7b\xc0\x9d\x92\xc0\x85\x94\x2e\xb7\x34\xe9\xe6\x98\x9f\x29\x3e\x67\x57\x4d\x0e\x81\x93\xc7\x3e\x82\x77\x39\x4a\xe8\xc7\xac\x7f\xac\x62\xff\x0d\xeb\xef\x00\x57\xe1\x34\x05\xea\xff\xbc\x7a\x82\x24\x01\x0d\xa9\x20\xe0\x39\x6a\x3f\x79\xec\x47\xfd\x98\xbd\x98\xb4\xc5\xca\x49\x7b\x2e\x01\xa9\x4c\x05\x69\x1f\x65\xa8\x76\x82\x20\xfc\x7f\x20\x91\x4e\xc1\x5b\xd8\x9f\xc7\x6e\x61\xdf\xc4\x4a\xad\xc0\x86\x9c\x49\x04\xaa\xb2\xbd\x13\x18\x61\x6e\xa3\xf2\xd0\x47\xed\xc6\xab\xd2\x5b\x65\x37\x22\xb7\x05\xdb\x62\x74\x6e\xab\xa0\xcd\x78\xac\x5f\xcd\xe9\xcb\xf9\x5c\x96\x7f\x9f\x2f\xa4\x14\x95\xe7\x56\x15\xd7\x08\x09\x18\x64\x60\x9e\x46\xbf\x2a\x72\x29\x4e\x13\xe7\xb7\x2a\xe3\xa1\xb1\x38\x42\x0a\x0f\x93\xbf\x23\x03\x84\x4a\xd6\x5d\x02\x76\xd7\x9c\x9f\x52\x55\x6f\x16\x8b\xfb\xe5\xfd\xb7\xbb\x3f\xff\x6a\x8c\x62\xa1\x10\x31\xbb\xba\x3a\x0b\x9f\xbf\x02\xff\xf5\xee\x22\x58\x19\x91\x42\xcc\xbe\xe7\x62\x1f\xae\x79\x48\x49\xe4\x50\xa5\xca\x72\x57\x5c\xa9\xc8\x7f\xac\x05\x81\xaf\x2f\xdd\x59\x0b\x05\xa6\x96\x6f\x87\xd4\x92\x8b\x83\xa0\xdc\x3b\xa4\x98\xb5\xf4\xa0\xe6\x2a\x34\xa3\x3a\xad\x1b\xbd\x41\x82\xf0\x3d\x07\x4f\x2d\x21\x94\x59\x1e\x24\xcb\x34\x8e\x0c\x18\x87\xfb\x98\x8d\x87\xb7\xaa\x3a\x26\x40\xa3\xac\x08\x8b\xe2\x16\xbc\x17\x29\xdc\x3b\xad\xe4\x3e\x66\xbf\x0a\xad\x57\x42\x6e\x17\xee\x8b\x4b\xfd\x9d\x9d\x21\x3a\xac\xbc\x76\x4e\xe7\x06\x6e\x43\xb9\x5b\x57\x31\xe1\xe4\x5e\xd0\x26\x66\xa7\x43\xd2\xb9\x52\xd5\xc8\xb8\x31\xfc\xdc\x02\x0d\xd3\xf6\x0c\x73\xab\xeb\x5f\xcd\xdd\xac\xc7\xd3\xec\xb5\x26\xbe\x9a\xbe\xe5\x78\x66\x3f\x70\xed\x52\x72\x9e\x12\x40\x6c\x9d\x7b\x90\x39\x02\xd7\xca\x13\xd8\xd6\x8a\x18\xb7\x70\x85\x6c\xa9\x6c\x03\xc8\x7d\xae\x08\xfc\x64\xf1\x65\xbe\x9c\x4d\x3f\xde\xcc\x96\xdf\xe6\xd7\xcb\x3f\x3e\x2f\x6e\x96\xd7\xb3\xf9\x72\x34\x7e\xbf\xfc\x34\xbd\x5d\xce\x6f\xae\xc7\x6f\xff\xff\xe6\x88\x9a\x4d\x3f\x5e\xc0\x75\x78\xa6\xbf\x4c\x5f\xc4\x73\x16\xf7\x0c\x5b\xeb\x66\xc5\x48\x15\xda\xc7\x45\x9e\x28\xb0\x12\xfc\xe4\xa9\x44\x0f\x8e\x2a\xd5\x5d\x46\x03\xbf\x93\x2d\xea\xd3\x2d\x39\x1a\xbf\x1b\x0c\x07\xc3\xc1\xa8\xd8\x92\x51\x37\xc1\x80\x4d\x9d\xbd\xb0\x1c\x0a\x97\xca\x1e\xb6\xc4\x33\x9e\x27\xab\xe2\x10\x18\x97\xa2\xe1\x25\x9d\x5d\xab\xd4\x88\xcc\x97\x02\x6b\xd3\x22\x22\x1f\x50\xab\xdc\x26\x1a\x6a\xe1\xe5\x2d\xc5\x3d\x51\xad\xf2\x35\x5b\x28\x36\xc7\x95\x90\x95\x5e\xed\x86\x83\xb7\x83\x61\x4b\xaf\x4e\x20\x7c\xf4\x72\xc1\x1a\x77\x46\x24\xf0\xfc\x1b\x7a\x55\x4c\x88\xa2\xfd\xd4\x59\x82\x07\x8a\xd9\xe3\xcf\xff\x94\x92\x85\xbb\x8b\xe4\xce\xea\x7d\xcc\xd6\x42\x7b\x78\xe6\x37\x2f\x77\x40\x27\x94\x83\x0b\xbf\xec\xd1\x0d\x04\x21\xd3\x4a\x0a\x1f\xb3\x71\xaf\x53\xb7\xd3\x9a\x15\xf5\x7a\x77\xa8\x57\x5d\xab\xd1\xa7\x50\xaa\xaa\x33\xaf\xcb\x27\xc1\xd7\xb2\x25\x2e\xbc\x17\x33\x54\xae\x28\xad\x16\xde\x97\x2e\x7e\xef\x09\x0c\x97\x3a\xf7\x04\xc8\x25\x2a\x52\x52\xe8\xf0\x71\x55\x48\xe4\x97\xf0\xd0\x8d\x19\x61\x1e\xc2\xb7\x2e\x81\xf6\xf7\x4b\xfb\x9d\xe2\x7c\xcc\xb4\xb2\xf9\x43\xef\xa9\x3e\xaa\xc2\xbe\x2d\x3f\x06\xbf\xd6\xaf\xc8\x03\x69\x8d\x2a\xb6\x4e\xfd\xfc\x3f\x99\x9b\xea\xf4\x62\x37\x3c\x03\x79\x11\x4f\x63\xc9\x1c\x1b\xa5\x8e\xe9\xb9\xea\x97\x11\x6b\xa0\x63\x8f\x34\xec\x9e\x1c\x06\x01\xe9\x1d\xa7\x63\xaa\x85\x32\x0b\x30\x59\x78\xe4\xd4\xe5\xaf\x3f\x59\xab\xbf\x4a\xaf\x46\xe9\xae\x3c\x09\x9b\x08\x4c\xae\x1a\x53\xdf\x11\x82\xf3\x52\x70\x8c\x82\xbd\xfd\xa4\x7a\xff\x04\x00\x00\xff\xff\xc0\xab\x7b\x66\xa8\x0f\x00\x00")

func assetsPrometheusPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusPrometheusYaml,
		"assets/prometheus/prometheus.yaml",
	)
}

func assetsPrometheusPrometheusYaml() (*asset, error) {
	bytes, err := assetsPrometheusPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/prometheus.yaml", size: 4008, mode: os.FileMode(420), modTime: time.Unix(1596592461, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusProxySecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8a\x31\x0e\xc2\x30\x10\x04\xfb\x7b\xc5\x7e\xc0\x05\x1d\xf2\x27\x28\x90\xe8\x2f\x64\xa5\x58\x89\x9d\xc3\x77\x41\x44\x88\xbf\xa3\xd0\xd3\x8d\x66\x46\xad\xdc\xd8\xbd\xac\x2d\xe3\x79\x92\x51\x43\x33\xde\x1f\x99\x4b\x1b\x33\xae\xbc\x77\x86\x54\x86\xfe\x8a\x00\x8b\x0e\x5c\xfc\x20\x60\x3e\x7b\x52\xb3\x8c\x3e\xd5\x64\x7d\xad\x8c\x89\x9b\xa7\xca\x60\x1f\xd4\x29\x40\xd3\xca\xff\xc3\x21\x5f\xbb\xc4\x6e\xcc\xb8\x98\x3e\x36\xca\x37\x00\x00\xff\xff\x80\x76\x1c\x8b\x93\x00\x00\x00")

func assetsPrometheusProxySecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusProxySecretYaml,
		"assets/prometheus/proxy-secret.yaml",
	)
}

func assetsPrometheusProxySecretYaml() (*asset, error) {
	bytes, err := assetsPrometheusProxySecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/proxy-secret.yaml", size: 147, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xbb\x6e\x6a\x31\x10\x45\x7b\x7f\xc5\xfc\x80\xb9\x97\x74\xb8\x8b\x52\xd1\x21\x45\x4a\x3f\xc7\x6c\x38\x16\x7e\x69\x66\x40\xe2\xef\xa3\xf3\x40\x24\x42\x4a\x39\xe3\xbd\x96\xbd\x65\xee\xe9\x0b\xa2\xa9\xd5\x40\xb7\xad\xbb\xa4\x7a\x0c\xf4\x09\xb9\xa5\x08\x57\x60\x7c\x64\xe3\xe0\x88\xb8\xd6\x66\x6c\xa9\x55\x9d\x46\x22\x5d\x42\x9b\x01\xc6\x9b\xd6\x51\x75\x4c\x27\xdb\xa4\xf6\x6f\x3e\xa9\x67\x1f\x21\xe6\x15\x51\x60\xbe\x72\x41\x20\x19\x8b\xef\xd2\x0a\x6c\xc4\x55\x7d\x81\x41\x06\x56\x78\xcb\xea\x88\x32\x0f\xc8\xab\xfe\x19\x0b\x24\x38\x8e\x6c\xbe\xb0\x5c\x60\x3d\x73\x84\x23\xfa\xdb\xe8\xb4\x23\x4e\xa6\xde\xc4\x66\xa5\x5f\x89\xd1\xac\xeb\x72\x45\x13\x0b\xb4\xfb\xbf\xdb\xce\xa3\xb1\x9c\x61\x87\x79\xf9\x08\x3d\x20\x19\x38\xfe\x66\xde\x5e\x98\x35\xa3\xc8\x88\xd6\x64\xa9\xc1\xbd\x87\x1f\x5d\x5e\xaa\x3d\x1f\x3c\x91\x3a\x7d\xc4\xfb\xe9\x94\x6a\xb2\x7b\xa0\x8f\x9c\x50\x6d\x7f\x70\x44\x76\xef\x98\x16\x57\x35\xc8\xfe\xe0\xbe\x03\x00\x00\xff\xff\x4b\x07\xc2\x9b\xb8\x01\x00\x00")

func assetsPrometheusServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusServiceYaml,
		"assets/prometheus/service.yaml",
	)
}

func assetsPrometheusServiceYaml() (*asset, error) {
	bytes, err := assetsPrometheusServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/service.yaml", size: 440, mode: os.FileMode(420), modTime: time.Unix(1596590601, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusServingCertsCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x31\x6e\xc3\x30\x0c\x46\xe1\x5d\xa7\x20\xb4\x4b\x45\x57\xad\x9d\xbb\x66\xff\x43\xd3\x36\x13\x9b\x12\x24\xda\xe7\x0f\x02\x23\x19\x1f\xf0\x3e\x34\xbd\x49\x1f\x5a\xad\xd0\xf9\x1b\x26\x38\x4a\x20\x1a\xd2\x4f\x65\x49\x8c\xcc\xdd\x0b\xc5\x18\x9e\x6a\x53\xa1\xbf\x6a\xb3\x2e\xff\x68\x61\x17\xc7\x67\x87\x59\x75\xb8\x56\x1b\xef\xfc\xfa\x8c\xad\xad\xc8\xb5\x89\x8d\x55\x67\xcf\x5a\x7f\xd4\x1e\xc2\x9e\x18\xf7\xc3\xa6\x4d\x0a\x45\xef\x87\xc4\x40\x64\xd8\xa5\x5c\xd4\x96\xc4\xd2\x7d\x24\x46\xba\xbe\xf0\x0a\x00\x00\xff\xff\x34\x3d\xf3\xe8\xaa\x00\x00\x00")

func assetsPrometheusServingCertsCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusServingCertsCaBundleYaml,
		"assets/prometheus/serving-certs-ca-bundle.yaml",
	)
}

func assetsPrometheusServingCertsCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusServingCertsCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus/serving-certs-ca-bundle.yaml", size: 170, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x4d\x6f\xdb\x38\x13\xbe\xe7\x57\x10\x3d\xbf\xb4\xf5\x65\x59\x22\x60\xe0\xcd\xba\xde\xed\x02\x4d\x1a\xac\x8b\xdd\xa3\x31\xa2\x46\x36\x61\x8a\x54\xc9\x91\x11\xa3\xe8\x7f\x5f\xc8\x4e\x1c\xc9\x71\x9a\xa4\xc7\xd5\xc9\x1e\x3e\x33\xf3\xcc\xc7\x23\x11\x1a\xf5\x37\x3a\xaf\xac\x11\x0c\x9a\xc6\x8f\x77\xe1\xd5\x56\x99\x52\xb0\x8f\xd8\x68\xbb\xaf\xd1\xd0\x55\x8d\x04\x25\x10\x88\x2b\xc6\x34\x14\xa8\x7d\xf7\x8b\x75\x0e\xa3\x6d\x5b\xa0\x33\x48\xe8\x47\xca\x8e\xa5\xad\x1b\x6b\xd0\x90\x60\xd2\x1a\x72\x56\x6b\x74\x2f\x60\x0d\xd4\x28\x58\xe3\x6c\x8d\xb4\xc1\xd6\x73\xdb\xa0\x03\xb2\x2f\xe1\x77\x8f\x3c\x77\xc1\x28\xce\x46\xe1\x15\x63\x2f\x87\xf0\x0d\xca\x8e\xa4\xc3\x46\x2b\x09\x5e\xb0\x0e\xef\x51\xa3\x24\xeb\x8e\xf4\x6b\x20\xb9\xf9\xdc\xab\xe7\x7d\x15\xbd\xb7\x26\xc2\xba\xd1\x40\xf8\x90\xbc\xd7\xd3\xee\xd1\x03\x1e\xef\x65\xf2\xfe\xfe\xbe\xb9\xc7\x8c\x3d\xf6\xb2\x7b\xba\xcc\xa0\x0c\xba\x13\x55\xce\xc0\xad\x7b\xc4\x39\xe3\xbc\x0b\xaa\x91\xb8\x47\xb7\x53\x12\x67\xdd\x7f\xee\xf7\x9e\xb0\x1e\x3f\x9c\x0d\xf0\xda\xae\xc9\x7a\x2a\xd1\xb9\x19\xb9\x16\x07\x87\xd2\x9a\x4a\xad\xb9\x43\x6d\xa1\x44\xc7\x55\x0d\x6b\x9c\x7d\x6b\x61\xdf\x31\xb6\x0d\x1a\xbf\x51\x15\x75\x00\x04\x8f\xbc\xc4\xdd\xd8\xca\x86\xef\x92\x51\xc0\xc1\x51\x67\xf8\xbf\xdf\x40\x34\x49\x45\x11\x44\x79\x58\x24\x15\x40\x52\x85\x79\x1c\x21\xc4\xd3\xbc\x92\x98\x87\x79\x5e\xa4\x79\x56\x25\x80\x45\x90\x85\x49\x1e\x67\x69\x04\x55\x9a\x4e\xc2\x1c\x27\x93\x49\x28\x27\x71\x5c\xe6\x03\x62\xbd\xd6\x9e\x71\xfc\x45\x76\x53\x19\x85\x49\x96\xc8\x3c\xae\xa2\x20\x4e\xa0\xac\x64\x56\xa5\x21\x84\x88\x61\x3e\x2d\x92\x69\x50\x94\x51\x1c\x4f\x65\x94\x94\x10\x97\x71\x8a\x79\x3e\xc9\xf3\x38\x4a\xf2\x2c\x2b\xa6\xd9\xd5\x80\x5e\x37\x7f\xdf\x80\x44\x3f\xfb\xfe\xfd\xf6\xfa\x66\xb1\xbc\xbb\x9e\x2f\x7e\xfc\x78\xa9\x06\x65\x3c\x81\x91\xf8\x36\x47\xd0\xe8\xa8\x06\x03\xeb\x6e\x24\xef\x72\x3d\x7a\x71\xe9\x4a\x3f\xab\x40\xfb\xa7\x71\x1f\x46\x2b\x18\xfb\xb5\xf6\x45\x59\x9a\x14\x12\x82\x3c\x9d\x66\x58\x66\xd3\x30\x4a\x52\x88\x83\x34\x29\x42\xc0\x34\x9f\xa6\xe1\x24\xc8\x72\x29\x63\x28\xe4\x34\x8b\xd2\xb4\x4c\xab\x69\x94\x56\x98\xc4\x61\x08\x93\xe2\x44\xe3\x75\xe5\x34\xd6\xd1\x60\xe7\x4f\xba\xb8\xb3\x8e\x04\xcb\x82\x2c\x38\x9d\x3e\x06\xdc\x10\x35\x27\xa3\x43\x6f\x5b\x27\xb1\x17\xa5\x33\x7e\x6b\xd1\xd3\xc0\xc6\x98\x6c\x5a\xc1\x26\xf5\xc0\x56\x63\x6d\xdd\x5e\xb0\x34\xb8\x51\xa7\x03\x8f\xb2\x75\x8a\xf6\x73\x6b\x08\xef\x49\xb0\xef\x4f\x8d\x27\x74\xb5\x32\x40\xca\x9a\x1b\xf4\x1e\xd6\x78\x67\xb5\x92\x7b\xc1\x7e\x07\xad\x0b\x90\xdb\xaf\xf6\xb3\x5d\xfb\x2f\x66\xe1\x5c\xaf\xd2\x9d\xd5\x6d\x8d\x37\xb6\x35\xc3\x82\xeb\xce\x72\x07\xb4\x11\x6c\x8c\x24\xc7\xa4\xfd\xb8\x71\x6a\x07\x84\xcf\x0a\xbf\xd0\x49\x4e\xda\x0f\x0a\x87\xf2\x8b\xd1\x7b\xc1\xfa\x0b\x71\xe9\xd5\xd2\x7b\x55\x0c\xec\x87\xda\x91\x6b\xe5\x09\x0d\x87\xb2\x74\xe8\xfd\x4c\x64\x49\x12\x0f\x70\xa4\x3d\x97\xaa\xd9\xa0\xe3\xbe\x55\x84\x7e\xf6\xf5\xf3\x72\xb5\x98\x7f\xfc\xb4\x58\xfd\xb5\xbc\x5e\xfd\xf3\xe7\xd7\x4f\xab\xeb\xc5\x72\x15\x46\xd9\xea\x8f\xf9\xcd\x6a\xf9\xe9\x3a\x9a\xa4\xff\x7b\x42\x2d\xe6\x1f\x5f\xc1\x3d\x8b\x33\xff\x6d\xfe\xa6\x38\x17\x71\x3f\x89\x36\xa8\xac\x6d\x3c\x39\x84\x7a\xd6\xed\x99\x17\xe3\xf1\x85\xb6\x8f\x06\xaa\x1c\xf9\x9d\x14\xdd\xaa\x8e\x9f\xb7\x08\x1d\xf1\x4a\x69\x9c\x9d\x4f\xb7\xfb\x3d\x92\x8e\x9e\xb9\x3c\x9c\xf3\x2d\xee\x7f\xe2\xb9\xc5\xfd\xb9\xdc\x1f\xd5\x2e\xad\x43\xeb\x0f\x1f\x08\xee\x0a\x90\xdd\xcb\xe9\x7e\x2f\x76\xc1\x68\x32\x0a\xce\xc4\x79\x06\x7a\xbb\x30\xfb\xfb\xd0\x17\xa6\xff\x65\x65\x86\x97\x95\x99\xfc\x97\x95\x79\x29\xcf\xf1\x1b\x58\x43\xe3\xc7\xa7\x58\x87\x35\x92\xc0\x8b\xd6\x94\xfa\x79\xfa\x01\xce\x5f\x04\x5e\xce\x6f\x6c\x89\xcb\xc1\x65\xae\x7b\x0a\x24\x38\xbb\xd0\x58\x2f\x98\x56\xa6\xbd\x7f\xda\x1f\x5b\x22\x77\x56\xe3\x19\xb2\x06\x4f\xe8\x04\xfb\xf0\xe1\x01\xda\x38\x65\x0f\x33\xd3\xe0\xfd\xed\x81\xef\xf1\x0a\xc3\xa5\x6e\x3b\x2c\x97\x4e\x91\x92\xa0\xaf\x5e\x1b\xf2\xc3\x3d\xe8\x5a\xca\xae\x67\xc7\x58\x0e\xcb\x0d\x10\xaf\xc1\x6d\x91\x1a\x0d\x12\xf9\xcb\x5f\x1c\xb2\xba\xfb\xaf\xac\xe9\xdd\xbb\xb0\xaa\x50\x92\x60\xb7\x76\x29\x37\x58\xb6\xbd\xbe\x6d\x71\x2f\x5e\xa9\xf4\x84\x7d\x4c\x25\xd8\xe2\x5e\x79\x7a\x1c\xfe\x71\xbd\x7a\xe9\xde\xb6\x31\x1e\xa5\x43\xea\xcb\xe4\x68\xb9\x7d\x83\xf7\x41\xad\x95\x5a\xdf\x40\x23\xde\xbf\x2b\xaf\xc0\xfe\x0d\x00\x00\xff\xff\x06\x1e\x97\x38\xea\x0c\x00\x00")

func assetsPrometheusOperatorDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorDeploymentYaml,
		"assets/prometheus-operator/deployment.yaml",
	)
}

func assetsPrometheusOperatorDeploymentYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/deployment.yaml", size: 3306, mode: os.FileMode(420), modTime: time.Unix(1596574552, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorOperatorCertsCaBundleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x31\x0e\xc2\x30\x0c\x46\xe1\x3d\xa7\xb0\xb2\x27\x88\x35\x2b\x33\x2b\xfb\x4f\xea\x52\x43\x6b\x47\x89\xdb\xf3\x23\x84\x60\x7c\xd2\xf7\xd0\xe4\xc6\x7d\x88\x69\xa1\xe3\x1c\x26\x38\x4a\x20\x1a\xdc\x0f\xa9\x9c\x2a\x72\xed\x5e\x28\xc6\xf0\x12\x9d\x0a\x5d\x4c\x67\x79\x5c\xd1\xc2\xc6\x8e\x1f\x87\xaa\x39\x5c\x4c\xc7\x27\xff\x7f\xc6\xda\x16\x64\x6b\xac\x63\x91\xd9\xb3\xd8\x49\xf4\xc9\xd5\x53\xc5\x7d\xd7\x69\xe5\x42\xd1\xfb\xce\x31\x10\x29\x36\x2e\x64\x8d\x3b\xdc\x7a\xaa\xdc\x7d\xa4\x8a\xf4\x85\xe1\x1d\x00\x00\xff\xff\x7e\x2f\xba\xf8\xab\x00\x00\x00")

func assetsPrometheusOperatorOperatorCertsCaBundleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorOperatorCertsCaBundleYaml,
		"assets/prometheus-operator/operator-certs-ca-bundle.yaml",
	)
}

func assetsPrometheusOperatorOperatorCertsCaBundleYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorOperatorCertsCaBundleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/operator-certs-ca-bundle.yaml", size: 171, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPrometheusOperatorServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x41\x6e\xea\x40\x0c\x86\xf7\x39\x85\x2f\x90\x3c\x10\x2c\xd0\xdc\xe0\x6d\x2a\xa4\x4a\xdd\x3b\xc3\x5f\x18\x31\xb1\x47\xb6\xa1\xd7\xaf\x92\x42\x55\xa9\xca\xb2\x4b\xdb\xdf\xf7\xdb\x33\xdc\xca\x1b\xcc\x8b\x4a\xa2\xfb\xb6\xbb\x16\x39\x25\x7a\x85\xdd\x4b\x46\x37\x21\xf8\xc4\xc1\xa9\x23\x62\x11\x0d\x8e\xa2\xe2\x73\x49\xe4\x5f\xd0\x30\x22\x78\xd0\x06\xf1\x4b\x79\x8f\xa1\xe8\xbf\x65\x22\xe7\x3e\xc3\xa2\x77\x64\x43\xf4\xc2\x13\x12\x35\xd3\x09\x71\xc1\xcd\x7b\x6d\x30\x0e\xb5\x3e\xaa\x77\x44\x95\x47\xd4\x47\x32\xb7\x36\x5c\x6f\x23\x4c\x10\xf0\x39\x31\xeb\xd4\x54\x20\x91\x28\xab\x84\x69\xad\xb0\x15\x76\x75\xd3\x0a\x7f\xff\x7e\xfe\x66\xd8\x1d\x86\x6d\x47\xb4\x1e\xe1\x0d\x79\x3e\x32\xd7\x9b\x07\xec\xff\x31\xd1\x8b\x0a\x3a\xa2\xa6\x16\xcb\xfd\xfd\x43\xbf\x44\x34\x5f\x76\xce\xa3\x44\x87\xfd\x7e\xb7\x94\xc1\x76\x46\x1c\x97\xe6\x13\x7a\x4a\x1f\x18\x7f\x2a\x9b\xc3\xe6\x97\xf2\x68\x3a\x2a\x72\xa8\xfd\xed\x97\x7d\x06\x00\x00\xff\xff\x88\x7e\x8f\x4a\x1f\x02\x00\x00")

func assetsPrometheusOperatorServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsPrometheusOperatorServiceYaml,
		"assets/prometheus-operator/service.yaml",
	)
}

func assetsPrometheusOperatorServiceYaml() (*asset, error) {
	bytes, err := assetsPrometheusOperatorServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/prometheus-operator/service.yaml", size: 543, mode: os.FileMode(420), modTime: time.Unix(1595645823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRazeeJobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x50\xb1\x6e\xeb\x30\x0c\xdc\xfd\x15\x42\xe6\xe7\x04\xc6\x43\x17\x6d\x5d\x8b\x22\xe8\xd4\x9d\xa6\x2f\x35\x6b\x49\x54\x25\xda\x80\xfb\xf5\x85\x13\xa7\xc8\x52\x4e\x87\xe3\xdd\xf1\x40\xca\xf2\x8e\x52\x45\x93\x77\x3d\x19\x8f\xa7\xa5\x6b\x26\x49\x83\x77\x2f\xda\x37\x11\x46\x03\x19\xf9\xc6\xb9\x44\x11\xde\x15\xfa\x06\x06\xe4\xa0\x6b\xfb\xa9\xfd\xce\xd7\x4c\xbc\x2d\xc7\xd8\x46\x2a\x13\x2c\x07\x62\x34\x35\x83\x37\xab\x21\xe6\x40\x86\x0d\x3b\x77\x67\xaf\x18\x65\x11\xc6\x33\xb3\xce\xc9\xce\xb7\x13\x18\x46\xb2\xc7\xa0\x56\x33\x0a\x99\x96\xdd\xc5\x9a\x8c\x24\xa1\xd4\x7b\x4e\xfb\x67\xbd\xdb\x48\xa4\x0f\x78\x77\xf8\x9a\x69\x3d\x8a\x9e\xae\xba\xd3\xa3\x7a\x40\x30\xf2\xdd\xb1\x3b\xfe\x3f\xfc\xda\x58\x63\xa4\xed\x19\x92\xaa\x51\x08\xff\xe6\xb4\xa3\x5d\x52\x50\x8d\x8a\xbd\x69\x10\x5e\xbd\x3b\x63\xc1\x56\xb2\x27\x9e\xf4\x72\x79\x95\x28\xe6\xdd\x53\xf3\x13\x00\x00\xff\xff\x91\xe6\x95\xeb\x67\x01\x00\x00")

func assetsRazeeRazeeJobYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRazeeJobYaml,
		"assets/razee/razee-job.yaml",
	)
}

func assetsRazeeRazeeJobYaml() (*asset, error) {
	bytes, err := assetsRazeeRazeeJobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/razee-job.yaml", size: 359, mode: os.FileMode(420), modTime: time.Unix(1591133712, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRazeeNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\x28\x4a\xac\x4a\x4d\x05\x04\x00\x00\xff\xff\x0e\x49\xcb\x5c\x36\x00\x00\x00")

func assetsRazeeRazeeNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRazeeNamespaceYaml,
		"assets/razee/razee-namespace.yaml",
	)
}

func assetsRazeeRazeeNamespaceYaml() (*asset, error) {
	bytes, err := assetsRazeeRazeeNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/razee-namespace.yaml", size: 54, mode: os.FileMode(420), modTime: time.Unix(1591133684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeRemoteResourceS3Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x93\xe2\x46\x0c\xbd\xf3\x2b\x74\xe3\x64\x8c\x61\x80\xd9\xbe\x4d\x0d\x9b\x4a\x2a\x61\x97\x02\x36\x39\x4e\x89\x6e\x81\xbb\xb6\xbf\xb6\xbb\xcd\xc4\x49\xe5\xbf\xa7\x1a\xc3\xac\xed\x99\xd9\x45\x27\x97\xf4\xf4\x24\x3d\xa9\x8d\x4e\xfe\x49\x3e\x48\x6b\x18\xa0\x73\x21\x3f\x15\x83\xaf\xd2\x08\x06\x4b\x72\xca\xd6\x9a\x4c\x1c\x68\x8a\x28\x30\x22\x1b\x00\x18\xd4\xc4\xc0\x93\xb6\x91\x3c\x05\x5b\x79\x4e\x61\x9a\x71\x6b\xa2\xb7\x4a\x91\x1f\x00\xa0\x31\x36\x62\x94\xd6\x84\x94\x02\xe0\xf1\x1f\xa2\x91\xb4\xf9\x51\xc6\xcc\x93\xb3\x0c\x86\x65\x8c\x2e\xb0\x3c\xb9\xca\x6a\x3f\xe2\x56\xe7\x67\x58\x26\x6d\xbe\x39\xd3\x6f\x2e\xf4\xdb\xe9\xe8\x28\xe3\xb0\xcb\xc4\xad\xd6\x32\x66\xa1\x44\x06\xc3\xd9\x62\x51\x1c\xf6\xd3\x79\x31\xe7\xbc\x10\x38\xf9\x70\x7f\x3f\x9f\xcd\x0b\x9a\xde\x4f\x0e\xc5\xec\x20\xa6\xc5\x1d\x5f\xcc\xc4\x87\xc4\xa1\x70\x4f\xaa\xdd\x57\xfe\x8c\x91\x97\xd9\x75\x18\x06\x43\x25\x23\x0d\x07\xc1\x11\x4f\x30\x4f\x4e\x49\x8e\x81\x41\x31\x00\x08\xa4\x88\x47\xeb\x1b\x02\x9d\x52\xff\x68\x31\x42\x52\xf1\x67\xfa\x84\xe8\x31\xd2\xb1\x6e\x52\x62\xed\x88\xc1\xc6\x2a\x25\xcd\xf1\x8b\x13\x18\x69\x00\x10\x49\x3b\x85\x91\x2e\x75\x5a\x1b\x48\xa6\x3a\x25\x6f\x2a\xda\xd8\x0f\x27\x6e\x20\xb7\x6c\x18\xe0\xaa\xce\xf9\x9b\xfc\x49\x72\x7a\xe0\xdc\x56\x26\x7e\x6a\xf2\x53\x21\x71\xbe\xa1\x2c\xe0\x05\x98\x38\x50\x1a\xf2\xad\xd6\x33\x90\x1a\x8f\xa9\x89\x6f\x15\xd6\x69\xb5\x4d\x8f\xfd\x06\xd8\x78\x34\x1b\x4d\x86\x2f\x79\x69\x31\x97\x18\x6b\x39\x01\x94\xd4\x32\xf6\x7c\x49\x41\x6d\x7d\xcd\x60\x32\x1e\xaf\x64\x2f\xc6\x5d\xc5\xa0\x18\x8f\x75\xc7\xef\xe9\x5b\x45\xe1\x7d\xa6\xc5\xec\x6d\xa2\xbb\x0e\x0f\x99\x53\x97\x20\xbb\x08\xfc\xb8\x59\x3e\xfd\xf5\xb0\x7b\xfc\xf5\x69\xf7\xdb\xea\xe3\xe7\x2f\xbb\xa7\xed\xc7\xc7\xcf\x9f\x96\xdb\x1e\xe7\x09\x55\x45\xbf\x78\xab\xfb\x7d\x9c\xe5\x3c\xc8\xe3\x0a\xdd\xef\x54\x6f\xe8\xf0\x1a\xf0\xb2\xcc\xd6\x32\xec\x89\xbc\x97\x82\xc2\x1b\xe8\xaf\x54\xdf\xde\x58\x32\xeb\xd2\x2b\x47\xc5\x20\xfa\x8a\x5a\x80\xf3\x4e\xd7\x95\x52\x6b\xab\x24\xaf\x19\x3c\xa8\x67\xac\xdb\x35\x6f\x3b\xb3\xc6\x94\x3c\x91\xa1\x10\xd6\xde\xee\xa9\x3b\x26\xfd\xfd\xfd\x0e\xbf\xeb\xa2\x35\x1a\xf1\x5a\x8f\x0c\x42\x99\x5f\xc9\x46\xa1\xec\x00\xa4\x91\x51\xa2\x5a\x92\xc2\x7a\x4b\xdc\x1a\x11\x18\x4c\xc7\x1d\x8c\x23\x2f\xad\x78\x89\x16\xb3\x6e\x38\x4a\x4d\xb6\x8a\xef\x65\x1f\x50\xaa\xca\xd3\xae\xf4\x14\x4a\xab\x44\xf3\x47\xb9\xda\xc9\xaa\x4a\xd3\x2a\x3d\xa1\xd0\x3f\x19\x9d\xbc\x6b\x8c\x25\x83\xbc\x0a\x3e\x0f\x9e\xe7\xe8\x5c\x2e\xec\xb3\x51\x16\x45\xc6\x91\x97\xd4\x9b\xb7\x51\xf8\x1c\xc9\x1a\xf2\x1b\x59\x9b\xbb\x7a\x93\xad\x7d\x49\x1d\x58\x53\xa0\xf3\xae\x7f\x58\x9f\xb4\x8b\xf5\x52\x7a\x06\xff\xfe\xf7\x2a\xe7\xdd\x2a\xd0\xbe\xfa\xae\x48\x37\x64\x02\x08\x3a\x60\xa5\xe2\xca\x0a\x62\x70\x37\xe9\xae\xa7\x77\xcc\xff\x07\x00\x00\xff\xff\x74\x67\xf9\x34\x1b\x07\x00\x00")

func assetsRazeeRemoteResourceS3YamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeRemoteResourceS3Yaml,
		"assets/razee/remote-resource-s3.yaml",
	)
}

func assetsRazeeRemoteResourceS3Yaml() (*asset, error) {
	bytes, err := assetsRazeeRemoteResourceS3YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/remote-resource-s3.yaml", size: 1819, mode: os.FileMode(420), modTime: time.Unix(1595641434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRazeeWatchKeeperYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xdf\x73\x1a\x47\x0c\x7e\xe7\xaf\xd0\xf0\x7e\xdc\x81\x83\x93\xee\x1b\x53\x68\x33\x13\xe3\x30\xd8\x49\x9b\xbe\x30\xf2\x9e\x8e\xdb\xf1\xfe\xca\xee\x1e\xe9\xf5\xaf\xef\x2c\x87\xf1\x62\x8e\x34\x9e\xe9\x4c\xf6\x89\xd3\x27\x7d\xfa\x24\x21\xa1\x15\x9f\xc9\x79\x61\x34\x03\xb4\xd6\xe7\xbb\xf1\xe0\x51\xe8\x92\xc1\x9c\xac\x34\xad\x22\x1d\x06\x8a\x02\x96\x18\x90\x0d\x00\x50\x6b\x13\x30\x08\xa3\x7d\xfc\x04\xd8\x3d\x85\x0f\x0b\x7c\xf7\xae\xa4\xe9\xe4\xfa\xaa\xe2\xc4\x7f\xe1\xd5\xc3\xb4\xa2\x29\x5e\x55\xe3\xe9\xdb\x09\x11\xbf\xc2\x92\x5f\xbf\x1d\x4f\x86\xfb\x38\x87\xff\x10\x8d\x84\xc9\xb7\x22\x64\x8e\xac\x61\x30\xac\x43\xb0\x9e\xe5\xd1\x54\x37\x0f\x23\x6e\x54\xbe\x77\xcb\x84\xc9\xff\xc0\xc0\xeb\xec\x91\xc8\x92\x1b\x6d\x45\x78\xc1\xc2\x8d\x52\x22\x64\xbe\xc6\x57\x2a\xd1\xa8\x88\xc1\xb7\x84\x7d\x00\x20\xf1\x81\xe4\xa1\xc0\x7d\x8a\xbc\x73\x70\xe4\x4d\xe3\x38\x31\x18\x4a\x11\x68\x38\xf0\x96\x78\x74\x73\x64\xa5\xe0\xe8\x19\x8c\xf7\x5f\x3b\x11\x9b\xf2\x5e\xf8\x60\x5c\x7b\x23\x94\x08\x0c\x8a\x01\x80\x27\x49\x3c\x18\xd7\x51\xab\x48\x7a\x93\xe4\x82\x38\x84\x33\x35\x3e\x38\x0c\xb4\x6d\x3b\x9f\xd0\x5a\x62\xb0\x36\x52\x0a\xbd\xfd\x64\x4b\x0c\x34\x00\x08\xa4\xac\xc4\x40\x07\xe2\x64\x62\xf1\xc9\x93\x1c\xfd\x59\xba\xf7\xdd\x6a\x3b\x97\xde\x8e\x01\x3c\xb5\x62\xff\x9b\xdc\x4e\x70\x9a\x71\x6e\x1a\x1d\x6e\xcf\x02\x32\x8f\x07\x4f\x6e\x74\x40\xa1\xc9\x1d\xd5\x65\x40\x7a\xf7\x2c\x35\x1a\xba\x8c\x77\xf7\xb3\xf5\xfd\x66\xbe\xb8\x99\x7d\xd9\x2c\x67\x7f\x26\x1e\x00\x3b\x94\x0d\xfd\xe6\x8c\x62\x27\xe6\x3d\x7f\x25\xb6\x4b\xb4\x1f\xa8\x5d\x53\xf5\x12\xee\xab\x26\xeb\x62\xce\x3c\x1f\xa9\xfd\xbe\x88\xf8\x8c\x8d\xbb\x81\x92\x41\x70\x0d\xf5\x54\x71\x3b\x5b\x2e\xee\x56\xb3\x5f\x17\x3f\xa6\xbf\x12\x24\xcb\x5e\xe1\x7b\x64\x85\xa1\x66\xc7\x71\x8f\x62\x0a\x6f\x91\xf7\x25\x5e\xcf\xfe\x5a\x2c\xe6\xb3\xbb\xf7\x9b\x4f\xeb\x9b\x9f\xd3\xbc\x4b\x12\xce\x25\x7e\x5c\xff\xbe\xf9\xb0\xf8\xf2\x63\x32\x3d\x71\x47\xe1\x15\x1a\xbb\x80\xff\xd2\x78\xae\xe1\x38\xc3\x8f\xf3\xc5\x66\x71\xfb\xf9\x5c\x1e\x83\xa1\x75\xa6\x6c\x78\xfc\x17\x0c\x8f\xb8\x50\xb8\x8d\xd8\xd7\x06\xdb\x78\xad\xd2\x2d\xeb\x34\xb1\x62\x34\x1d\x4d\x5e\x44\xac\x1a\x29\x57\x46\x0a\xde\x32\x98\xc9\x6f\xd8\xfa\xc1\xe5\xaa\x9e\x57\xf8\xb0\xb6\x3e\xed\x85\x8c\x37\xc8\x9f\x76\x47\x91\x32\xae\x65\x30\x2d\x8a\xa5\x38\x41\xb8\x6d\x18\xbc\x29\x0a\x95\x58\x1d\x7d\x6d\xc8\x5f\xe2\x18\xf7\x73\x4c\x13\x0a\x29\x76\xa4\xc9\xfb\x95\x33\x0f\x94\xb2\xd0\xdf\xcf\x97\xe3\x10\x6b\x94\x42\x5d\x9e\x1a\x33\xf0\x75\xfe\x44\x32\xf2\x75\x02\x0a\x2d\x82\x40\x39\x27\x89\xed\x1d\x71\xa3\x4b\xcf\xe0\xba\x28\x12\x17\x4b\x4e\x98\xf2\x08\x5e\x9d\x80\x41\x28\x32\x4d\x48\xd0\x04\xac\x50\xc8\xc6\xd1\x7d\xed\xc8\xd7\x46\x96\xdd\x8d\xef\xde\xce\xc8\x46\xd1\x32\x5e\xb9\xa4\x31\x19\xa8\x68\xe9\x96\x33\x6f\xbc\xcb\xbd\xe3\x39\x5a\x9b\xef\xc7\x90\x59\x23\x65\x92\xa0\x9b\x65\x0f\x74\x99\x47\x1b\x9d\x1d\x97\xbd\x3c\xe3\xea\x85\x3b\xad\xc9\x9d\x3d\xae\x77\xda\xe7\x92\x2a\x6c\x64\x58\x9a\x92\x18\xbc\x99\x14\x67\xdc\x27\x9b\xd4\x23\xfa\x42\x35\xff\x4b\xba\x0b\x65\xf7\x16\xfd\x6f\x00\x00\x00\xff\xff\x5e\x39\x40\x98\xdb\x08\x00\x00")

func assetsRazeeWatchKeeperYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRazeeWatchKeeperYaml,
		"assets/razee/watch-keeper.yaml",
	)
}

func assetsRazeeWatchKeeperYaml() (*asset, error) {
	bytes, err := assetsRazeeWatchKeeperYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/razee/watch-keeper.yaml", size: 2267, mode: os.FileMode(420), modTime: time.Unix(1595641434, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReporterJobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x8f\xd4\x3c\x0c\xc6\xef\xfd\x14\x96\xde\xc3\x5c\xde\x4c\x77\x85\xe0\x90\x1b\x57\xc4\xc2\x4a\x20\x2e\x88\x83\xeb\xba\xdb\x30\xf9\x27\xc7\xad\xd8\x6f\x8f\xda\x6e\xd1\xb4\x33\x2c\x33\xa7\x89\xfb\x8b\x1f\x3f\x76\x12\xcc\xee\x1b\x4b\x71\x29\x5a\x68\x50\xa9\xaf\xc7\xfb\xea\xe4\x62\x6b\xe1\x43\x6a\xaa\xc0\x8a\x2d\x2a\xda\x0a\x20\x62\x60\x0b\xd2\x07\x13\x58\x59\x8c\x70\x4e\xa2\x15\x80\xc7\x86\x7d\x99\x10\x80\x80\x72\x62\xcd\x1e\x89\x8f\xc2\x6d\x8f\x7a\xa4\x14\xea\x85\xb5\x70\x50\x19\xf8\x50\x95\xcc\x34\xf1\x94\x42\xf6\xac\x2e\xc5\x62\xe1\xbe\x02\xc8\x28\xe8\x3d\x7b\x57\xc2\x12\x68\x90\x4e\xa9\xeb\x3e\xba\xe0\xd4\xc2\xdb\x0a\x40\x39\x64\x8f\xca\x8b\xde\x9a\x69\xfe\xcf\x32\x3a\xe2\xf7\x44\x69\x88\x6a\x61\xd1\x37\x67\x25\x99\x94\x59\x50\x93\xbc\xec\x10\x2e\x8a\xa2\x8f\xc9\x3b\x7a\xb6\xf0\x89\x47\x5e\x3f\x51\x8a\x8a\x2e\xb2\x94\x35\x3d\x80\x59\x7b\x30\xbb\xf9\x83\x4e\x3f\x17\xf0\x89\x37\x92\x8b\xe0\x15\xf4\x3f\xc0\xb6\x75\x93\x69\xf4\x80\xf2\x54\x00\x85\xa7\x18\xb7\xe0\x22\x74\x48\x9a\xe4\xf9\x6c\xc3\xc4\xd8\xb3\x35\xc0\xf7\xcd\x0a\xe0\xb0\xc8\x1c\xfe\xdf\xc7\x8d\x21\xec\x9c\xe7\xcb\x2f\x35\x2b\xd5\x94\x62\xe7\x9e\x02\xe6\x52\xaf\x9d\x31\xc4\xa2\x86\xd0\x34\x43\x6c\x3d\xd7\x2f\x4d\x35\x84\x47\xba\xae\xa0\xe9\xc4\xf1\x15\x91\x35\x03\x2e\x73\xa9\x67\x7e\xc7\xfe\x38\x5b\x8d\xc9\x0f\x81\x1f\x26\x76\x67\xdb\x40\x98\xa2\x8f\xa8\xbd\x85\x1b\x0d\xec\x4a\x5a\x06\xb8\x61\xcb\x5f\x61\x61\x6c\x3f\x47\xff\x6c\x61\x3a\xb6\xff\x28\x65\x67\xf3\xaa\xee\x6c\xdd\x8c\xc9\xdf\x22\xb4\xf4\x61\x73\xfc\x16\xbb\x0f\x98\xb7\x7d\xb9\xd9\xd4\x8d\xa0\x79\xa5\xdc\x2c\xe9\x27\x93\x72\xbb\x2d\xa1\xa4\x41\x88\x2f\xe6\xb5\xbd\x92\x5f\xa7\x7c\x76\xe7\x1d\x00\x87\xd6\x71\xa4\x97\xc7\x25\x4b\x0a\xac\x3d\x0f\x65\x79\x67\x1a\x2c\x7c\x4c\x99\x63\xe9\x5d\xa7\xe6\xf2\x52\x1f\xcb\x48\x17\x39\xf9\x57\x76\x82\xd3\x25\xfb\xc2\x94\x62\x5b\x2c\xbc\x79\x77\x77\x77\xc1\xe5\x79\x80\xb3\xd1\xea\x77\x00\x00\x00\xff\xff\x1c\x84\x6d\x9b\x0c\x05\x00\x00")

func assetsReporterJobYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReporterJobYaml,
		"assets/reporter/job.yaml",
	)
}

func assetsReporterJobYaml() (*asset, error) {
	bytes, err := assetsReporterJobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/reporter/job.yaml", size: 1292, mode: os.FileMode(420), modTime: time.Unix(1596593486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/metric-state/deployment.yaml":                      assetsMetricStateDeploymentYaml,
	"assets/metric-state/service-monitor.yaml":                 assetsMetricStateServiceMonitorYaml,
	"assets/metric-state/service.yaml":                         assetsMetricStateServiceYaml,
	"assets/prometheus/additional-scrape-configs.yaml":         assetsPrometheusAdditionalScrapeConfigsYaml,
	"assets/prometheus/htpasswd-secret.yaml":                   assetsPrometheusHtpasswdSecretYaml,
	"assets/prometheus/kube-rbac-proxy-secret.yaml":            assetsPrometheusKubeRbacProxySecretYaml,
	"assets/prometheus/kube-state-service-monitor.yaml":        assetsPrometheusKubeStateServiceMonitorYaml,
	"assets/prometheus/kubelet-serving-ca-bundle.yaml":         assetsPrometheusKubeletServingCaBundleYaml,
	"assets/prometheus/prometheus-additional.yaml":             assetsPrometheusPrometheusAdditionalYaml,
	"assets/prometheus/prometheus-datasources-secret.yaml":     assetsPrometheusPrometheusDatasourcesSecretYaml,
	"assets/prometheus/prometheus-rules.yaml":                  assetsPrometheusPrometheusRulesYaml,
	"assets/prometheus/prometheus.yaml":                        assetsPrometheusPrometheusYaml,
	"assets/prometheus/proxy-secret.yaml":                      assetsPrometheusProxySecretYaml,
	"assets/prometheus/service.yaml":                           assetsPrometheusServiceYaml,
	"assets/prometheus/serving-certs-ca-bundle.yaml":           assetsPrometheusServingCertsCaBundleYaml,
	"assets/prometheus-operator/deployment.yaml":               assetsPrometheusOperatorDeploymentYaml,
	"assets/prometheus-operator/operator-certs-ca-bundle.yaml": assetsPrometheusOperatorOperatorCertsCaBundleYaml,
	"assets/prometheus-operator/service.yaml":                  assetsPrometheusOperatorServiceYaml,
	"assets/razee/razee-job.yaml":                              assetsRazeeRazeeJobYaml,
	"assets/razee/razee-namespace.yaml":                        assetsRazeeRazeeNamespaceYaml,
	"assets/razee/remote-resource-s3.yaml":                     assetsRazeeRemoteResourceS3Yaml,
	"assets/razee/watch-keeper.yaml":                           assetsRazeeWatchKeeperYaml,
	"assets/reporter/job.yaml":                                 assetsReporterJobYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"metric-state": &bintree{nil, map[string]*bintree{
			"deployment.yaml":      &bintree{assetsMetricStateDeploymentYaml, map[string]*bintree{}},
			"service-monitor.yaml": &bintree{assetsMetricStateServiceMonitorYaml, map[string]*bintree{}},
			"service.yaml":         &bintree{assetsMetricStateServiceYaml, map[string]*bintree{}},
		}},
		"prometheus": &bintree{nil, map[string]*bintree{
			"additional-scrape-configs.yaml":     &bintree{assetsPrometheusAdditionalScrapeConfigsYaml, map[string]*bintree{}},
			"htpasswd-secret.yaml":               &bintree{assetsPrometheusHtpasswdSecretYaml, map[string]*bintree{}},
			"kube-rbac-proxy-secret.yaml":        &bintree{assetsPrometheusKubeRbacProxySecretYaml, map[string]*bintree{}},
			"kube-state-service-monitor.yaml":    &bintree{assetsPrometheusKubeStateServiceMonitorYaml, map[string]*bintree{}},
			"kubelet-serving-ca-bundle.yaml":     &bintree{assetsPrometheusKubeletServingCaBundleYaml, map[string]*bintree{}},
			"prometheus-additional.yaml":         &bintree{assetsPrometheusPrometheusAdditionalYaml, map[string]*bintree{}},
			"prometheus-datasources-secret.yaml": &bintree{assetsPrometheusPrometheusDatasourcesSecretYaml, map[string]*bintree{}},
			"prometheus-rules.yaml":              &bintree{assetsPrometheusPrometheusRulesYaml, map[string]*bintree{}},
			"prometheus.yaml":                    &bintree{assetsPrometheusPrometheusYaml, map[string]*bintree{}},
			"proxy-secret.yaml":                  &bintree{assetsPrometheusProxySecretYaml, map[string]*bintree{}},
			"service.yaml":                       &bintree{assetsPrometheusServiceYaml, map[string]*bintree{}},
			"serving-certs-ca-bundle.yaml":       &bintree{assetsPrometheusServingCertsCaBundleYaml, map[string]*bintree{}},
		}},
		"prometheus-operator": &bintree{nil, map[string]*bintree{
			"deployment.yaml":               &bintree{assetsPrometheusOperatorDeploymentYaml, map[string]*bintree{}},
			"operator-certs-ca-bundle.yaml": &bintree{assetsPrometheusOperatorOperatorCertsCaBundleYaml, map[string]*bintree{}},
			"service.yaml":                  &bintree{assetsPrometheusOperatorServiceYaml, map[string]*bintree{}},
		}},
		"razee": &bintree{nil, map[string]*bintree{
			"razee-job.yaml":          &bintree{assetsRazeeRazeeJobYaml, map[string]*bintree{}},
			"razee-namespace.yaml":    &bintree{assetsRazeeRazeeNamespaceYaml, map[string]*bintree{}},
			"remote-resource-s3.yaml": &bintree{assetsRazeeRemoteResourceS3Yaml, map[string]*bintree{}},
			"watch-keeper.yaml":       &bintree{assetsRazeeWatchKeeperYaml, map[string]*bintree{}},
		}},
		"reporter": &bintree{nil, map[string]*bintree{
			"job.yaml": &bintree{assetsReporterJobYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
