// Copyright 2020 IBM Corp.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package reconcileutils

// Code generated by github.com/launchdarkly/go-options.  DO NOT EDIT.

import (
	"github.com/redhat-marketplace/redhat-marketplace-operator/pkg/utils/patch"
	"k8s.io/apimachinery/pkg/runtime"
)

type ApplyCreateActionOptionFunc func(c *createActionOptions) error

func (f ApplyCreateActionOptionFunc) apply(c *createActionOptions) error {
	return f(c)
}

func newCreateActionOptions(options ...CreateActionOption) (createActionOptions, error) {
	var c createActionOptions
	err := applyCreateActionOptionsOptions(&c, options...)
	return c, err
}

func applyCreateActionOptionsOptions(c *createActionOptions, options ...CreateActionOption) error {
	c.WithAddOwner = nil
	for _, o := range options {
		if err := o.apply(c); err != nil {
			return err
		}
	}
	return nil
}

type CreateActionOption interface {
	apply(*createActionOptions) error
}

func CreateWithPatch(o patch.PatchAnnotator) ApplyCreateActionOptionFunc {
	return func(c *createActionOptions) error {
		c.WithPatch = o
		return nil
	}
}

func CreateWithAddOwner(o runtime.Object) ApplyCreateActionOptionFunc {
	return func(c *createActionOptions) error {
		c.WithAddOwner = o
		return nil
	}
}
