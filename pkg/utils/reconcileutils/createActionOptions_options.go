package reconcileutils

// Code generated by github.com/launchdarkly/go-options.  DO NOT EDIT.

type ApplyCreateActionOptionFunc func(c *createActionOptions) error

func (f ApplyCreateActionOptionFunc) apply(c *createActionOptions) error {
	return f(c)
}

func newCreateActionOptions(options ...CreateActionOption) (createActionOptions, error) {
	var c createActionOptions
	err := applyCreateActionOptionsOptions(&c, options...)
	return c, err
}

func applyCreateActionOptionsOptions(c *createActionOptions, options ...CreateActionOption) error {
	c.AddOwner = nil
	for _, o := range options {
		if err := o.apply(c); err != nil {
			return err
		}
	}
	return nil
}

type CreateActionOption interface {
	apply(*createActionOptions) error
}

func CreateWithAlways(o bool) ApplyCreateActionOptionFunc {
	return func(c *createActionOptions) error {
		c.Always = o
		return nil
	}
}

func CreateWithPatch(o bool) ApplyCreateActionOptionFunc {
	return func(c *createActionOptions) error {
		c.Patch = o
		return nil
	}
}

func CreateWithAddOwner(o runtime.Object) ApplyCreateActionOptionFunc {
	return func(c *createActionOptions) error {
		c.AddOwner = o
		return nil
	}
}

func CreateWithCondition(o resultConditionFunc) ApplyCreateActionOptionFunc {
	return func(c *createActionOptions) error {
		c.Condition = o
		return nil
	}
}
